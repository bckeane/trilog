<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20191.19.0417.1429                               -->
<workbook source-build='2019.1.3 (20191.19.0417.1429)' source-platform='win' version='18.1' xml:base='http://localhost:9100' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <repository-location derived-from='https://10ax.online.tableau.com/t/ctkeanedev279563/workbooks/WeightChallengeIMMT2019?rev=2.2' id='WeightChallengeIMMT2019' path='/t/ctkeanedev279563/workbooks' revision='2.3' site='ctkeanedev279563' />
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
    <color-palette custom='true' name='YNHHS Corporate Color Palette' type='regular'>
      <color>#003a70</color>
      <color>#00a9e0</color>
      <color>#f3d54e</color>
      <color>#f2a900</color>
      <color>#88dbdf</color>
      <color>#007377</color>
      <color>#c5e86c</color>
      <color>#84bd00</color>
      <color>#8db8e9</color>
      <color>#d4451d</color>
      <color>#ffffff</color>
      <color>#cccccc</color>
    </color-palette>
  </preferences>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='18.1'>
      <aliases enabled='yes' />
      <column caption='Earliest Date' datatype='date' name='[Parameter 1]' param-domain-type='any' role='measure' type='quantitative' value='#2018-01-01#'>
        <calculation class='tableau' formula='#2018-01-01#' />
      </column>
    </datasource>
    <datasource caption='Sheet1 (Weight logs)' inline='true' name='federated.15ddyx01y80jo918s4afv02csog8' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Weight logs' name='google-sheets.0vbp8js01juhb51cu840g1plmqsm'>
            <connection REDIRECT_URI='urn:ietf:wg:oauth:2.0:oob' SCOPE='email profile https://www.googleapis.com/auth/drive.readonly' class='google-sheets' cleaning='no' compat='no' dataRefreshTime='' filename='Weight logs' googleSheetId='14tJvKhx2Bb9m7RtLTvjHQlCgF-IMebQnctTQru5u75A' interpretationMode='8' mimeType='application/vnd.google-apps.spreadsheet' server='' server-oauth='' username='bckeane@gmail.com' validate='no' />
          </named-connection>
        </named-connections>
        <relation connection='google-sheets.0vbp8js01juhb51cu840g1plmqsm' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:C1469:no:A1:C1469:0' header='yes' outcome='2'>
            <column datatype='string' name='Date' ordinal='0' />
            <column datatype='real' name='Weight' ordinal='1' />
            <column datatype='real' name='BMI' ordinal='2' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Date</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Date]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Date</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Weight</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Weight]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Weight</remote-alias>
            <ordinal>1</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>BMI</remote-name>
            <remote-type>5</remote-type>
            <local-name>[BMI]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>BMI</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:C1469:no:A1:C1469:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <layout dim-ordering='alphabetic' dim-percentage='0.321555' measure-ordering='alphabetic' measure-percentage='0.39576' parameter-percentage='0.282686' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
    <datasource inline='true' name='Weight (local copy)' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='n7ye9qfqvy.database.windows.net' name='sqlserver.0plir4f043xh9t14fv79612tll8o'>
            <connection authentication='sqlserver' class='sqlserver' dbname='tri' minimum-driver-version='SQL Server Native Client 10.0' odbc-native-protocol='yes' one-time-sql='' server='n7ye9qfqvy.database.windows.net' server-oauth='' username='tri' workgroup-auth-mode='prompt' />
          </named-connection>
        </named-connections>
        <relation connection='sqlserver.0plir4f043xh9t14fv79612tll8o' name='CompareWeight' type='text'>SELECT dd.calendar_date&#13;&#10;     , case when dd.calendar_date &lt;&lt; &apos;2019-02-22&apos; then 240&#13;&#10;            else 240 - ( DATEDIFF(WEEK, &apos;2019-02-22&apos;, dd.calendar_date)) &#13;&#10;       End AS target_weight_this_week        &#13;&#10;     , tw.pounds&#13;&#10;     , tw.fat_pct&#13;&#10;     , who.display_nm&#13;&#10;     , tw.pounds - case when dd.calendar_date &lt;&lt; &apos;2019-02-22&apos; then 240&#13;&#10;            else 240 - ( DATEDIFF(WEEK, &apos;2019-02-22&apos;, dd.calendar_date)) &#13;&#10;       End AS actual&#13;&#10;     , isnull(ytw.pounds,tw.pounds) as Yesterday_Weight&#13;&#10;     , tw.pounds - isnull(ytw.pounds,tw.pounds) as Weight_Change&#13;&#10;FROM   dbo.date_dim AS dd&#13;&#10;JOIN   dbo.tri_weight AS tw ON dd.calendar_date = tw.date_value&#13;&#10;left join dbo.tri_weight as ytw on tw.date_value = dateadd(day,1,ytw.date_value)&#13;&#10;JOIN   dbo.tri_who AS who ON tw.who_key = who.who_key</relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>calendar_date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[calendar_date]</local-name>
            <parent-name>[CompareWeight]</parent-name>
            <remote-alias>calendar_date</remote-alias>
            <ordinal>1</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_TYPE_DATE&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_TYPE_DATE&quot;</attribute>
              <attribute datatype='boolean' name='TypeIsDateTime2orDate'>true</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>target_weight_this_week</remote-name>
            <remote-type>3</remote-type>
            <local-name>[target_weight_this_week]</local-name>
            <parent-name>[CompareWeight]</parent-name>
            <remote-alias>target_weight_this_week</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>pounds</remote-name>
            <remote-type>131</remote-type>
            <local-name>[pounds]</local-name>
            <parent-name>[CompareWeight]</parent-name>
            <remote-alias>pounds</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>9</precision>
            <scale>3</scale>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_DECIMAL&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_NUMERIC&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>fat_pct</remote-name>
            <remote-type>131</remote-type>
            <local-name>[fat_pct]</local-name>
            <parent-name>[CompareWeight]</parent-name>
            <remote-alias>fat_pct</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>9</precision>
            <scale>3</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_DECIMAL&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_NUMERIC&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>display_nm</remote-name>
            <remote-type>129</remote-type>
            <local-name>[display_nm]</local-name>
            <parent-name>[CompareWeight]</parent-name>
            <remote-alias>display_nm</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>100</width>
            <contains-null>false</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation flag='2147483649' name='LEN_RUS_S2_VWIN' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_VARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_CHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>actual</remote-name>
            <remote-type>131</remote-type>
            <local-name>[actual]</local-name>
            <parent-name>[CompareWeight]</parent-name>
            <remote-alias>actual</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>14</precision>
            <scale>3</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_DECIMAL&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_NUMERIC&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Yesterday_Weight</remote-name>
            <remote-type>131</remote-type>
            <local-name>[Yesterday_Weight]</local-name>
            <parent-name>[CompareWeight]</parent-name>
            <remote-alias>Yesterday_Weight</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>9</precision>
            <scale>3</scale>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_DECIMAL&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_NUMERIC&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Weight_Change</remote-name>
            <remote-type>131</remote-type>
            <local-name>[Weight_Change]</local-name>
            <parent-name>[CompareWeight]</parent-name>
            <remote-alias>Weight_Change</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <scale>3</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_DECIMAL&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_NUMERIC&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Quassu2019 Goal Weight' datatype='integer' name='[Calculation_1174032162781941761]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='225' />
      </column>
      <column caption='Today, Last Week. Last Month' datatype='boolean' name='[Calculation_1732759976706490368]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='[calendar_date] = TODAY()&#13;&#10;or&#13;&#10;[calendar_date] = DATEADD(&apos;day&apos;,-1,TODAY())&#13;&#10;or&#13;&#10;[calendar_date] = DATEADD(&apos;week&apos;,-1,TODAY())&#13;&#10;or&#13;&#10;[calendar_date] = DATEADD(&apos;month&apos;,-1,TODAY())&#13;&#10;or&#13;&#10;[calendar_date] = DATEADD(&apos;year&apos;,-1,TODAY())&#13;&#10;or&#13;&#10;[calendar_date] = DATEADD(&apos;year&apos;,-2,TODAY())&#13;&#10;or&#13;&#10;[calendar_date] = DATEADD(&apos;year&apos;,-5,TODAY())&#13;&#10;or&#13;&#10;[calendar_date] = DATEADD(&apos;year&apos;,-6,TODAY())' />
      </column>
      <column caption='MinDate' datatype='date' name='[Calculation_1764003681186865153]' role='measure' type='ordinal'>
        <calculation class='tableau' formula='min([calendar_date])' />
      </column>
      <column caption='GT November' datatype='boolean' name='[Calculation_537828377618878468]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='[calendar_date] &gt;= Date(&quot;2018-11-01&quot;)' />
      </column>
      <column caption='Good V Bad' datatype='string' name='[Calculation_855121042296750080]' role='measure' type='nominal'>
        <calculation class='tableau' formula='if avg(pounds) &lt;= MIN([target_weight_this_week (copy)]) then &apos;Good&apos;&#13;&#10;else &apos;Bad&apos;&#13;&#10;End' />
      </column>
      <column caption='Negative Change' datatype='real' name='[Calculation_855121042306166785]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='- [Weight_Change]' />
      </column>
      <column caption='GT April 2019' datatype='boolean' name='[GT November (copy 2)]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='[calendar_date] &gt;= Date(&quot;2019-04-01&quot;)' />
      </column>
      <column caption='LT Today' datatype='boolean' name='[GT November (copy)]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='[calendar_date] &lt;= TODAY()' />
      </column>
      <column caption='Good V Bad #' datatype='real' name='[Good V Bad (copy 2)]' role='measure' type='ordinal'>
        <calculation class='tableau' formula='avg(pounds) - avg(target_weight_this_week)' />
      </column>
      <column caption='Good V Bad - Jedi' datatype='string' name='[Good V Bad (copy 3)]' role='measure' type='nominal'>
        <calculation class='tableau' formula='if avg(pounds) &gt; 235 then &apos;Real Bad&apos;&#13;&#10;elseif avg(pounds) &gt; 230 then &apos;Bad&apos;&#13;&#10;elseif avg(pounds) &gt; 225 then &apos;Getting There&apos;&#13;&#10;elseif avg(pounds) &gt; 215 then &apos;Stay On Target&apos;&#13;&#10;else &apos;OK&apos;&#13;&#10;End' />
      </column>
      <column caption='Good V Bad Waterfall' datatype='string' name='[Good V Bad (copy)]' role='measure' type='nominal'>
        <calculation class='tableau' formula='if sum(pounds) &lt; sum(target_weight_this_week) then &apos;Bad&apos;&#13;&#10;else &apos;Good&apos;&#13;&#10;End' />
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Today, Last Week. Last Month Label' datatype='string' name='[Today, Last Week. Last Month (copy)]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='if [calendar_date] = TODAY() then &quot;Today&quot;&#13;&#10;elseif [calendar_date] = DATEADD(&apos;day&apos;,-1,TODAY()) then &quot;Yesterday&quot;&#13;&#10;elseif [calendar_date] = DATEADD(&apos;week&apos;,-1,TODAY()) then &quot;Last Week&quot;&#13;&#10;Elseif [calendar_date] = DATEADD(&apos;month&apos;,-1,TODAY()) then &quot;Last Month&quot;&#13;&#10;Elseif [calendar_date] = DATEADD(&apos;year&apos;,-1,TODAY()) then &quot;Last Year&quot;&#13;&#10;ELSEif [calendar_date] = DATEADD(&apos;year&apos;,-2,TODAY()) then &quot;Two Years ago&quot;&#13;&#10;ELSEif [calendar_date] = DATEADD(&apos;year&apos;,-5,TODAY()) then &quot;Five Years ago&quot;&#13;&#10;ELSEif year([calendar_date]) = 2013 then &quot;—2013—&quot;&#13;&#10;end' />
      </column>
      <column caption='Today, Last Week. Last Color' datatype='string' name='[Today, Last Week. Last Month Label (copy)]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='if [calendar_date] = TODAY() then &quot;Today&quot;&#13;&#10;else &quot;Not today&quot;&#13;&#10;end' />
      </column>
      <column datatype='real' default-format='*+#.##; -#.##' name='[Weight_Change]' role='measure' type='quantitative' />
      <column datatype='real' default-format='n#,##0.0;-#,##0.0' name='[Yesterday_Weight]' role='measure' type='quantitative' />
      <column datatype='real' name='[actual]' role='measure' type='quantitative' />
      <column datatype='date' default-format='*mm/dd/yy' name='[calendar_date]' role='dimension' type='ordinal' />
      <column datatype='real' default-format='n#,##0.0;-#,##0.0' name='[pounds]' role='measure' type='quantitative' />
      <column caption='target_weight_this_week_adjusted' datatype='real' default-format='n#,##0;-#,##0' name='[target_weight_this_week (copy)]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='//min(([target_weight_this_week] + 8), 240)&#13;&#10;[target_weight_this_week] + 4.5' />
      </column>
      <column datatype='integer' default-format='n#,##0;-#,##0' name='[target_weight_this_week]' role='measure' type='quantitative' />
      <column-instance column='[Weight_Change]' derivation='Avg' name='[avg:Weight_Change:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Yesterday_Weight]' derivation='Avg' name='[avg:Yesterday_Weight:qk]' pivot='key' type='quantitative' />
      <column-instance column='[actual]' derivation='Avg' name='[avg:actual:qk]' pivot='key' type='quantitative' />
      <column-instance column='[pounds]' derivation='Avg' name='[avg:pounds:qk]' pivot='key' type='quantitative' />
      <column-instance column='[target_weight_this_week]' derivation='Avg' name='[avg:target_weight_this_week:qk]' pivot='key' type='quantitative' />
      <column-instance column='[actual]' derivation='Sum' name='[cum:sum:actual:qk]' pivot='key' type='quantitative'>
        <table-calc aggregation='Sum' ordering-type='Rows' type='CumTotal' />
      </column-instance>
      <column-instance column='[Calculation_855121042296750080]' derivation='User' forecast-column-base='[Calculation_855121042296750080]' forecast-column-type='forecast-value' name='[fVal:usr:Calculation_855121042296750080:nk]' pivot='key' type='nominal' />
      <column-instance column='[Good V Bad (copy 3)]' derivation='User' forecast-column-base='[usr:Good V Bad (copy 3):nk]' forecast-column-type='forecast-value' name='[fVal:usr:Good V Bad (copy 3):nk]' pivot='key' type='nominal' />
      <column-instance column='[Good V Bad (copy)]' derivation='User' forecast-column-base='[Good V Bad (copy)]' forecast-column-type='forecast-value' name='[fVal:usr:Good V Bad (copy):nk]' pivot='key' type='nominal' />
      <column-instance column='[Weight_Change]' derivation='Max' name='[max:Weight_Change:qk]' pivot='key' type='quantitative' />
      <column-instance column='[actual]' derivation='Max' name='[max:actual:qk]' pivot='key' type='quantitative' />
      <column-instance column='[actual]' derivation='Min' name='[min:actual:qk]' pivot='key' type='quantitative' />
      <column-instance column='[pounds]' derivation='Min' name='[min:pounds:qk]' pivot='key' type='quantitative' />
      <column-instance column='[target_weight_this_week (copy)]' derivation='Min' name='[min:target_weight_this_week (copy):qk]' pivot='key' type='quantitative' />
      <column-instance column='[target_weight_this_week]' derivation='Min' name='[min:target_weight_this_week:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
      <column-instance column='[Today, Last Week. Last Month (copy)]' derivation='None' name='[none:Today, Last Week. Last Month (copy):nk]' pivot='key' type='nominal' />
      <column-instance column='[Today, Last Week. Last Month Label (copy)]' derivation='None' name='[none:Today, Last Week. Last Month Label (copy):nk]' pivot='key' type='nominal' />
      <column-instance column='[Calculation_1174032162781941761]' derivation='Sum' name='[sum:Calculation_1174032162781941761:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Weight_Change]' derivation='Sum' name='[sum:Weight_Change:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Yesterday_Weight]' derivation='Sum' name='[sum:Yesterday_Weight:qk]' pivot='key' type='quantitative' />
      <column-instance column='[actual]' derivation='Sum' name='[sum:actual:qk]' pivot='key' type='quantitative' />
      <column-instance column='[pounds]' derivation='Sum' name='[sum:pounds:qk]' pivot='key' type='quantitative' />
      <column-instance column='[target_weight_this_week (copy)]' derivation='Sum' name='[sum:target_weight_this_week (copy):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_855121042296750080]' derivation='User' name='[usr:Calculation_855121042296750080:nk]' pivot='key' type='nominal' />
      <column-instance column='[Good V Bad (copy 3)]' derivation='User' name='[usr:Good V Bad (copy 3):nk]' pivot='key' type='nominal' />
      <column-instance column='[pounds]' derivation='Avg' name='[win:avg:pounds:qk:2]' pivot='key' type='quantitative'>
        <table-calc aggregation='Avg' from='-6' ordering-type='Rows' to='0' type='WindowTotal' window-options='IncludeCurrent' />
      </column-instance>
      <column-instance column='[pounds]' derivation='Avg' name='[win:avg:pounds:qk]' pivot='key' type='quantitative'>
        <table-calc aggregation='Avg' from='-2' ordering-type='Rows' to='0' type='WindowTotal' window-options='IncludeCurrent' />
      </column-instance>
      <column-instance column='[pounds]' derivation='Min' name='[win:min:pounds:qk:2]' pivot='key' type='quantitative'>
        <table-calc aggregation='Avg' from='-3' ordering-type='Rows' to='0' type='WindowTotal' window-options='IncludeCurrent' />
      </column-instance>
      <column-instance column='[pounds]' derivation='Min' name='[win:min:pounds:qk:4]' pivot='key' type='quantitative'>
        <table-calc aggregation='Avg' from='-4' ordering-type='Rows' to='0' type='WindowTotal' window-options='IncludeCurrent' />
      </column-instance>
      <column-instance column='[pounds]' derivation='Min' name='[win:min:pounds:qk:6]' pivot='key' type='quantitative'>
        <table-calc aggregation='Avg' from='-5' ordering-type='Rows' to='0' type='WindowTotal' window-options='IncludeCurrent' />
      </column-instance>
      <column-instance column='[pounds]' derivation='Min' name='[win:min:pounds:qk:8]' pivot='key' type='quantitative'>
        <table-calc aggregation='Avg' from='-6' ordering-type='Rows' to='0' type='WindowTotal' window-options='IncludeCurrent' />
      </column-instance>
      <column-instance column='[pounds]' derivation='Min' name='[win:min:pounds:qk]' pivot='key' type='quantitative'>
        <table-calc aggregation='Avg' from='-2' ordering-type='Rows' to='0' type='WindowTotal' window-options='IncludeCurrent' />
      </column-instance>
      <column-instance column='[pounds]' derivation='Sum' name='[win:sum:pounds:qk:2]' pivot='key' type='quantitative'>
        <table-calc aggregation='Avg' from='-5' ordering-type='Rows' to='0' type='WindowTotal' window-options='IncludeCurrent' />
      </column-instance>
      <column-instance column='[pounds]' derivation='Sum' name='[win:sum:pounds:qk]' pivot='key' type='quantitative'>
        <table-calc aggregation='Avg' from='-2' ordering-type='Rows' to='0' type='WindowTotal' window-options='IncludeCurrent' />
      </column-instance>
      <extract count='-1' enabled='false' units='records'>
        <connection authentication='auth-none' author-locale='en_US' class='hyper' dbname='H:/Tri/WeightChallengeIMMT2019_v2018.2.twb Files/Data/Extracts/Weight.hyper' schema='Extract' sslmode='' tablename='Extract' update-time='01/24/2019 07:00:20 PM' username='tableau_internal_user'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>calendar_date</remote-name>
              <remote-type>133</remote-type>
              <local-name>[calendar_date]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>calendar_date</remote-alias>
              <ordinal>0</ordinal>
              <family>CompareWeight</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>361</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>target_weight_this_week</remote-name>
              <remote-type>20</remote-type>
              <local-name>[target_weight_this_week]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>target_weight_this_week</remote-alias>
              <ordinal>1</ordinal>
              <family>CompareWeight</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>8</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>pounds</remote-name>
              <remote-type>5</remote-type>
              <local-name>[pounds]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>pounds</remote-alias>
              <ordinal>2</ordinal>
              <family>CompareWeight</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>361</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>fat_pct</remote-name>
              <remote-type>5</remote-type>
              <local-name>[fat_pct]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>fat_pct</remote-alias>
              <ordinal>3</ordinal>
              <family>CompareWeight</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>361</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>display_nm</remote-name>
              <remote-type>129</remote-type>
              <local-name>[display_nm]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>display_nm</remote-alias>
              <ordinal>4</ordinal>
              <family>CompareWeight</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>actual</remote-name>
              <remote-type>5</remote-type>
              <local-name>[actual]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>actual</remote-alias>
              <ordinal>5</ordinal>
              <family>CompareWeight</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>361</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Yesterday_Weight</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Yesterday_Weight]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Yesterday_Weight</remote-alias>
              <ordinal>6</ordinal>
              <family>CompareWeight</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>361</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Weight_Change</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Weight_Change]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Weight_Change</remote-alias>
              <ordinal>7</ordinal>
              <family>CompareWeight</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>327</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.348708' measure-ordering='alphabetic' measure-percentage='0.608856' parameter-percentage='0.0424354' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[fVal:usr:Good V Bad (copy):nk]' type='palette'>
            <map to='#003a70'>
              <bucket>&quot;Good&quot;</bucket>
            </map>
            <map to='#d4451d'>
              <bucket>&quot;Bad&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[fVal:usr:Calculation_855121042296750080:nk]' type='palette'>
            <map to='#00a9e0'>
              <bucket>&quot;Good&quot;</bucket>
            </map>
            <map to='#d4451d'>
              <bucket>&quot;Bad&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Today, Last Week. Last Month (copy):nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Today&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Last Year&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Last Month&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Five Years ago&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Last Week&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;Two Years ago&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Yesterday&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>%null%</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[usr:Calculation_855121042296750080:nk]' type='palette'>
            <map to='#849db1'>
              <bucket>&quot;Good&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Bad&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[Weight (local copy)].[avg:pounds:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[Weight (local copy)].[avg:target_weight_this_week:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[Weight (local copy)].[avg:Yesterday_Weight:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[Weight (local copy)].[min:pounds:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[Weight (local copy)].[none:Today, Last Week. Last Month (copy):nk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[Weight (local copy)].[none:Today, Last Week. Last Month Label (copy):nk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[Weight (local copy)].[sum:Yesterday_Weight:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[Weight (local copy)].[win:avg:pounds:qk:2]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[Weight (local copy)].[win:avg:pounds:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[Weight (local copy)].[win:min:pounds:qk:2]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[Weight (local copy)].[win:min:pounds:qk:4]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[Weight (local copy)].[win:min:pounds:qk:6]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[Weight (local copy)].[win:min:pounds:qk]&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;[Weight (local copy)].[min:target_weight_this_week (copy):qk]&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;[Weight (local copy)].[min:target_weight_this_week:qk]&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;[Weight (local copy)].[sum:target_weight_this_week (copy):qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[Weight (local copy)].[avg:actual:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[Weight (local copy)].[avg:Weight_Change:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[Weight (local copy)].[cum:sum:actual:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[Weight (local copy)].[max:actual:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[Weight (local copy)].[max:Weight_Change:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[Weight (local copy)].[min:actual:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[Weight (local copy)].[sum:actual:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[Weight (local copy)].[sum:pounds:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[Weight (local copy)].[sum:Weight_Change:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[Weight (local copy)].[usr:Good V Bad (copy 3):nk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[Weight (local copy)].[win:min:pounds:qk:8]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[Weight (local copy)].[win:sum:pounds:qk:2]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[Weight (local copy)].[win:sum:pounds:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[Weight (local copy)]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[Weight (local copy)].[sum:Calculation_1174032162781941761:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[fVal:usr:Good V Bad (copy 3):nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Bad&quot;</bucket>
            </map>
            <map to='#9f8f12'>
              <bucket>&quot;Real Bad&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Getting There&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Today, Last Week. Last Month Label (copy):nk]' palette='YNHHS Corporate Color Palette' type='palette'>
            <map to='#003a70'>
              <bucket>&quot;Not today&quot;</bucket>
            </map>
            <map to='#00a9e0'>
              <bucket>&quot;Today&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[usr:Good V Bad (copy 3):nk]' type='palette'>
            <map to='#49525e'>
              <bucket>&quot;Real Bad&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Stay On Target&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;OK&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Bad&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Getting There&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <default-sorts>
        <manual-sort column='[none:Forecast Indicator:nk]' direction='ASC'>
          <dictionary>
            <bucket>&quot;Actual&quot;</bucket>
            <bucket>&quot;Estimate&quot;</bucket>
          </dictionary>
        </manual-sort>
      </default-sorts>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='7 Day Rolling'>
      <table>
        <view>
          <datasources>
            <datasource name='Weight (local copy)' />
          </datasources>
          <datasource-dependencies datasource='Weight (local copy)'>
            <column caption='Good V Bad - Jedi' datatype='string' name='[Good V Bad (copy 3)]' role='measure' type='nominal'>
              <calculation class='tableau' formula='if avg(pounds) &gt; 235 then &apos;Real Bad&apos;&#13;&#10;elseif avg(pounds) &gt; 230 then &apos;Bad&apos;&#13;&#10;elseif avg(pounds) &gt; 225 then &apos;Getting There&apos;&#13;&#10;elseif avg(pounds) &gt; 215 then &apos;Stay On Target&apos;&#13;&#10;else &apos;OK&apos;&#13;&#10;End' />
            </column>
            <column datatype='date' default-format='*mm/dd/yy' name='[calendar_date]' role='dimension' type='ordinal' />
            <column-instance column='[calendar_date]' derivation='None' name='[none:calendar_date:qk]' pivot='key' type='quantitative' />
            <column datatype='real' default-format='n#,##0.0;-#,##0.0' name='[pounds]' role='measure' type='quantitative' />
            <column-instance column='[calendar_date]' derivation='Day-Trunc' name='[tdy:calendar_date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Good V Bad (copy 3)]' derivation='User' name='[usr:Good V Bad (copy 3):nk]' pivot='key' type='nominal' />
            <column-instance column='[pounds]' derivation='Min' name='[win:min:pounds:qk:8]' pivot='key' type='quantitative'>
              <table-calc aggregation='Avg' from='-6' ordering-type='Rows' to='0' type='WindowTotal' window-options='IncludeCurrent' />
            </column-instance>
          </datasource-dependencies>
          <filter class='relative-date' column='[Weight (local copy)].[none:calendar_date:qk]' first-period='-7' include-future='true' include-null='false' last-period='0' period-type='day' />
          <manual-sort column='[Weight (local copy)].[usr:Good V Bad (copy 3):nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Real Bad&quot;</bucket>
              <bucket>&quot;Bad&quot;</bucket>
              <bucket>&quot;Getting There&quot;</bucket>
              <bucket>&quot;Stay On Target&quot;</bucket>
              <bucket>&quot;OK&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[Weight (local copy)].[none:calendar_date:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' domain-expand='false' field='[Weight (local copy)].[win:min:pounds:qk:8]' field-type='quantitative' max='245.0' min='210.0' range-type='fixed' scope='rows' type='space' />
            <format attr='auto-subtitle' class='0' field='[Weight (local copy)].[win:min:pounds:qk:8]' scope='rows' value='false' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
            <format attr='stroke-color' id='refline0' value='#59a14f' />
            <format attr='fill-above' id='refline1' value='#00000000' />
            <format attr='fill-below' id='refline1' value='#00000000' />
            <format attr='stroke-color' id='refline1' value='#ffbe7d' />
            <format attr='fill-above' id='refline2' value='#00000000' />
            <format attr='fill-below' id='refline2' value='#00000000' />
            <format attr='fill-above' id='refline3' value='#00000000' />
            <format attr='fill-below' id='refline3' value='#00000000' />
          </style-rule>
        </style>
        <panes>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing custom-mark-size-in-axis-units='1.0' mark-alignment='mark-alignment-left' mark-sizing-setting='marks-scaling-on' use-custom-mark-size='false' />
            <encodings>
              <color column='[Weight (local copy)].[usr:Good V Bad (copy 3):nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[Weight (local copy)].[win:min:pounds:qk:8]</rows>
        <cols>[Weight (local copy)].[tdy:calendar_date:qk]</cols>
      </table>
      <simple-id uuid='{1630293B-F8D7-448F-B689-0B1C522EB2AF}' />
    </worksheet>
    <worksheet name='All Time'>
      <table>
        <view>
          <datasources>
            <datasource name='Weight (local copy)' />
          </datasources>
          <datasource-dependencies datasource='Weight (local copy)'>
            <column caption='Good V Bad - Jedi' datatype='string' name='[Good V Bad (copy 3)]' role='measure' type='nominal'>
              <calculation class='tableau' formula='if avg(pounds) &gt; 235 then &apos;Real Bad&apos;&#13;&#10;elseif avg(pounds) &gt; 230 then &apos;Bad&apos;&#13;&#10;elseif avg(pounds) &gt; 225 then &apos;Getting There&apos;&#13;&#10;elseif avg(pounds) &gt; 215 then &apos;Stay On Target&apos;&#13;&#10;else &apos;OK&apos;&#13;&#10;End' />
            </column>
            <column datatype='date' default-format='*mm/dd/yy' name='[calendar_date]' role='dimension' type='ordinal' />
            <column datatype='real' default-format='n#,##0.0;-#,##0.0' name='[pounds]' role='measure' type='quantitative' />
            <column-instance column='[calendar_date]' derivation='Day-Trunc' name='[tdy:calendar_date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Good V Bad (copy 3)]' derivation='User' name='[usr:Good V Bad (copy 3):nk]' pivot='key' type='nominal' />
            <column-instance column='[pounds]' derivation='Min' name='[win:min:pounds:qk:8]' pivot='key' type='quantitative'>
              <table-calc aggregation='Avg' from='-6' ordering-type='Rows' to='0' type='WindowTotal' window-options='IncludeCurrent' />
            </column-instance>
          </datasource-dependencies>
          <manual-sort column='[Weight (local copy)].[usr:Good V Bad (copy 3):nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Real Bad&quot;</bucket>
              <bucket>&quot;Bad&quot;</bucket>
              <bucket>&quot;Getting There&quot;</bucket>
              <bucket>&quot;Stay On Target&quot;</bucket>
              <bucket>&quot;OK&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </manual-sort>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' domain-expand='false' field='[Weight (local copy)].[win:min:pounds:qk:8]' field-type='quantitative' max='245.0' min='210.0' range-type='fixed' scope='rows' type='space' />
            <format attr='auto-subtitle' class='0' field='[Weight (local copy)].[win:min:pounds:qk:8]' scope='rows' value='false' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
            <format attr='stroke-color' id='refline0' value='#59a14f' />
            <format attr='fill-above' id='refline1' value='#00000000' />
            <format attr='fill-below' id='refline1' value='#00000000' />
            <format attr='stroke-color' id='refline1' value='#ffbe7d' />
            <format attr='fill-above' id='refline2' value='#00000000' />
            <format attr='fill-below' id='refline2' value='#00000000' />
            <format attr='fill-above' id='refline3' value='#00000000' />
            <format attr='fill-below' id='refline3' value='#00000000' />
          </style-rule>
        </style>
        <panes>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[Weight (local copy)].[usr:Good V Bad (copy 3):nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[Weight (local copy)].[win:min:pounds:qk:8]</rows>
        <cols>[Weight (local copy)].[tdy:calendar_date:qk]</cols>
      </table>
      <simple-id uuid='{716FFE46-D3F8-4427-A83C-F095C4673600}' />
    </worksheet>
    <worksheet name='Compare Today to'>
      <table>
        <view>
          <datasources>
            <datasource name='Weight (local copy)' />
          </datasources>
          <datasource-dependencies datasource='Weight (local copy)'>
            <column caption='Today, Last Week. Last Month' datatype='boolean' name='[Calculation_1732759976706490368]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[calendar_date] = TODAY()&#13;&#10;or&#13;&#10;[calendar_date] = DATEADD(&apos;day&apos;,-1,TODAY())&#13;&#10;or&#13;&#10;[calendar_date] = DATEADD(&apos;week&apos;,-1,TODAY())&#13;&#10;or&#13;&#10;[calendar_date] = DATEADD(&apos;month&apos;,-1,TODAY())&#13;&#10;or&#13;&#10;[calendar_date] = DATEADD(&apos;year&apos;,-1,TODAY())&#13;&#10;or&#13;&#10;[calendar_date] = DATEADD(&apos;year&apos;,-2,TODAY())&#13;&#10;or&#13;&#10;[calendar_date] = DATEADD(&apos;year&apos;,-5,TODAY())&#13;&#10;or&#13;&#10;[calendar_date] = DATEADD(&apos;year&apos;,-6,TODAY())' />
            </column>
            <column caption='Today, Last Week. Last Month Label' datatype='string' name='[Today, Last Week. Last Month (copy)]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='if [calendar_date] = TODAY() then &quot;Today&quot;&#13;&#10;elseif [calendar_date] = DATEADD(&apos;day&apos;,-1,TODAY()) then &quot;Yesterday&quot;&#13;&#10;elseif [calendar_date] = DATEADD(&apos;week&apos;,-1,TODAY()) then &quot;Last Week&quot;&#13;&#10;Elseif [calendar_date] = DATEADD(&apos;month&apos;,-1,TODAY()) then &quot;Last Month&quot;&#13;&#10;Elseif [calendar_date] = DATEADD(&apos;year&apos;,-1,TODAY()) then &quot;Last Year&quot;&#13;&#10;ELSEif [calendar_date] = DATEADD(&apos;year&apos;,-2,TODAY()) then &quot;Two Years ago&quot;&#13;&#10;ELSEif [calendar_date] = DATEADD(&apos;year&apos;,-5,TODAY()) then &quot;Five Years ago&quot;&#13;&#10;ELSEif year([calendar_date]) = 2013 then &quot;—2013—&quot;&#13;&#10;end' />
            </column>
            <column caption='Today, Last Week. Last Color' datatype='string' name='[Today, Last Week. Last Month Label (copy)]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='if [calendar_date] = TODAY() then &quot;Today&quot;&#13;&#10;else &quot;Not today&quot;&#13;&#10;end' />
            </column>
            <column datatype='real' default-format='*+#.##; -#.##' name='[Weight_Change]' role='measure' type='quantitative' />
            <column datatype='date' default-format='*mm/dd/yy' name='[calendar_date]' role='dimension' type='ordinal' />
            <column-instance column='[pounds]' derivation='Min' name='[min:pounds:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1732759976706490368]' derivation='None' name='[none:Calculation_1732759976706490368:nk]' pivot='key' type='nominal' />
            <column-instance column='[Today, Last Week. Last Month (copy)]' derivation='None' name='[none:Today, Last Week. Last Month (copy):nk]' pivot='key' type='nominal' />
            <column-instance column='[Today, Last Week. Last Month Label (copy)]' derivation='None' name='[none:Today, Last Week. Last Month Label (copy):nk]' pivot='key' type='nominal' />
            <column datatype='real' default-format='n#,##0.0;-#,##0.0' name='[pounds]' role='measure' type='quantitative' />
            <column-instance column='[Weight_Change]' derivation='Sum' name='[sum:Weight_Change:qk]' pivot='key' type='quantitative' />
            <column-instance column='[calendar_date]' derivation='Day-Trunc' name='[tdy:calendar_date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[Weight (local copy)].[none:Calculation_1732759976706490368:nk]'>
            <groupfilter function='member' level='[none:Calculation_1732759976706490368:nk]' member='true' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <manual-sort column='[Weight (local copy)].[none:Today, Last Week. Last Month (copy):nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Today&quot;</bucket>
              <bucket>&quot;Yesterday&quot;</bucket>
              <bucket>&quot;Last Week&quot;</bucket>
              <bucket>&quot;Last Month&quot;</bucket>
              <bucket>&quot;Last Year&quot;</bucket>
              <bucket>&quot;Two Years ago&quot;</bucket>
              <bucket>&quot;Five Years ago&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[Weight (local copy)].[none:Calculation_1732759976706490368:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[Weight (local copy)].[min:pounds:qk]' field-type='quantitative' max='250.0' min='180.0' range-type='fixed' scope='rows' type='space' />
            <format attr='display' class='0' field='[Weight (local copy)].[min:pounds:qk]' scope='rows' value='false' />
            <format attr='tick-color' value='#00000000' />
          </style-rule>
          <style-rule element='header'>
            <format attr='border-style' data-class='total' scope='rows' value='none' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-orientation' field='[Weight (local copy)].[tdy:calendar_date:ok]' value='-90' />
            <format attr='vertical-align' field='[Weight (local copy)].[tdy:calendar_date:ok]' value='center' />
            <format attr='text-align' field='[Weight (local copy)].[tdy:calendar_date:ok]' value='center' />
            <format attr='display' field='[Weight (local copy)].[none:Today, Last Week. Last Month (copy):nk]' value='false' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[Weight (local copy)].[min:pounds:qk]' palette='blue_teal_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='border-style' data-class='total' value='none' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
          <style-rule element='dropline'>
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
            <format attr='line-visibility' value='on' />
            <format attr='line-pattern-only' value='dashed' />
            <format attr='stroke-size' value='4' />
            <format attr='stroke-color' value='#edc948c9' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='line-visibility' scope='rows' value='off' />
          </style-rule>
          <style-rule element='zeroline'>
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='line-visibility' scope='rows' value='off' />
            <format attr='line-visibility' scope='cols' value='off' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[Weight (local copy)].[none:Today, Last Week. Last Month Label (copy):nk]' />
              <text column='[Weight (local copy)].[min:pounds:qk]' />
              <text column='[Weight (local copy)].[tdy:calendar_date:ok]' />
              <text column='[Weight (local copy)].[none:Today, Last Week. Last Month (copy):nk]' />
              <tooltip column='[Weight (local copy)].[sum:Weight_Change:qk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run bold='true' fontcolor='#ffffff'> &lt;[Weight (local copy)].[min:pounds:qk]&gt;</run>
                <run>Æ&#10;</run>
                <run bold='true' fontcolor='#ffffff'>&lt;[Weight (local copy)].[tdy:calendar_date:ok]&gt;</run>
                <run>Æ&#10;</run>
                <run bold='true' fontcolor='#ffffff'>&lt;[Weight (local copy)].[none:Today, Last Week. Last Month (copy):nk]&gt;</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='cell'>
                <format attr='text-orientation' value='0' />
                <format attr='text-align' value='center' />
                <format attr='vertical-align' value='top' />
              </style-rule>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='match' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='false' />
              </style-rule>
              <style-rule element='trendline'>
                <format attr='line-visibility' value='off' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[Weight (local copy)].[min:pounds:qk]</rows>
        <cols>[Weight (local copy)].[none:Today, Last Week. Last Month (copy):nk]</cols>
      </table>
      <simple-id uuid='{C1EA692D-4B19-422E-82DC-FF589CB3E4D3}' />
    </worksheet>
    <worksheet name='Daily'>
      <repository-location derived-from='https://10ax.online.tableau.com/t/ctkeanedev279563/workbooks/WeightChallengeIMMT2019/Daily?rev=' id='Daily' path='/t/ctkeanedev279563/workbooks/WeightChallengeIMMT2019' revision='' site='ctkeanedev279563' />
      <table>
        <view>
          <datasources>
            <datasource name='Weight (local copy)' />
          </datasources>
          <datasource-dependencies datasource='Weight (local copy)'>
            <column caption='Good V Bad' datatype='string' name='[Calculation_855121042296750080]' role='measure' type='nominal'>
              <calculation class='tableau' formula='if avg(pounds) &lt;= MIN([target_weight_this_week (copy)]) then &apos;Good&apos;&#13;&#10;else &apos;Bad&apos;&#13;&#10;End' />
            </column>
            <column caption='Good V Bad #' datatype='real' name='[Good V Bad (copy 2)]' role='measure' type='ordinal'>
              <calculation class='tableau' formula='avg(pounds) - avg(target_weight_this_week)' />
            </column>
            <column caption='Good V Bad - Jedi' datatype='string' name='[Good V Bad (copy 3)]' role='measure' type='nominal'>
              <calculation class='tableau' formula='if avg(pounds) &gt; 235 then &apos;Real Bad&apos;&#13;&#10;elseif avg(pounds) &gt; 230 then &apos;Bad&apos;&#13;&#10;elseif avg(pounds) &gt; 225 then &apos;Getting There&apos;&#13;&#10;elseif avg(pounds) &gt; 215 then &apos;Stay On Target&apos;&#13;&#10;else &apos;OK&apos;&#13;&#10;End' />
            </column>
            <column datatype='real' default-format='*+#.##; -#.##' name='[Weight_Change]' role='measure' type='quantitative' />
            <column datatype='date' default-format='*mm/dd/yy' name='[calendar_date]' role='dimension' type='ordinal' />
            <column-instance column='[pounds]' derivation='Min' name='[min:pounds:qk]' pivot='key' type='quantitative' />
            <column-instance column='[target_weight_this_week (copy)]' derivation='Min' name='[min:target_weight_this_week (copy):qk]' pivot='key' type='quantitative' />
            <column-instance column='[calendar_date]' derivation='None' name='[none:calendar_date:qk]' pivot='key' type='quantitative' />
            <column datatype='real' default-format='n#,##0.0;-#,##0.0' name='[pounds]' role='measure' type='quantitative' />
            <column-instance column='[Weight_Change]' derivation='Sum' name='[sum:Weight_Change:qk]' pivot='key' type='quantitative' />
            <column caption='target_weight_this_week_adjusted' datatype='real' default-format='n#,##0;-#,##0' name='[target_weight_this_week (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='//min(([target_weight_this_week] + 8), 240)&#13;&#10;[target_weight_this_week] + 4.5' />
            </column>
            <column datatype='integer' default-format='n#,##0;-#,##0' name='[target_weight_this_week]' role='measure' type='quantitative' />
            <column-instance column='[calendar_date]' derivation='Day-Trunc' name='[tdy:calendar_date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_855121042296750080]' derivation='User' name='[usr:Calculation_855121042296750080:nk]' pivot='key' type='nominal' />
            <column-instance column='[Good V Bad (copy 2)]' derivation='User' name='[usr:Good V Bad (copy 2):ok]' pivot='key' type='ordinal' />
            <column-instance column='[Good V Bad (copy 3)]' derivation='User' name='[usr:Good V Bad (copy 3):nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='relative-date' column='[Weight (local copy)].[none:calendar_date:qk]' filter-group='3' first-period='-44' include-future='true' include-null='false' last-period='0' period-type='day' />
          <slices>
            <column>[Weight (local copy)].[none:calendar_date:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[Weight (local copy)].[min:pounds:qk]' field-type='quantitative' max='250.0' min='180.0' range-type='fixed' scope='rows' type='space' />
            <format attr='display' class='0' field='[Weight (local copy)].[min:pounds:qk]' scope='rows' value='false' />
            <format attr='tick-color' value='#00000000' />
            <encoding attr='space' class='0' field='[Weight (local copy)].[min:target_weight_this_week (copy):qk]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
          </style-rule>
          <style-rule element='header'>
            <format attr='border-style' data-class='total' scope='rows' value='none' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-orientation' field='[Weight (local copy)].[tdy:calendar_date:ok]' value='-90' />
            <format attr='vertical-align' field='[Weight (local copy)].[tdy:calendar_date:ok]' value='center' />
            <format attr='text-align' field='[Weight (local copy)].[tdy:calendar_date:ok]' value='center' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='border-style' data-class='total' value='none' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
          <style-rule element='dropline'>
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
            <format attr='line-visibility' value='on' />
            <format attr='line-pattern-only' value='dashed' />
            <format attr='stroke-size' value='4' />
            <format attr='stroke-color' value='#edc948c9' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='line-visibility' scope='rows' value='off' />
          </style-rule>
          <style-rule element='zeroline'>
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='line-visibility' scope='rows' value='off' />
            <format attr='line-visibility' scope='cols' value='off' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <tooltip column='[Weight (local copy)].[sum:Weight_Change:qk]' />
            </encodings>
            <reference-line axis-column='[Weight (local copy)].[min:pounds:qk]' enable-instant-analytics='true' formula='constant' id='refline0' label='Goal' label-type='custom' scope='per-pane' value='200.0' value-column='[Weight (local copy)].[min:pounds:qk]' z-order='1' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='false' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[Weight (local copy)].[min:pounds:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[Weight (local copy)].[usr:Good V Bad (copy 3):nk]' />
              <text column='[Weight (local copy)].[min:pounds:qk]' />
              <tooltip column='[Weight (local copy)].[sum:Weight_Change:qk]' />
              <tooltip column='[Weight (local copy)].[usr:Calculation_855121042296750080:nk]' />
              <tooltip column='[Weight (local copy)].[usr:Good V Bad (copy 2):ok]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run bold='true' fontcolor='#ffffff'>           &lt;</run>
                <run bold='true' fontcolor='#ffffff'>[Weight (local copy)].[min:pounds:qk]</run>
                <run bold='true' fontcolor='#ffffff'>&gt;</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='cell'>
                <format attr='text-orientation' value='-90' />
                <format attr='vertical-align' value='center' />
                <format attr='text-align' value='center' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='trendline'>
                <format attr='line-visibility' value='off' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[Weight (local copy)].[min:target_weight_this_week (copy):qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <tooltip column='[Weight (local copy)].[sum:Weight_Change:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='false' />
                <format attr='mark-labels-mode' value='line-ends' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([Weight (local copy)].[min:pounds:qk] + [Weight (local copy)].[min:target_weight_this_week (copy):qk])</rows>
        <cols>[Weight (local copy)].[tdy:calendar_date:ok]</cols>
      </table>
      <simple-id uuid='{B4AD100F-0D47-4B2F-999F-15E08A6AD85D}' />
    </worksheet>
    <worksheet name='Daily Change'>
      <repository-location derived-from='https://10ax.online.tableau.com/t/ctkeanedev279563/workbooks/WeightChallengeIMMT2019/Daily2?rev=' id='Daily2' path='/t/ctkeanedev279563/workbooks/WeightChallengeIMMT2019' revision='' site='ctkeanedev279563' />
      <table>
        <view>
          <datasources>
            <datasource name='Weight (local copy)' />
          </datasources>
          <datasource-dependencies datasource='Weight (local copy)'>
            <column caption='Good V Bad - Jedi' datatype='string' name='[Good V Bad (copy 3)]' role='measure' type='nominal'>
              <calculation class='tableau' formula='if avg(pounds) &gt; 235 then &apos;Real Bad&apos;&#13;&#10;elseif avg(pounds) &gt; 230 then &apos;Bad&apos;&#13;&#10;elseif avg(pounds) &gt; 225 then &apos;Getting There&apos;&#13;&#10;elseif avg(pounds) &gt; 215 then &apos;Stay On Target&apos;&#13;&#10;else &apos;OK&apos;&#13;&#10;End' />
            </column>
            <column datatype='real' default-format='*+#.##; -#.##' name='[Weight_Change]' role='measure' type='quantitative' />
            <column datatype='date' default-format='*mm/dd/yy' name='[calendar_date]' role='dimension' type='ordinal' />
            <column-instance column='[Weight_Change]' derivation='Max' name='[max:Weight_Change:qk]' pivot='key' type='quantitative' />
            <column-instance column='[pounds]' derivation='Min' name='[min:pounds:qk]' pivot='key' type='quantitative' />
            <column-instance column='[calendar_date]' derivation='None' name='[none:calendar_date:qk]' pivot='key' type='quantitative' />
            <column datatype='real' default-format='n#,##0.0;-#,##0.0' name='[pounds]' role='measure' type='quantitative' />
            <column-instance column='[Weight_Change]' derivation='Sum' name='[sum:Weight_Change:qk]' pivot='key' type='quantitative' />
            <column-instance column='[calendar_date]' derivation='Day-Trunc' name='[tdy:calendar_date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Good V Bad (copy 3)]' derivation='User' name='[usr:Good V Bad (copy 3):nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='relative-date' column='[Weight (local copy)].[none:calendar_date:qk]' filter-group='3' first-period='-44' include-future='true' include-null='false' last-period='0' period-type='day' />
          <manual-sort column='[Weight (local copy)].[usr:Good V Bad (copy 3):nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Real Bad&quot;</bucket>
              <bucket>&quot;Bad&quot;</bucket>
              <bucket>&quot;Getting There&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[Weight (local copy)].[none:calendar_date:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='tick-color' value='#00000000' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='header'>
            <format attr='border-style' data-class='total' value='none' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='border-style' data-class='total' value='none' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
          <style-rule element='dropline'>
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
            <format attr='line-visibility' value='on' />
            <format attr='line-pattern-only' value='dashed' />
            <format attr='stroke-size' value='4' />
            <format attr='stroke-color' value='#edc948c9' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='line-visibility' scope='rows' value='off' />
          </style-rule>
          <style-rule element='zeroline'>
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='line-visibility' scope='rows' value='off' />
            <format attr='line-visibility' scope='cols' value='off' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[Weight (local copy)].[usr:Good V Bad (copy 3):nk]' />
              <text column='[Weight (local copy)].[min:pounds:qk]' />
              <text column='[Weight (local copy)].[sum:Weight_Change:qk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run>&lt;[Weight (local copy)].[min:pounds:qk]&gt; </run>
                <run fontcolor='#898989' fontsize='8'>(&lt;[Weight (local copy)].[sum:Weight_Change:qk]&gt;)</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='trendline'>
                <format attr='line-visibility' value='off' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[Weight (local copy)].[max:Weight_Change:qk]</rows>
        <cols>[Weight (local copy)].[tdy:calendar_date:ok]</cols>
      </table>
      <simple-id uuid='{F7D2B70F-BF92-4287-A6C0-4CD7632A797C}' />
    </worksheet>
    <worksheet name='Daily Change (2)'>
      <repository-location derived-from='https://10ax.online.tableau.com/t/ctkeanedev279563/workbooks/WeightChallengeIMMT2019/DailyChange2?rev=' id='DailyChange2' path='/t/ctkeanedev279563/workbooks/WeightChallengeIMMT2019' revision='' site='ctkeanedev279563' />
      <table>
        <view>
          <datasources>
            <datasource name='Weight (local copy)' />
          </datasources>
          <datasource-dependencies datasource='Weight (local copy)'>
            <column caption='Good V Bad #' datatype='real' name='[Good V Bad (copy 2)]' role='measure' type='ordinal'>
              <calculation class='tableau' formula='avg(pounds) - avg(target_weight_this_week)' />
            </column>
            <column caption='Good V Bad - Jedi' datatype='string' name='[Good V Bad (copy 3)]' role='measure' type='nominal'>
              <calculation class='tableau' formula='if avg(pounds) &gt; 235 then &apos;Real Bad&apos;&#13;&#10;elseif avg(pounds) &gt; 230 then &apos;Bad&apos;&#13;&#10;elseif avg(pounds) &gt; 225 then &apos;Getting There&apos;&#13;&#10;elseif avg(pounds) &gt; 215 then &apos;Stay On Target&apos;&#13;&#10;else &apos;OK&apos;&#13;&#10;End' />
            </column>
            <column-instance column='[pounds]' derivation='Avg' name='[avg:pounds:qk]' pivot='key' type='quantitative' />
            <column datatype='date' default-format='*mm/dd/yy' name='[calendar_date]' role='dimension' type='ordinal' />
            <column-instance column='[pounds]' derivation='Min' name='[min:pounds:qk]' pivot='key' type='quantitative' />
            <column-instance column='[calendar_date]' derivation='None' name='[none:calendar_date:qk]' pivot='key' type='quantitative' />
            <column datatype='real' default-format='n#,##0.0;-#,##0.0' name='[pounds]' role='measure' type='quantitative' />
            <column datatype='integer' default-format='n#,##0;-#,##0' name='[target_weight_this_week]' role='measure' type='quantitative' />
            <column-instance column='[calendar_date]' derivation='Week-Trunc' name='[twk:calendar_date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Good V Bad (copy 2)]' derivation='User' name='[usr:Good V Bad (copy 2):ok]' pivot='key' type='ordinal' />
            <column-instance column='[Good V Bad (copy 3)]' derivation='User' name='[usr:Good V Bad (copy 3):nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='relative-date' column='[Weight (local copy)].[none:calendar_date:qk]' filter-group='3' first-period='-44' include-future='true' include-null='false' last-period='0' period-type='day' />
          <slices>
            <column>[Weight (local copy)].[none:calendar_date:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='tick-color' value='#00000000' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='header'>
            <format attr='border-style' data-class='total' value='none' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='border-style' data-class='total' value='none' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
          <style-rule element='dropline'>
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
            <format attr='line-visibility' value='on' />
            <format attr='line-pattern-only' value='dashed' />
            <format attr='stroke-size' value='4' />
            <format attr='stroke-color' value='#edc948c9' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='line-visibility' scope='rows' value='off' />
          </style-rule>
          <style-rule element='zeroline'>
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='line-visibility' scope='rows' value='off' />
            <format attr='line-visibility' scope='cols' value='off' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[Weight (local copy)].[usr:Good V Bad (copy 3):nk]' />
              <text column='[Weight (local copy)].[min:pounds:qk]' />
              <tooltip column='[Weight (local copy)].[avg:pounds:qk]' />
              <tooltip column='[Weight (local copy)].[usr:Good V Bad (copy 2):ok]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run>&lt;</run>
                <run>[Weight (local copy)].[min:pounds:qk]</run>
                <run>&gt;</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='trendline'>
                <format attr='line-visibility' value='off' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[Weight (local copy)].[min:pounds:qk]</rows>
        <cols>[Weight (local copy)].[twk:calendar_date:ok]</cols>
      </table>
      <simple-id uuid='{5995D07F-88A8-462C-A2C3-928F26C71173}' />
    </worksheet>
    <worksheet name='Last Week Waterfall'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontname='Tableau Bold'>Last 7  Days</run>
          </formatted-text>
        </title>
      </layout-options>
      <repository-location derived-from='https://10ax.online.tableau.com/t/ctkeanedev279563/workbooks/WeightChallengeIMMT2019/Waterfall?rev=' id='Waterfall' path='/t/ctkeanedev279563/workbooks/WeightChallengeIMMT2019' revision='' site='ctkeanedev279563' />
      <table>
        <view>
          <datasources>
            <datasource name='Weight (local copy)' />
          </datasources>
          <datasource-dependencies datasource='Weight (local copy)'>
            <column caption='GT November' datatype='boolean' name='[Calculation_537828377618878468]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[calendar_date] &gt;= Date(&quot;2018-11-01&quot;)' />
            </column>
            <column caption='Good V Bad - Jedi' datatype='string' name='[Good V Bad (copy 3)]' role='measure' type='nominal'>
              <calculation class='tableau' formula='if avg(pounds) &gt; 235 then &apos;Real Bad&apos;&#13;&#10;elseif avg(pounds) &gt; 230 then &apos;Bad&apos;&#13;&#10;elseif avg(pounds) &gt; 225 then &apos;Getting There&apos;&#13;&#10;elseif avg(pounds) &gt; 215 then &apos;Stay On Target&apos;&#13;&#10;else &apos;OK&apos;&#13;&#10;End' />
            </column>
            <column datatype='real' default-format='*+#.##; -#.##' name='[Weight_Change]' role='measure' type='quantitative' />
            <column datatype='real' default-format='n#,##0.0;-#,##0.0' name='[Yesterday_Weight]' role='measure' type='quantitative' />
            <column-instance column='[Weight_Change]' derivation='Avg' name='[avg:Weight_Change:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Yesterday_Weight]' derivation='Avg' name='[avg:Yesterday_Weight:qk]' pivot='key' type='quantitative' />
            <column-instance column='[pounds]' derivation='Avg' name='[avg:pounds:qk]' pivot='key' type='quantitative' />
            <column datatype='date' default-format='*mm/dd/yy' name='[calendar_date]' role='dimension' type='ordinal' />
            <column-instance column='[calendar_date]' derivation='Max' name='[max:calendar_date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[pounds]' derivation='Min' name='[min:pounds:qk]' pivot='key' type='quantitative' />
            <column-instance column='[target_weight_this_week (copy)]' derivation='Min' name='[min:target_weight_this_week (copy):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_537828377618878468]' derivation='None' name='[none:Calculation_537828377618878468:nk]' pivot='key' type='nominal' />
            <column-instance column='[calendar_date]' derivation='None' name='[none:calendar_date:qk]' pivot='key' type='quantitative' />
            <column datatype='real' default-format='n#,##0.0;-#,##0.0' name='[pounds]' role='measure' type='quantitative' />
            <column caption='target_weight_this_week_adjusted' datatype='real' default-format='n#,##0;-#,##0' name='[target_weight_this_week (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='//min(([target_weight_this_week] + 8), 240)&#13;&#10;[target_weight_this_week] + 4.5' />
            </column>
            <column datatype='integer' default-format='n#,##0;-#,##0' name='[target_weight_this_week]' role='measure' type='quantitative' />
            <column-instance column='[calendar_date]' derivation='Day-Trunc' name='[tdy:calendar_date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Good V Bad (copy 3)]' derivation='User' name='[usr:Good V Bad (copy 3):nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[Weight (local copy)].[none:Calculation_537828377618878468:nk]'>
            <groupfilter function='member' level='[none:Calculation_537828377618878468:nk]' member='true' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='relative-date' column='[Weight (local copy)].[none:calendar_date:qk]' first-period='-6' include-future='true' include-null='false' last-period='0' period-type='day' />
          <slices>
            <column>[Weight (local copy)].[none:calendar_date:qk]</column>
            <column>[Weight (local copy)].[none:Calculation_537828377618878468:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[Weight (local copy)].[avg:Yesterday_Weight:qk]' field-type='quantitative' max='245.0' min='220.0' range-type='fixed' scope='rows' type='space' />
            <format attr='title' class='0' field='[Weight (local copy)].[avg:Yesterday_Weight:qk]' scope='rows' value='' />
            <encoding attr='space' class='0' field='[Weight (local copy)].[min:target_weight_this_week (copy):qk]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
            <format attr='display' class='0' field='[Weight (local copy)].[min:target_weight_this_week (copy):qk]' scope='rows' value='false' />
            <format attr='display' class='0' field='[Weight (local copy)].[avg:Yesterday_Weight:qk]' scope='rows' value='false' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[Weight (local copy)].[avg:pounds:qk]' value='n#,##0.0;-#,##0.0' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[Weight (local copy)].[avg:Weight_Change:qk]' num-steps='2' reverse='true' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-diverging'>
                <color>#e15759</color>
                <color>#e06365</color>
                <color>#df6f70</color>
                <color>#de7b7c</color>
                <color>#de8788</color>
                <color>#dd9394</color>
                <color>#dc9fa0</color>
                <color>#dbaaab</color>
                <color>#dbb6b7</color>
                <color>#dac2c2</color>
                <color>#d9cdcd</color>
                <color>#d9d9d9</color>
                <color>#c3cbcf</color>
                <color>#afbdc6</color>
                <color>#9cb0bd</color>
                <color>#8aa3b4</color>
                <color>#7997ab</color>
                <color>#698ba2</color>
                <color>#5a8099</color>
                <color>#4d7590</color>
                <color>#406a87</color>
                <color>#34607e</color>
                <color>#2a5775</color>
              </color-palette>
            </encoding>
          </style-rule>
          <style-rule element='pane'>
            <format attr='border-style' data-class='total' scope='cols' value='none' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='GanttBar' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <label-data column='[Weight (local copy)].[max:calendar_date:qk]' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-mode' value='most-recent' />
                <format attr='mark-labels-show' value='true' />
                <format attr='size' value='1.7251380681991577' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[Weight (local copy)].[avg:Yesterday_Weight:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='GanttBar' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[Weight (local copy)].[usr:Good V Bad (copy 3):nk]' />
              <size column='[Weight (local copy)].[avg:Weight_Change:qk]' />
              <text column='[Weight (local copy)].[avg:Weight_Change:qk]' />
              <text column='[Weight (local copy)].[min:pounds:qk]' />
              <tooltip column='[Weight (local copy)].[avg:pounds:qk]' />
              <tooltip column='[Weight (local copy)].[avg:Yesterday_Weight:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='size' value='1.7251380681991577' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-mode' value='all' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[Weight (local copy)].[min:target_weight_this_week (copy):qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='GanttBar' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <label-data column='[Weight (local copy)].[max:calendar_date:qk]' />
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='right' />
                <format attr='vertical-align' value='bottom' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='size' value='1.7251380681991577' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-mode' value='most-recent' />
                <format attr='mark-labels-range-scope' value='table' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([Weight (local copy)].[avg:Yesterday_Weight:qk] + [Weight (local copy)].[min:target_weight_this_week (copy):qk])</rows>
        <cols>[Weight (local copy)].[tdy:calendar_date:ok]</cols>
      </table>
      <simple-id uuid='{FF8B79A9-C2B5-4C75-9D91-CFA8650EC930}' />
    </worksheet>
    <worksheet name='Sheet 11'>
      <table>
        <view>
          <datasources>
            <datasource name='Weight (local copy)' />
          </datasources>
          <datasource-dependencies datasource='Weight (local copy)'>
            <column datatype='date' default-format='*mm/dd/yy' name='[calendar_date]' role='dimension' type='ordinal' />
            <column-instance column='[calendar_date]' derivation='None' name='[none:calendar_date:qk]' pivot='key' type='quantitative' />
            <column datatype='real' default-format='n#,##0.0;-#,##0.0' name='[pounds]' role='measure' type='quantitative' />
            <column-instance column='[pounds]' derivation='Sum' name='[sum:pounds:qk]' pivot='key' type='quantitative' />
            <column-instance column='[calendar_date]' derivation='Day-Trunc' name='[tdy:calendar_date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[Weight (local copy)].[none:calendar_date:qk]' included-values='in-range'>
            <min>#2019-06-01#</min>
          </filter>
          <slices>
            <column>[Weight (local copy)].[none:calendar_date:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' domain-expand='false' field='[Weight (local copy)].[sum:pounds:qk]' field-type='quantitative' scope='rows' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='exp' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-range-scope' value='table' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-mode' value='all' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[Weight (local copy)].[sum:pounds:qk]</rows>
        <cols>[Weight (local copy)].[tdy:calendar_date:qk]</cols>
      </table>
      <simple-id uuid='{7CF05FA8-E166-4FD1-B861-A6936F67A36F}' />
    </worksheet>
    <worksheet name='Sheet 11 (2)'>
      <table>
        <view>
          <datasources>
            <datasource name='Weight (local copy)' />
          </datasources>
          <datasource-dependencies datasource='Weight (local copy)'>
            <column datatype='date' default-format='*mm/dd/yy' name='[calendar_date]' role='dimension' type='ordinal' />
            <column-instance column='[calendar_date]' derivation='None' name='[none:calendar_date:qk]' pivot='key' type='quantitative' />
            <column datatype='real' default-format='n#,##0.0;-#,##0.0' name='[pounds]' role='measure' type='quantitative' />
            <column-instance column='[calendar_date]' derivation='Day-Trunc' name='[tdy:calendar_date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[pounds]' derivation='Avg' name='[win:avg:pounds:qk:2]' pivot='key' type='quantitative'>
              <table-calc aggregation='Avg' from='-6' ordering-type='Rows' to='0' type='WindowTotal' window-options='IncludeCurrent' />
            </column-instance>
          </datasource-dependencies>
          <filter class='quantitative' column='[Weight (local copy)].[none:calendar_date:qk]' included-values='in-range'>
            <min>#2019-06-01#</min>
          </filter>
          <slices>
            <column>[Weight (local copy)].[none:calendar_date:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' domain-expand='false' field='[Weight (local copy)].[win:avg:pounds:qk:2]' field-type='quantitative' scope='rows' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='exp' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-range-scope' value='table' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-mode' value='all' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[Weight (local copy)].[win:avg:pounds:qk:2]</rows>
        <cols>[Weight (local copy)].[tdy:calendar_date:qk]</cols>
      </table>
      <simple-id uuid='{1EBB73CF-1923-47A4-ABFC-8A98647D88C7}' />
    </worksheet>
    <worksheet name='Today Retrospective'>
      <table>
        <view>
          <datasources>
            <datasource name='Weight (local copy)' />
          </datasources>
          <datasource-dependencies datasource='Weight (local copy)'>
            <column caption='Today, Last Week. Last Month' datatype='boolean' name='[Calculation_1732759976706490368]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[calendar_date] = TODAY()&#13;&#10;or&#13;&#10;[calendar_date] = DATEADD(&apos;day&apos;,-1,TODAY())&#13;&#10;or&#13;&#10;[calendar_date] = DATEADD(&apos;week&apos;,-1,TODAY())&#13;&#10;or&#13;&#10;[calendar_date] = DATEADD(&apos;month&apos;,-1,TODAY())&#13;&#10;or&#13;&#10;[calendar_date] = DATEADD(&apos;year&apos;,-1,TODAY())&#13;&#10;or&#13;&#10;[calendar_date] = DATEADD(&apos;year&apos;,-2,TODAY())&#13;&#10;or&#13;&#10;[calendar_date] = DATEADD(&apos;year&apos;,-5,TODAY())&#13;&#10;or&#13;&#10;[calendar_date] = DATEADD(&apos;year&apos;,-6,TODAY())' />
            </column>
            <column caption='Today, Last Week. Last Month Label' datatype='string' name='[Today, Last Week. Last Month (copy)]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='if [calendar_date] = TODAY() then &quot;Today&quot;&#13;&#10;elseif [calendar_date] = DATEADD(&apos;day&apos;,-1,TODAY()) then &quot;Yesterday&quot;&#13;&#10;elseif [calendar_date] = DATEADD(&apos;week&apos;,-1,TODAY()) then &quot;Last Week&quot;&#13;&#10;Elseif [calendar_date] = DATEADD(&apos;month&apos;,-1,TODAY()) then &quot;Last Month&quot;&#13;&#10;Elseif [calendar_date] = DATEADD(&apos;year&apos;,-1,TODAY()) then &quot;Last Year&quot;&#13;&#10;ELSEif [calendar_date] = DATEADD(&apos;year&apos;,-2,TODAY()) then &quot;Two Years ago&quot;&#13;&#10;ELSEif [calendar_date] = DATEADD(&apos;year&apos;,-5,TODAY()) then &quot;Five Years ago&quot;&#13;&#10;ELSEif year([calendar_date]) = 2013 then &quot;—2013—&quot;&#13;&#10;end' />
            </column>
            <column caption='Today, Last Week. Last Color' datatype='string' name='[Today, Last Week. Last Month Label (copy)]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='if [calendar_date] = TODAY() then &quot;Today&quot;&#13;&#10;else &quot;Not today&quot;&#13;&#10;end' />
            </column>
            <column datatype='real' default-format='*+#.##; -#.##' name='[Weight_Change]' role='measure' type='quantitative' />
            <column datatype='date' default-format='*mm/dd/yy' name='[calendar_date]' role='dimension' type='ordinal' />
            <column-instance column='[pounds]' derivation='Min' name='[min:pounds:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1732759976706490368]' derivation='None' name='[none:Calculation_1732759976706490368:nk]' pivot='key' type='nominal' />
            <column-instance column='[Today, Last Week. Last Month (copy)]' derivation='None' name='[none:Today, Last Week. Last Month (copy):nk]' pivot='key' type='nominal' />
            <column-instance column='[Today, Last Week. Last Month Label (copy)]' derivation='None' name='[none:Today, Last Week. Last Month Label (copy):nk]' pivot='key' type='nominal' />
            <column datatype='real' default-format='n#,##0.0;-#,##0.0' name='[pounds]' role='measure' type='quantitative' />
            <column-instance column='[Weight_Change]' derivation='Sum' name='[sum:Weight_Change:qk]' pivot='key' type='quantitative' />
            <column-instance column='[calendar_date]' derivation='Day-Trunc' name='[tdy:calendar_date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[Weight (local copy)].[none:Calculation_1732759976706490368:nk]'>
            <groupfilter function='member' level='[none:Calculation_1732759976706490368:nk]' member='true' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <manual-sort column='[Weight (local copy)].[none:Today, Last Week. Last Month (copy):nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Today&quot;</bucket>
              <bucket>&quot;Yesterday&quot;</bucket>
              <bucket>&quot;Last Week&quot;</bucket>
              <bucket>&quot;Last Month&quot;</bucket>
              <bucket>&quot;Last Year&quot;</bucket>
              <bucket>&quot;Two Years ago&quot;</bucket>
              <bucket>&quot;Five Years ago&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[Weight (local copy)].[none:Calculation_1732759976706490368:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='tick-color' value='#00000000' />
            <encoding attr='space' class='0' field='[Weight (local copy)].[min:pounds:qk]' field-type='quantitative' max='250.0' min='190.0' range-type='fixed' scope='cols' type='space' />
            <format attr='display' class='0' field='[Weight (local copy)].[min:pounds:qk]' scope='cols' value='true' />
          </style-rule>
          <style-rule element='header'>
            <format attr='border-style' data-class='total' scope='rows' value='none' />
          </style-rule>
          <style-rule element='label'>
            <format attr='vertical-align' field='[Weight (local copy)].[tdy:calendar_date:ok]' value='center' />
            <format attr='text-align' field='[Weight (local copy)].[tdy:calendar_date:ok]' value='center' />
            <format attr='display' field='[Weight (local copy)].[none:Today, Last Week. Last Month (copy):nk]' value='false' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[Weight (local copy)].[min:pounds:qk]' palette='blue_teal_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='border-style' data-class='total' value='none' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
          <style-rule element='dropline'>
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
            <format attr='line-visibility' value='on' />
            <format attr='line-pattern-only' value='dashed' />
            <format attr='stroke-size' value='4' />
            <format attr='stroke-color' value='#edc948c9' />
            <format attr='fill-above' id='refline1' value='#00000000' />
            <format attr='fill-below' id='refline1' value='#00000000' />
            <format attr='stroke-color' id='refline1' value='#e15759' />
            <format attr='line-visibility' id='refline1' value='on' />
            <format attr='line-pattern-only' id='refline1' value='dotted' />
            <format attr='fill-above' id='refline2' value='#00000000' />
            <format attr='fill-below' id='refline2' value='#00000000' />
            <format attr='line-visibility' id='refline2' value='on' />
            <format attr='line-pattern-only' id='refline2' value='dotted' />
            <format attr='stroke-color' id='refline2' value='#75a1c7' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='line-visibility' scope='rows' value='off' />
          </style-rule>
          <style-rule element='zeroline'>
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='line-visibility' scope='rows' value='off' />
            <format attr='line-visibility' scope='cols' value='off' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[Weight (local copy)].[none:Today, Last Week. Last Month Label (copy):nk]' />
              <text column='[Weight (local copy)].[min:pounds:qk]' />
              <text column='[Weight (local copy)].[tdy:calendar_date:ok]' />
              <text column='[Weight (local copy)].[none:Today, Last Week. Last Month (copy):nk]' />
              <tooltip column='[Weight (local copy)].[sum:Weight_Change:qk]' />
            </encodings>
            <reference-line axis-column='[Weight (local copy)].[min:pounds:qk]' enable-instant-analytics='true' formula='constant' id='refline0' label='June End Goal' label-type='custom' scope='per-pane' value='230.0' value-column='[Weight (local copy)].[min:pounds:qk]' z-order='1' />
            <reference-line axis-column='[Weight (local copy)].[min:pounds:qk]' enable-instant-analytics='true' formula='constant' id='refline2' label-type='value' scope='per-pane' value='225.0' value-column='[Weight (local copy)].[min:pounds:qk]' z-order='2' />
            <customized-label>
              <formatted-text>
                <run bold='true' fontcolor='#ffffff'> &lt;[Weight (local copy)].[min:pounds:qk]&gt;</run>
                <run>Æ&#10;</run>
                <run bold='true' fontcolor='#ffffff'>&lt;[Weight (local copy)].[tdy:calendar_date:ok]&gt;</run>
                <run>Æ&#10;</run>
                <run bold='true' fontcolor='#ffffff'>&lt;[Weight (local copy)].[none:Today, Last Week. Last Month (copy):nk]&gt;</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='cell'>
                <format attr='text-orientation' value='0' />
                <format attr='text-align' value='auto' />
                <format attr='vertical-align' value='auto' />
              </style-rule>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='match' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='false' />
              </style-rule>
              <style-rule element='trendline'>
                <format attr='line-visibility' value='off' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[Weight (local copy)].[none:Today, Last Week. Last Month (copy):nk]</rows>
        <cols>[Weight (local copy)].[min:pounds:qk]</cols>
      </table>
      <simple-id uuid='{57192C7A-1674-4838-A29A-6E0684AFC881}' />
    </worksheet>
    <worksheet name='Waterfall (2)'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontname='Tableau Bold'>Last 90 Days </run>
            <run fontcolor='#898989' fontname='Tableau Bold' fontsize='8'>(Starting November 1st 2018)</run>
          </formatted-text>
        </title>
      </layout-options>
      <repository-location derived-from='https://10ax.online.tableau.com/t/ctkeanedev279563/workbooks/WeightChallengeIMMT2019/Waterfall2?rev=' id='Waterfall2' path='/t/ctkeanedev279563/workbooks/WeightChallengeIMMT2019' revision='' site='ctkeanedev279563' />
      <table>
        <view>
          <datasources>
            <datasource name='Weight (local copy)' />
          </datasources>
          <datasource-dependencies datasource='Weight (local copy)'>
            <column caption='GT November' datatype='boolean' name='[Calculation_537828377618878468]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[calendar_date] &gt;= Date(&quot;2018-11-01&quot;)' />
            </column>
            <column datatype='real' default-format='*+#.##; -#.##' name='[Weight_Change]' role='measure' type='quantitative' />
            <column datatype='real' default-format='n#,##0.0;-#,##0.0' name='[Yesterday_Weight]' role='measure' type='quantitative' />
            <column-instance column='[Weight_Change]' derivation='Avg' name='[avg:Weight_Change:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Yesterday_Weight]' derivation='Avg' name='[avg:Yesterday_Weight:qk]' pivot='key' type='quantitative' />
            <column-instance column='[pounds]' derivation='Avg' name='[avg:pounds:qk]' pivot='key' type='quantitative' />
            <column datatype='date' default-format='*mm/dd/yy' name='[calendar_date]' role='dimension' type='ordinal' />
            <column-instance column='[calendar_date]' derivation='Max' name='[max:calendar_date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Yesterday_Weight]' derivation='Min' name='[min:Yesterday_Weight:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_537828377618878468]' derivation='None' name='[none:Calculation_537828377618878468:nk]' pivot='key' type='nominal' />
            <column-instance column='[calendar_date]' derivation='None' name='[none:calendar_date:qk]' pivot='key' type='quantitative' />
            <column datatype='real' default-format='n#,##0.0;-#,##0.0' name='[pounds]' role='measure' type='quantitative' />
            <column-instance column='[calendar_date]' derivation='Day-Trunc' name='[tdy:calendar_date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[Weight (local copy)].[none:Calculation_537828377618878468:nk]'>
            <groupfilter function='member' level='[none:Calculation_537828377618878468:nk]' member='true' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='relative-date' column='[Weight (local copy)].[none:calendar_date:qk]' first-period='-89' include-future='true' include-null='false' last-period='0' period-type='day' />
          <slices>
            <column>[Weight (local copy)].[none:calendar_date:qk]</column>
            <column>[Weight (local copy)].[none:Calculation_537828377618878468:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[Weight (local copy)].[min:Yesterday_Weight:qk]' field-type='quantitative' max='245.0' min='220.0' range-type='fixed' scope='rows' type='space' />
            <format attr='title' class='0' field='[Weight (local copy)].[min:Yesterday_Weight:qk]' scope='rows' value='' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[Weight (local copy)].[avg:pounds:qk]' value='n#,##0.0;-#,##0.0' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[Weight (local copy)].[avg:Weight_Change:qk]' num-steps='2' reverse='true' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-diverging'>
                <color>#e15759</color>
                <color>#e06365</color>
                <color>#df6f70</color>
                <color>#de7b7c</color>
                <color>#de8788</color>
                <color>#dd9394</color>
                <color>#dc9fa0</color>
                <color>#dbaaab</color>
                <color>#dbb6b7</color>
                <color>#dac2c2</color>
                <color>#d9cdcd</color>
                <color>#d9d9d9</color>
                <color>#c3cbcf</color>
                <color>#afbdc6</color>
                <color>#9cb0bd</color>
                <color>#8aa3b4</color>
                <color>#7997ab</color>
                <color>#698ba2</color>
                <color>#5a8099</color>
                <color>#4d7590</color>
                <color>#406a87</color>
                <color>#34607e</color>
                <color>#2a5775</color>
              </color-palette>
            </encoding>
          </style-rule>
          <style-rule element='pane'>
            <format attr='border-style' data-class='total' scope='cols' value='none' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='GanttBar' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[Weight (local copy)].[avg:Weight_Change:qk]' />
              <size column='[Weight (local copy)].[avg:Weight_Change:qk]' />
              <tooltip column='[Weight (local copy)].[avg:pounds:qk]' />
              <tooltip column='[Weight (local copy)].[avg:Yesterday_Weight:qk]' />
            </encodings>
            <label-data column='[Weight (local copy)].[max:calendar_date:qk]' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-mode' value='most-recent' />
                <format attr='mark-labels-show' value='true' />
                <format attr='size' value='1.7251380681991577' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[Weight (local copy)].[min:Yesterday_Weight:qk]</rows>
        <cols>[Weight (local copy)].[tdy:calendar_date:ok]</cols>
      </table>
      <simple-id uuid='{2607F389-F6EF-4A97-BDD9-917B3CE1B83D}' />
    </worksheet>
    <worksheet name='Weekly'>
      <layout-options>
        <title>
          <formatted-text>
            <run>&lt;Sheet Name&gt; Since 11/1/2018</run>
          </formatted-text>
        </title>
      </layout-options>
      <repository-location derived-from='https://10ax.online.tableau.com/t/ctkeanedev279563/workbooks/WeightChallengeIMMT2019/Weekly?rev=' id='Weekly' path='/t/ctkeanedev279563/workbooks/WeightChallengeIMMT2019' revision='' site='ctkeanedev279563' />
      <table>
        <view>
          <datasources>
            <datasource name='Weight (local copy)' />
          </datasources>
          <datasource-dependencies datasource='Weight (local copy)'>
            <column caption='MinDate' datatype='date' name='[Calculation_1764003681186865153]' role='measure' type='ordinal'>
              <calculation class='tableau' formula='min([calendar_date])' />
            </column>
            <column caption='GT November' datatype='boolean' name='[Calculation_537828377618878468]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[calendar_date] &gt;= Date(&quot;2018-11-01&quot;)' />
            </column>
            <column caption='LT Today' datatype='boolean' name='[GT November (copy)]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[calendar_date] &lt;= TODAY()' />
            </column>
            <column caption='Good V Bad - Jedi' datatype='string' name='[Good V Bad (copy 3)]' role='measure' type='nominal'>
              <calculation class='tableau' formula='if avg(pounds) &gt; 235 then &apos;Real Bad&apos;&#13;&#10;elseif avg(pounds) &gt; 230 then &apos;Bad&apos;&#13;&#10;elseif avg(pounds) &gt; 225 then &apos;Getting There&apos;&#13;&#10;elseif avg(pounds) &gt; 215 then &apos;Stay On Target&apos;&#13;&#10;else &apos;OK&apos;&#13;&#10;End' />
            </column>
            <column-instance column='[pounds]' derivation='Avg' name='[avg:pounds:qk]' pivot='key' type='quantitative' />
            <column datatype='date' default-format='*mm/dd/yy' name='[calendar_date]' role='dimension' type='ordinal' />
            <column-instance column='[Calculation_537828377618878468]' derivation='None' name='[none:Calculation_537828377618878468:nk]' pivot='key' type='nominal' />
            <column-instance column='[GT November (copy)]' derivation='None' name='[none:GT November (copy):nk]' pivot='key' type='nominal' />
            <column datatype='real' default-format='n#,##0.0;-#,##0.0' name='[pounds]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1764003681186865153]' derivation='User' name='[usr:Calculation_1764003681186865153:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Good V Bad (copy 3)]' derivation='User' name='[usr:Good V Bad (copy 3):nk]' pivot='key' type='nominal' />
            <column-instance column='[calendar_date]' derivation='Week' name='[wk:calendar_date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[calendar_date]' derivation='Year' name='[yr:calendar_date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[Weight (local copy)].[none:Calculation_537828377618878468:nk]'>
            <groupfilter function='member' level='[none:Calculation_537828377618878468:nk]' member='true' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[Weight (local copy)].[none:GT November (copy):nk]'>
            <groupfilter function='member' level='[none:GT November (copy):nk]' member='true' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[Weight (local copy)].[none:Calculation_537828377618878468:nk]</column>
            <column>[Weight (local copy)].[none:GT November (copy):nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='tick-color' value='#00000000' />
            <encoding attr='space' class='0' field='[Weight (local copy)].[avg:pounds:qk]' field-type='quantitative' min='180.0' range-type='fixedmin' scope='rows' type='space' />
            <format attr='auto-subtitle' class='0' field='[Weight (local copy)].[avg:pounds:qk]' scope='rows' value='false' />
            <format attr='title' class='0' field='[Weight (local copy)].[avg:pounds:qk]' scope='rows' value='' />
            <format attr='display' class='0' field='[Weight (local copy)].[avg:pounds:qk]' scope='rows' value='false' />
          </style-rule>
          <style-rule element='header'>
            <format attr='border-style' data-class='total' scope='rows' value='none' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='border-style' data-class='total' value='none' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
          <style-rule element='dropline'>
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
            <format attr='line-visibility' value='on' />
            <format attr='line-pattern-only' value='dashed' />
            <format attr='stroke-size' value='4' />
            <format attr='stroke-color' value='#edc948c9' />
          </style-rule>
          <style-rule element='refband'>
            <format attr='reverse-palette' id='refline1' value='false' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='line-visibility' scope='rows' value='off' />
          </style-rule>
          <style-rule element='zeroline'>
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='line-visibility' scope='rows' value='off' />
            <format attr='line-visibility' scope='cols' value='off' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[Weight (local copy)].[usr:Good V Bad (copy 3):nk]' />
              <text column='[Weight (local copy)].[usr:Calculation_1764003681186865153:ok]' />
              <text column='[Weight (local copy)].[avg:pounds:qk]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
            <customized-label>
              <formatted-text>
                <run>&lt;</run>
                <run>[Weight (local copy)].[usr:Calculation_1764003681186865153:ok]</run>
                <run>&gt;  -  &lt;</run>
                <run>[Weight (local copy)].[avg:pounds:qk]</run>
                <run>&gt;</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='center' />
                <format attr='vertical-align' value='center' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='trendline'>
                <format attr='line-visibility' value='off' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[Weight (local copy)].[avg:pounds:qk]</rows>
        <cols>([Weight (local copy)].[yr:calendar_date:ok] / [Weight (local copy)].[wk:calendar_date:ok])</cols>
        <table-calculations>
          <partitionable-measures>
            <column>[Weight (local copy)].[fVal:usr:Good V Bad (copy 3):nk]</column>
          </partitionable-measures>
        </table-calculations>
        <forecast-specification auto-forecast-agg='false' band-confidence-level='95.000000' enabled='true' fill-type='fill-zero' forecast-agg='Week-Trunc' ignore-last='0' model-type='auto-season' range-periods='Month-Trunc' range-size='1' range-type='next' show-prediction-bands='true' />
      </table>
      <simple-id uuid='{A2B09922-E407-4240-9099-AD64FE97B327}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='LoseIt'>
      <repository-location derived-from='https://10ax.online.tableau.com/t/ctkeanedev279563/workbooks/WeightChallengeIMMT2019/Dashboard1?rev=' id='Dashboard1' path='/t/ctkeanedev279563/workbooks/WeightChallengeIMMT2019' revision='' site='ctkeanedev279563' />
      <style />
      <size maxheight='800' maxwidth='1017' minheight='800' minwidth='817' sizing-mode='range' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='98000' id='16' param='horz' type='layout-flow' w='98426' x='787' y='1000'>
            <zone h='98000' id='13' param='horz' type='layout-flow' w='98426' x='787' y='1000'>
              <zone h='98000' id='11' type='layout-basic' w='98426' x='787' y='1000'>
                <zone h='49001' id='10' name='Weekly' w='98426' x='787' y='49999'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='48999' id='14' name='Last Week Waterfall' w='98426' x='787' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <simple-id uuid='{F9DB2A85-1C4C-4EA5-A720-A99FADB3B05F}' />
    </dashboard>
  </dashboards>
  <windows source-height='48'>
    <window class='worksheet' name='Daily'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='1' param='[Weight (local copy)].[usr:Good V Bad (copy 3):nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-width' />
        <highlight>
          <color-one-way>
            <field>[Weight (local copy)].[usr:Good V Bad (copy 3):nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{272934D0-D71C-4E37-B8FE-4853E4AD91A2}' />
    </window>
    <window class='worksheet' name='Compare Today to'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-width' />
      </viewpoint>
      <simple-id uuid='{2F11AC01-AC38-432D-8EDF-52E44CABA6D4}' />
    </window>
    <window class='worksheet' name='Today Retrospective'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
      </viewpoint>
      <simple-id uuid='{747A7EC7-DE7C-4122-A612-7E25CE569BB9}' />
    </window>
    <window class='worksheet' name='Daily Change'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='2' param='[Weight (local copy)].[usr:Good V Bad (copy 3):nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[Weight (local copy)].[usr:Good V Bad (copy 3):nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{DB8AFD26-BA00-4E87-BC3A-D8560A8A04C3}' />
    </window>
    <window class='worksheet' name='Weekly'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='2' param='[Weight (local copy)].[usr:Good V Bad (copy 3):nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[Weight (local copy)].[:Measure Names]</field>
            <field>[Weight (local copy)].[usr:Good V Bad (copy 3):nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{D8B9AD6C-F790-422D-A669-137114418498}' />
    </window>
    <window class='worksheet' name='Daily Change (2)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='2' param='[Weight (local copy)].[usr:Good V Bad (copy 3):nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[Weight (local copy)].[usr:Good V Bad (copy 3):nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{BFCC4B20-7F69-4B2A-B085-67E8E7A6222D}' />
    </window>
    <window class='dashboard' name='LoseIt'>
      <viewpoints>
        <viewpoint name='Last Week Waterfall'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Weekly'>
          <zoom type='entire-view' />
          <selection-collection>
            <node-selection select-tuples='false'>
              <oriented-node-reference orientation='vertical'>
                <node-reference>
                  <axis>[Weight (local copy)].[avg:pounds:qk]</axis>
                </node-reference>
                <page-reference />
              </oriented-node-reference>
            </node-selection>
          </selection-collection>
        </viewpoint>
      </viewpoints>
      <active id='10' />
      <simple-id uuid='{B7E48A92-78DA-4002-910A-C03287A9BDA4}' />
    </window>
    <window class='worksheet' name='Last Week Waterfall'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[Weight (local copy)].[none:calendar_date:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card pane-specification-id='1' param='[Weight (local copy)].[usr:Good V Bad (copy 3):nk]' type='color' />
            <card param='[Weight (local copy)].[none:Calculation_537828377618878468:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[Weight (local copy)].[usr:Good V Bad (copy 3):nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{BA1A7ED3-DB7D-4B0F-9D93-4CFDA3BD67D2}' />
    </window>
    <window class='worksheet' name='Waterfall (2)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[Weight (local copy)].[avg:Weight_Change:qk]' type='color' />
            <card param='[Weight (local copy)].[none:Calculation_537828377618878468:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
      </viewpoint>
      <simple-id uuid='{0299ABEE-532B-4BE9-B9C8-542C7BD89427}' />
    </window>
    <window class='worksheet' name='7 Day Rolling'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='3' param='[Weight (local copy)].[usr:Good V Bad (copy 3):nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[Weight (local copy)].[none:GT November (copy 2):nk]</field>
            <field>[Weight (local copy)].[none:calendar_date:qk]</field>
            <field>[Weight (local copy)].[usr:Good V Bad (copy 3):nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{7F351D59-E96F-4492-A8A1-000D2F2148BA}' />
    </window>
    <window class='worksheet' name='All Time'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='3' param='[Weight (local copy)].[usr:Good V Bad (copy 3):nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[Weight (local copy)].[none:GT November (copy 2):nk]</field>
            <field>[Weight (local copy)].[none:calendar_date:qk]</field>
            <field>[Weight (local copy)].[usr:Good V Bad (copy 3):nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{87EA83D7-90F0-4352-9A27-309A387E2FB1}' />
    </window>
    <window class='worksheet' name='Sheet 11'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[Weight (local copy)].[none:calendar_date:qk]</field>
            <field>[Weight (local copy)].[yr:calendar_date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{815973E5-0469-4DF9-A393-506B46E968D8}' />
    </window>
    <window class='worksheet' maximized='true' name='Sheet 11 (2)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[Weight (local copy)].[none:calendar_date:qk]</field>
            <field>[Weight (local copy)].[yr:calendar_date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{7547CDB7-6619-4265-A40B-4A8F8A5848AA}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='7 Day Rolling' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAUM0lEQVR4nO3daWwj93nH8e/M8BQpSqLuW7sr7aG9L8eO7dhwrhYFWiAoggIpGqBB0Rd9
      3fcG2nd9U/RF3/VVmhdF0DZF48RxEmdTw8d6T60sre5rdVCiRFK8OZyjL9a78dpLepdLzcqa
      5wMIyx0O+Tyk5qe5OH8qtm3bCOFS6vNuQIjnybPXBSzLwrKsvS4jRE2Uvd4EevD0pmmiadpe
      lhLiqdW0BsintpicXSLQ1Mlg1MOHk/c41x9marPEydFRWsNexm7eIKOrfO2ly3iV+49TFKWe
      vQvxzGoKQLCpjZ7OLGowzEYiRW9bI4ap4NNsbGxso0hDxwADSoZUCdoD9W5biPqoaSd4+94s
      S7FdSoUc2XSC2YUlTF8DYZ9KIrlLtmSRi68ys5Ym4qt3y0LUT037AKahUyjqeLx+An4vhmGg
      KlAo6QQDASzbBsvAsFUCPi8AhmHg8ez5PrcQT2XPd4IfkACI/UjOAwhXkwAIV5MACFeTAAhX
      kwAIV5MACFeTAAhXkwAIV5MACFeTAAhXkwAIV5MACFeTAAhXkwAIV5MACFeTAAhXqykAlmlQ
      KBaxbRvLNDBMC6OsU9LLwP2RIErFIoYpw6GI/a2mS7Ria8vENhL0Hj9Bau4GxZYj2IkNdNPm
      9KXLkItz5+4y/sYWzo0O17tnIeqmpgC0tnWQ08FTSKKE2vGaBbxtfQz5cqQLFg2FDIOjF0nH
      5h4OjGWaJjIKo9hvagrA+K3rWL4mfN4o+XSSlNJICztMGhonT7Zh+CLMj31AY1svqqqiqve3
      tOSaYLHfyEXxwtXkKJBwNQmAcDUJgHA1CYBwNQmAcDUJgHA1CYBwNQmAcDUJgHA1CYBwNQmA
      cDUJgHA1CYBwNQmAcDUJgHA1CYBwNQmAcDUJgHA1CYBwNQmAcLWarlJPbK6yvJHiyOFeFuYW
      6Ogfpry7RjIPo6dG8dg605OTtPQeoSvaWO+ehaibmkaFyOWyZHa2INyCpufZTBWxi7sMHDlG
      pDFENr5Ewo6S217nxIlj2LaNaZpomrYXr0GImlVdAyR302iqSqQx/Mj0QjqJFWimMxJiY30X
      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
      AAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='All Time' width='192'>
      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
      NzEAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Compare Today to' width='192'>
      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
      rkJggg==
    </thumbnail>
    <thumbnail height='192' name='Daily' width='192'>
      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
      IxnC8TTTM8Pd1tLeX+O1pSaTSZXBsWmGkn0rH1cukoincFCYmZ31vTQ6d/YNsiPjKKEY0326
      ry9fo+aGCGkKE1MzxPrmNm+/dZbhTBaUMNPTffrZdd44+zbj2SEiiSFmxge7v7dZWOWNNYvR
      hMLw2AyDid6E9v62fZ3s6ASaEffbtr7Hq29v39W2W6vXKbQ0IiGV8ckZ4nezrWIwM31320bu
      sK1VXOW1W6272vbS5YukEilsVGZmZ3q2re/yyvkcM0MGqcw4E+le77W+fJWa2x5qTUxNgzhU
      PLF644p45TvfEecvXREtx+tKXMcUl94+K777yqvi2tKaL9fVa9fauV1L7OWLd5W1aiVRqrV6
      gnpeXF3LCyGEKBZywnLcrmhn45Yo1kzheY7Yy+XvWp5tNkRhv9oT2E1xdWlFCCFErVwQtZbd
      FVn7G2JppyY8zxN7e3u+8q5dvyZczxOea4u93N11N+tlsV9tdtM3V5dEpWEJz72Pfq26KJRq
      PYFVF1dvte1WLRVEveV0RY3CuljJ1e+q38O27fb6LbFfs97BtnVRKN1p21UhxEHbmvsbYmn3
      3rb17mbb2q64ut7+u5DPCdvt1bON1SVRadhd2x76EGh3c5Vqy8GTNBbmettUheewvLSEJymE
      okkmR3tLXk6zws3VHRTZY3B0hoF47+uI+3ub5CtNXBfmFubQb7cqQrC+soTpgqyFmZ0a6xtz
      Nllabodij6WzjPRFrmiU86zv7iMhGJ2c7W0AE4LdrTUqTRuByvz8NEpXd5eVWzdxUdAjCabG
      esu4TqvKzZVtFFkwMDLla31LuS32Sg2EBzPzc4Q6+1Vcq8HSyjqyJBEfGCXbt4W6VsqxuVdC
      QjA+NUfUULv67WyuUruvbWVC0ZTPtnazzNLqbse2swzEe5Pr+9v2JqYrPbBtx6Zm28OVH8m2
      FW6u7By0rRCsLd/A8mQUPcLM5GhXP59tB0cPezt0k5WdKgsLCyTEPuvF3qpIq7RJjRQL8/Ns
      rfuXz65eusrk4iKLi4vcuOKPsXljZZP5+Xmmki7XNvq3QxfZKkssLCxglreptHqrNjv/f2F3
      ttIwGIRh+KUgeuAWRRBDpSXff/9XE0zSZrNZEKlJiRBC3Q4UkzSIFzDD8Bx+DDObmGPLRhJp
      FIz6BUHEQmJpXxNEg3Xej46krDES1qwm3fbp0b4pqN7OkeNQZuPZA9fDdoQxYu2N742u4gxH
      DvcW+Jv+mG2RRJzezJFEEnrjmlXMUmJxe4EfD/4NvLekT9+2Z58VWdXbtlX2Y6uJre/6zI1B
      RqwexjHoyDYfrkNvKXazX9umG9g+xpz8Z3t3RRAe2u4wEpcT25z6D1vf9bFlprbdM2VzhCRe
      X3LafT9fnoS97drjCykGuDkHcTi5AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Daily Change' width='192'>
      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
      FQcAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Daily Change (2)' width='192'>
      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
      /mGO/w+kFxkXGUC2jwAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Last Week Waterfall' width='192'>
      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
      2o0AAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='LoseIt' width='192'>
      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
      QbfcCKHv4P8HOymI7GjKYRMAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Sheet 11' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nOy9aXBcZ5am99zc9xWJRCb2HdzBnRJF7VJJKnWpespV7d6qZ9pdXd3j7g7/
      6nbEOOyYiPES9oTt8BLj8bTtirLL3e2pVUtrKUoitXARxQUgARAgAALEnvueefPmvdc/EkgC
      RAIEQFAUWXx/5XLz3i8z7/m+853znvcIqqqqPMZj/IZC86AH8BiP8SDxlRmAoihf1aUe4zE2
      jMcG8Bi/0XjsAj3GbzR0D3oAj/H1xMLCAqdPn2bnzp1MTEyg0WhoaWmhv7+fF154AZ/Px0cf
      fUSpVOLFF19Eo3k459KHc9SPcd/h8Xh46qmnyOfztLW1USgUWFhYwGKxkEgkEEURnU6HzWYj
      m80+6OFuGY8N4DGqIhwOs7CwQG9vLzU1NQiCQDqdpq2tjWg0ikajQRRFRFFEq9U+6OFuGY9d
      oMeoilwux8jICKqqEgqFqK2tpampiYsXL3LixAkikQg1NTUoioLZbH7Qw90yhK8qEVYqldDp
      HtvbY3y9sKU78tbYEDNzSZo6GpmfmsHk9FBMRCmiY9+Bg6i5MFeujuAKtLCjrX67x7wuZFmm
      v7+ftrY25ubm0Ov1aLVa5ubmaGtrw+/3E4vFmJ2dZefOnQ/t5u2rhiiV+O//4Sw9zT6+/VQ3
      giA86CFtC7ZkAMHGForKDB63h9jsDHqjmSIKqgqCANl0iq79TxCdHkVRFBRFQZZlvorFJhwO
      o9Vq+eyzz2hra+P8+fOcOHECURQJh8O43W4+/PBDDh48SKlUemT+yPuNXL5I/3gIVJCOtj0y
      v9uWDGDoah8mVx3ZVBqry0MyNk9JY8ZIkXQmi0ZnYGpsCK3ejEajqcyyX4ULVFNTw+joKE8+
      +SRTU1Po9Xr8fj+jo6P09PSgqirhcJjPPvuMb33rW7hcrvs+pkcBbr0em8nA7nY/BoPhQQ9n
      27ClO7KlvYuCJGO12UDQEGxsQSlkKao6rCYdGls9WoMNs9253eO9KwYHBxkfH8dgMDA/P48k
      ScTjcQKBQOXm7+zsJBKJPN6TbAK5gkQqJ5LOiQ96KNuKLd0BdpcH++LjSgRA78Sy7Bin231v
      I9sient76e3tXfW63+8HIBgMEgwGv+phPfSIJHOUZIVMvvigh7Kt+I3YAUaTOeLp/IMexkON
      aKpsANm89KCHsq145A2gJCv8yx+d5l/9+FOKJflBD+ehxUI8i9tueuRcoEfeALQagZKsUOO0
      oNc+8l/3vmEmnKalzkVelFCUR6eG6pG/I5JZkUSmgF6neWRCdw8CC/EM7UEP+WIJ+RGitj/y
      BnBjOoqqljdxj6s/t475WIb2ejfFkoz8eAV4eHD5xjwHuwOIxRIl+dGZub5KlGSFRLpAk9+J
      JCmPXaCHBbKscOXGPCf2NlMsKRSlrW2CM5kMkUgEURSZm5tDkiQymQyxWGzxOnLl9UcRsVQe
      k0FHjcNCTpQeqYnkkc4ELcSzaDUaupu8iMVSOXm3SeKioihcu3aNiYkJ9u7dW8kuh0Ihdu3a
      hcfj4eLFi8RiMUwmE88+++x9+S4PEpFkDrfdjF6vwaDTUiiWcFiND3pY24JHegXoG1uguc6J
      y2bCaNBtKYmj0WhobGykpaWFlpYWotEoRqORSCTC4OAgiqJgt9uZn5/HZDLdh2/x4BFO5Khx
      WtBqNDisxkcqFLqlFWBqbIiZcIaWtnpmJqdxePwUMlHiyRyHnngSnZTiSv8g3oZO2ht82z3m
      DePKov8P4LabiCZzNPs3R8+QZZlf/vKXBAIBtFotgiBQKpXw+/0UCgWmpqbIZDIYDAby+Ucz
      2TYTSVHntQFgMxtI/aYbQH1LJyVlHJvdhVE/h6A3snvPbkZGpzHrNURDUdr3HCEyPYaieL9S
      NugSRElmbCbGH7+6F0mS8NhNRBLZLfnpf/qnf1p5XI1mEQwGK68/ivuA2UiaXS01SJKE1aQn
      nS08Mt9zSwYwOTaCo7YRQZZpam1jbHKeuF7E7Q+gKjIarZZELIykaL5yNugSxudTeJxmvC4b
      Oq0Gr9NCIiOi1+vv+dyKqpIXJSxG/W9EbiGcyNFQ60Sv1+OwGskV5W35Hb8O2NIewGDQMzc9
      RUGSmJ2Zp629DaPdS43TjJjPYvM2oJVytLa1bvd4N4wLQzO0Bz3oFrO/NU4LsW3iA538cpx/
      9l//ir6xhW0539cZqqqyEMsQ9JbpjzaLgUzu0SHEbdkFWqrz8ro9i4/KUQGz1QFAc1v7vY5t
      y1BVlYGbIb73/O7Ka267mf6x0Lac3+swUyzJaH8DqsnSuSIqYDWXawCcFiPxTOHBDmob8VD8
      g6qqUiqVkGUZWZaRJGnFa0vHLL0eTxcIJ3N0NXgq5/A4zMTS+W3Zh9Q4LagqpLLVbwRFUSpj
      KRaLlaq4UqmEqqqVsT4ManmhRBaPw1xZSS0mPbnCo+H/w0OSByiVSrz11lvkcjm6u7vp7+/n
      0KFDXLx4kSeffJKenh4+/fRTQqEQr7zyCldGw9TXODCbbvupNrOBoiRTLMkY9ff2tZfCqeOz
      cY7vaVrxnqqqnD17lqGhIY4ePcrIyAg2m41oNEpdXR3PPfccoVCIzz//HKPRyDe/+c17Gsv9
      Riiexeswo9WU9zo2s4H0I1QT8FCsADqdjt27d7N7924aGxvJ5/OEw2FMJhOhUAhVVZmamqJY
      LDI1G+LfvnkRUSqtmO2tJj1SSd5yNng50vkiZqOOG9OxVe8JgsCuXbtobW2lu7sbSZKw2+0s
      LCwQDoeRZRmfz4eiKA9FOWYokaXWZa1s9h1WE+ms+Mjwqh4KA8jlcvz0pz8lFAoxMjKC3W7H
      YrGgqiqxWIzp6WlaWloAKBYy2C0GXjnSscJHt1uMSCWZQrF0z+PJFyTagx7GZuPkxZXugKqq
      /N3f/R3xeJzBwUG0Wi2JRIL6+nrS6TTT09PcvHkTgGg0es9jud+YCacrOQAAi1FHUXp0CHEP
      hQtksVj4m7/5G6A8wx4/fhyNRsOxY8cqM1NDQwPHjh1jOpxGr5vi2K6GFefQaTVYTAYSmQI+
      l/WexpPOF6n32cmJErORNO31nhXv//CHP0RVVQRBYM+ePWg0msqMuTTelpaWh0KSJRTPcmTH
      7RJSo0FHUZaRFaWyL3iY8VAYgCAIVeX37ozBa7Varo6H6GmqwahffbzbbiKZvfcsZiZfxGUz
      0VLnYnQmtsIABEGomhuoNtaHAaFEljqPvfLcYtRTEEvIsgqPQCrgoTCAzaBvbIHjuxur3oQ1
      Tguh+GohV0VR+OCDD5ibm6O3t5erV6/S1dXF5cuX2bVrF08//TRnz57l5s2b9Pb2kitI1Lgs
      tAfdjM3G7zqmSDLHf/5/fMwrRzv41vHue/p+sixz9uxZWltbiUajiKJYCQLs2bOHxsZGxsbG
      yGaz7N27956uJUolUlkRn+u23IHVrF+sCfj6R7A2gkeqQUahWOLmbJy97f6q77vt5qorgCAI
      HDhwgM7OTtrb21EUBYvFgtlsplQq7xkslvJNMDo6Sior4rQa6W7ycn0yctdxybJCOJEjtR2r
      TyZDc3MzfX19+P1+FhYWuHbtGt3d3dTV1SFJEgMDAySTScLh8D1dK5zIYbcYKhEgoBJBE7ch
      mPB1wFdmACMjI7z99tuMjIxQLN6fMNrgRBinzbQmVbfGaSaazK16XZZlfvaznyGKIuPj47jd
      bhYWFggEAszNzTE/P4/P58NoNNLa2kpukQbR4HOQyorEUutnmD2OMgd7+Uy6VZjNZiYmJjh2
      7BjJZJJCoYDb7ebcuXNcuHABnU5HY2MjV69eJZdb/V03g0giR63LivYOX99i1D8y8ihb1gad
      nk3Q1NnIwtQsBocPIRtGMXnYtbMDMRniyrUbuPxN7OxoBKCrq4tgMMjo6Chnz55lx44dKIpC
      bW3ttm0GByfCHOwOrLk5c9vNVekQWq2W3//930dV1cpNbrPZyOVyGAyGil//0ksvYbPZ+H/P
      fozVbMCo11HvczAdTlVu8mqIpQuUZIVQ/N5uSICZmRlu3LiBqqpkMhkkSaJQKKDRaLDb7czO
      zpLL5aitraWhoeHuJ1wH87EMNS4LmjvcSYfV+JttAIGGZkRFT427hvjMDEadzFyqiEMnIssq
      +Wya7ju0QVVVxW63s3//fhRFqfDpE4kEzc3N9PT03LPM9uUb8/zhy7vXZCo6LXri6Txisbji
      T1VUFa3egEFX3phaLBYURVnF7zebzYhFCbFYwqAVkOUSbUEXAzcX2NG0MhK0HHPhJIqqEk6U
      b9hIJMKnn35Kd3c309PTALS2ttLX18czzzyDz+fjyy+/JJVK8eyzz66YIBoaGvjDP/zDVdfY
      tWtX5XFtbW35ey3+9kuYmZnh/Pnz7N27l+vXr2O323G73YyNjfHiiy9itVp599138fl8HDly
      hNlIihqHedXvaTHqHhlG6JYMYKDvEgaHn2QijsHqIJsX8bqsiFKeRDKFTmfk5vV+jFbnmmzQ
      +vp6gsEguVyOmzdvEo/HGRkZweFw0NLSgl6vZ3BwELu9HIEIhULs37+fs2fP0tDQQEtLCwsL
      CwwPD3Po0CFyEiQyBboafWsyFR02M7KsoqgajIbbY/mff3ae67ci/Fc/eAGnbf2iFoUSkqxg
      s5jQ6/V0Nnj56NLNddmR4WQel81ENFVAq9Ph9Xo5ceIEt27doqOjg4GBAW7dukUwGKw0oxgY
      GODIkSPo9fotrZDzsQxXRud5rrel8l0DgQBHjx4lmUzS0dHB+Pg46XSa1tZWXC4XuVyOdDpN
      KBRi3/5DfDk8x4uH2lZ9N7fDQionPRKM0C35Ht279lEf8ONyewkE69nd00P3zh307NiNx2HB
      VROkp6uDno7mdc8jCAJWq5Xdu3fT1NREW1sbsViMt956iw8//JBMJsPly5fRaDSEQiH6+/tR
      VRWv1wvAwMAA7e3tGAwGBm6GaPI7MRnWtmmryUBJVhCllcmwvFgiXyxtiNwmyypisYR1kWax
      s8XH5EJy3ULxuViGXa0+UlkRVVGJx+PMzs5y4MABnE4nWq2Wzs5OnE4nX375JQAul4uZmZlK
      3fFmcfLLcf7NL79kcOL2Rnh+fp50Os2OHTvwer1IksTBgwdRFIWrV69itVp5+eWXsVgsjExF
      mY2kq+5vTAbdtiQUvw7Y0gpgttpZclaMFaVgLfplosFWm+3Oj60LQRDweDwcPXqUYrHI3Nwc
      4+PjhEIhrly5wszMDJ2dnQwNDSGKIi+88AIOh4OTJ0/y/PPPc+1miCM7gmg0a/PzrWY9JVkh
      L0q4Fmd6VVWJZwoIgFZ7d26/rChlPtGioTmtRixGPXPRNPU+R9XPhOJZ9rb56RtdQF703UdH
      R1FVlUgkgtvtRqfTMTExwdNPP004HGbnzp3Mz8/j3qLGaluw/Lnl1VupVIrBwUFUVWVycpLG
      xkYKhQLz8/M8//zzhEIhLl26xJ59+/m/P7zGH72yj1ePda46t8NifGSqwr52eQBBEDAajXg8
      Ht58800aGhqYn59nfHwcWZZxOBzodDqmp6cplUpoNBr0BgMXh+f4rSfXj7Ev1bSmsiKBRX57
      PF1gIZahWJJJZAqYjesv68WSjKpSWWl0Wg31Pjvjc4k1DWA+luGbT3SiEQTSOZH29nba21fT
      xZubb6+YgUCAnTt3rjuW9RBL5anzWPnHc6M8tbcJrUbDnj172LNnD8CKHEFXVxcAdrudV199
      lR+9e4Uap4XfOt5dNaBgtxiYnE9ueWxfJ3ztDGAJDoeDv/qrv6o8l2WZbDZLJpPh/PnzTExM
      0NnZyZEjR5iYT2Ix6Ql4777qlCNBt2nM47Nx/G4rgkZgIZatGMZayOYlLMtYpoIgsKPZx/XJ
      MCf2NlX9zFw0g99tw+eyEE7k8DpWhkMVVeUfPhrA57TwwsHWbakym49leP5AK59fnWJoIsLu
      ttoNfe7i8Cxnrk3x3/75S2tG02xmA5n84xXgK4VWq8XhcOBwOHjttdeYnZ3l6tWruN0eLk5k
      aPZZNsRN8TrMhBO3s8GXbsyxs7WWTE7kVihJb2cdAENDQ3z55Zfs3LmTmzdvotVqMZlMDN2c
      w6T1IUkSP/7xj+no6KCraQenLk9QLMmVSNISlsKFTquxYgA9d9hJvlDk7978mOamRppdKgZ9
      eaM8OjpKa2srTqeTZDKJIAg4HNVXmeVQVZXZSJpXjnZgNup59/yNuxqAoqjcCiX5t29d5J//
      9uGKi1gNdouB1F2qwrLZLCdPnqSlpYVkMkkmk6G3t5dTp07x5JNP0tzczKVLl5ienubVV199
      YE03HgibSRRFhoaGyOfzjIyMEA6HiUajXL16FVEszyylUolQqHoF11Ks/sUXX6S+pYOff9xH
      /6XzfPDBB9y4cWPd8Jzbbia+uALIssL1yQgHOutornMxFUpVjuvs7KS7u5tAIIDX68VoNJLP
      5ynJKnarCVmWKRaLGI1Goqk8E/MJTl2eWHW9+ViGGqcFQRDwOi1VE3G5TAqrUUP/lS+5MDDJ
      2bNnuXz5MoqiVDhDIyMjjIyMbOj3LcnKIunPwrO9LVy/FWU+lln3MxPzCf763/yaHU0+9q2R
      SV+C2ahHlNbXCNXpdDz55JPE43Ha2toQRZHR0VEaGxsJBMpKHR0dHfh8vgfaZ/iBGMDs7CyJ
      RIKLFy+Sy+X48MMP+eKLL9Dry0XmqqryxRdf8OGHH1KSFa6MzletQhIEgVqPnc7ODv7kD77H
      /v37WVhYIBKJcOXKFebn51dRMDwOM4nFkr5oKk+hWKLJ76S+xsFU6LZfe+bMGQqFArIs43Q6
      SSQSdHd3YzabUHJx8vk8hw8fZmxsjO5GLzVOS9VkWNn9sSII5UxwpIoBWG12MpkMf/VHv83P
      PxkkL5ZwOByV8CjAzp07Nxx2LBRLZPJF3HYzdouBQ91B3v9ibN3PeOxmSrLC8T3VeVQrxmvS
      IxblMiFuDRSLRUZGRjh27BgajQaj0VjJpn/++edAmVbS3Ny85Y3+duCBGIDPV3Yhent7SaVS
      2Gw27HY7Fy5cIBaLkUwmGR8fp1Ao0D86z3/xf57i7bPVZ7+l0GVLwE1tbS1PPfUUdXV1OJ1O
      +vv7eeedd+jr66twepa7QONzcQJeO3aLkWCNjVROrPD7u7u78Xq9mEwmbDYb3/jGNwgEAuhs
      tdTVN2I0GvF6vbzyyiv4PTb2dfirhgwjiSw+d7mgpNZlJZzIriomudJ/lWxsDq8hj1Ob48uh
      KSRJQqPRIMsyMzMznD59ms8++4x0On3X3zeTLyIIAk6rEUEQeP3JLj7pm1xVu7AcNnM5472k
      o7QeTAYdxZJMaZ0VIJVKMTk5yZdffsnQ0BCCIGCxWJiamqK7u5uZmRlmZ2c5d+4cqVRqzfPc
      bzyQPcDnn39OJBLBZrMxPz+PIAiVWSCfzyNJErt372ZwcJCWgAu33URnw9qZ1mxewmq67UMK
      gkBraystLS2kUimmp6eJxWL09/eDyUUqk0dRVPpG59nXUV7ubWYDAkIlEuT3+yttlXy+2+Je
      bl+Aklwmy7W23la96Kj3cHU8xMuHV0Z3ZqMZmmrLfrvHYSGaypczz8tmWaOrnqdeeoNnThxn
      x579/Gf/7iMc/lZ+/9ChyjH19avbzQ4MDJTDlnv2cOPGDcxmMzqdjr6RaTzWBkRR5J133in/
      HoEaPr48wWvHOlFVlWvXrjE+Ps6RI0f47LPP6NndS2J6kA/ef59XXnmFfD7Pr371K/bt27cq
      GmU2lqvrlHVWgPr6en7v935v1evLI133StXYDjwQA/jGN75ReXzgwIHK4+PHj1ceNzY20tvb
      i6Kq+FxWTIbqy39JVsrkNNPq9wVBwOl04nQ6kWWZPXv2cOHyVcavfcHn52oYGI/w3P4WoPyn
      uu0mQvH1I0HZglTV1Wmv9/DeF6OrXg/FMxzbWb55vQ4zqayIoqgs36/PRtI0+BwIgoDfbeWf
      PN3D375zif/0955al2PU3d1d4f3EYjEkSSKZTJIVZZoa3RiNRp566inGxsbQ4+VH716h3udg
      b1stwWCQVCqFqqrs2LGDC1cGMGtKHDp8GCjTJhoaGmhra1t1XYtJj1RSkOTNMUJHpqLMRdOc
      2Nu8br7mq8TXvqRHYLEQe43ES1GSMeq1Kyi71aDVavH7/Tz3zNMEO3tRDU4W5qbpv/AZfX19
      ZDIZ6mvs3AqtH99OZQvYzasjFk21DhZi2VXjnI9lqfOUw7Neh5lUTqR0x8x5K5Si3nfb6J7d
      30IonuVf/fiTVVnr5Th//jxQNvRgMEg8Hmffvn0IGh1mNUM8HueTTz6hubmZptqyJKRxMUo1
      PT1NMBjE4/EgiiLJrIg/0MA7b7+NLMt4vV70ej0ffPDBqutqBAGzUbfpfmH//tQg/+svLrAQ
      X39D/lViSwYwNTbEubNfML8wy8ULXzB8c5arl87Sd+06JQXETJwvzp5h9Na9C0cJgoDVpF/T
      f82LEkaDbsOxc4tJj05vYDxcYM+uHbz0wnOoqspHH31EMRXi+tjUunTtvHibBrEcRr2O1oCL
      Wwu3DUgqycTSebzOctxfq9XgsBiJplZuhGciKYI1t8ObZqOefR11eBxm9Lq1K8eampoqMiuF
      QoHnnnsOp9NJKK+ltaW54grG43F2tPjwu23YrWXjXfLPR0dHGRsbw+pwo0hZGhoaWFhYQJIk
      pqen6enpqXptq0lPprA5RmhPUw31Pgd+9+ZYAvcTWxPGau5AUiawO10YdbNotZDN5HEGg2gE
      SCZjtO89SmR6FEXx3bM2qNmgJZUVq4Y3U9k8JoMWWS4hsbGiG5vZwCd9k3zreBcWi4Vdu3bR
      09ND3+g8/9OP3+YtSxK/309bWxter7dCRlOBdF7EbNRWHUuT38H1W2G6Gsr7mXAih82kR4NS
      Od7rMLMQS+N3lV0bWVGZj2YIeCwrzrm/o5Yz12aQSyXWcjTq6uqoqyvnLZb2KSVZweSqI+hz
      YbPZ2LdvHwCKLGM2akmk8tQ6zbz66quV83R3d/PW2RscfdLNM8/c1j594403gOp6pzazgWQ6
      vylGaDYvIpVkZLnEJr2n+4YtGcDYyBB2XwNKsUigsZFbMwu09ewhPDtJMhdA0OqILswgKdpt
      0QZ1WE3ki6WqYcBiScVs0FPI59FqNeh0OrLZLF6vF1mWKZVKmM1misUiyWQSr9dLjcvCjekY
      +7uClXPq9XraGnw46lp54aVniIYXGBgYYN++fcRiMRoaGjCazBQlBYvJWHUsO5p9XB6Zr7wX
      SuYJeO2V8C5AwGsnli5Ujkkmc+i0GhxW84pz1nkcRFOjaHW6VXz89VCQRHKFEj63bdUY7RYj
      WbH675jJS3gclg2HWu0WIwVpcxqh6bxEUZLRanVfmz3Alu5Ih9NJMh7D5PeRSGbo6OqhmArj
      DrZhFopoaurJz81S39CyLYM0G/Vrkq9yooRBp+HSpYuEw+FK9OjAgQOMjY0hSRKvv/46p06d
      IpfL0dXVhdNqwu+2UudZqQ5htxjRCAJZUanwdSRJYnZ2lo8//hit3kB0YRaL8WjVsbQG3Pz7
      jwcrzxdiGfwe2wr3zOMwrwiXzkXSuO1mjIaVro7NUmauSpsU8lrS7axWFVdOAlavXktmxU25
      Ji6bqZJP2ShiqTzSIhv3bpwrKEcEC4UCNpuNRCKB2+1Gq9WSzWaxLZItRVFEEIQtZ5K3tAfw
      1zfT1dWBy+mkvb0du9mA119PsNaDyWLDoNNR39iEZR1q8mZgtxhIr5F6zxUkbBYjDQ0N7Nix
      g7q6OtLpNKlUqqLnr6oqVquVSCSCwWjkxnSUYklGKq10mUwGHW67ifCyZJVer6e3t5fXXnuN
      HTt2ksumSSdjnDlzhlAotCLR1uBzkMqJlZtwPpZZxU/yuawrKsNCiSx1XtsqKrbNbEAqyYjF
      zfkKc2tUcUGZjlGtJrosJ5nHbd94g48yJXrjY1MUtdxtfoPiZKqq0tfXx7vvvsvIyAgXL17k
      9OnTDAwM8JOf/KRyzM9+9jMuXbq04XHcia99FAjKN8Nam+BMXkJQZX71q18xPT3N0NAQer2e
      VCpFqVRiYWGBqampSnljPpfjlaMd/PaJHixVZqHGWic35xKrXtdqtdT4arHXthDw11JbW8vl
      y5d55513GBsbQ1EUNELZCMZmY4uqymVVteWodVkIJ28nwyYXkpU8wXJYTWX1hc3y7mcjaQKe
      6jO5224mkqhelpnNF7FViW6tBYfVSHINbdRqkOTydynJ6oYali9t4BsbG+no6CCRSGC32xkf
      H6empgZFUbh+/TqBQKCiw7oVPBRkOItJv/YKIErUuB38R3/w15XXTpw4seq4pqbbDLQ961yr
      sdbBRBUDAJBK5Q6JDpsFl6OD9vZ2kskkoijS19dHNBrFSpbR6Sh72/1lWUH3SgNwL1IxZEVF
      pxWYDqfY3dqx6lp6nRa7uUzdvvMc6yEUzxKsqZ7HcNtNVSXdVSCSzOOxb7wk1WLaXGF8Xixz
      h/Q6zYZWAEVR+PnPf05NTQ3Xrl0DqMhhjoyMMDk5iV6vJxaL3ZNM40NhAOuvAMWqcfmtoqnW
      yUeXblaU3ZajUCxh0GsrGzhBECr6nj6fr1yiOf05b735JkfaHcwsRAne4QK57SZSGRFZVtBq
      BKZDqTVp3G67aU2fvRpUVWUmkqa7yVv1/Rqnpfr51HLhjM2y8d/RaTVuqk9AXpTQCAJWs2FD
      kioajYY///M/rzw/ePBg5fHLL79cedzRsXry2AweChfIYtSvqUicK1TPAm8Vfo+VdK5Y1fdO
      V7lJVFVlbGyMkydPYjAY0Mp5CuYAZquD6+fe4+OT79PX18eZM2dQFAWn1URJUSgUy6JTsqKu
      qg9YgsdhrkqeWwuyohJL5yuJtzvhtFZXxisUy0LCm3GBrCYD2cLGXY90rojNYsBuNqyb3FsP
      qqoyFUpta5/ih8IAbGbDmpr0mU36rhu5lk6rIZJafeOttdoYDAbsdjvpdJo3vidMx9QAACAA
      SURBVPkSs5OjvPn+Kdpamnn++efIZrN8+OGHpFIpJiYmqHGYCSWyRJI5HFYjel31v8HrsFSo
      2xtBTpTIi9WpGrAoZ5IrrqIxJ7MF3JtwfwDMRh1SSd5wz+BktoDLaio32duiQNjF4Tn+4n/8
      R949f2NLn6+Gh8MFspRdIFlRVkVLcgVpQyG1jcJs1OOymQgnsjTcUeK4lrFlMhkcDgcNDQ28
      //4HBH0ufvHmPyJJEiaTiSeffBKtVlsp5QzduMDnZ2TcvnpqXdY1s71ep3lFUfvdkMkVKckK
      dkt1YTCtVignsLLiCn8/uah0txmYjeVNeklW2UiUNp4u4LabKEhbV+heKkNt2mSnz/XwUBiA
      gIBRr0MsylhMKw0gky9uyAXq6+tDFEXq6uro6+vjpZdeolgsEg6HaW9vJ51Oc/r0aZ599lma
      /A4m5pPs71xJDU5XMYAlZiWUY9KZTJqWhjqmPG3s8slEIhEEQagUuBw/fpyrET25fJLJgevo
      TXauXbtGe3v7Kl0kzxpSjmthIZ7F77auWRmnEYTy5jVXXGEAZanHzfU4Lq8AyoY1QkPxLF5n
      eUXLiVszgMGJMAKsYP7eKx4KA4DbYbc7b/acKN11EyzLMm63mxs3blTkV65fv87c3ByKolQM
      YP/+/QwODuJ12ugbnef1JzpXzM75KvsNjUbDd7/73crzAwcO0DQwxX/zk8/p7T1YoTH/2Z/9
      WeWYOq+TWMqAGSs7G51IksQ777xToS4sVUwtFe8oirqhzOlMJLVCyflOaLUabOayONjyWXSz
      OQAAs0G/SRdIpC3oplRStlRPrCgqF4ZnMei169Y1bBYPxR5AEMozTrWZI5O7+wqg1WoJh8O0
      tbVhMpkYHh5mZmaGoaEhhoeHkWUZg8HA+Pg4Bw4cYHwmTv/YArORlcUn1VaAamipK0eG7swB
      LGFpDzC1kGJHW5D9+/fzne98pxLpOHXqFGfPniWbTlDchMsQimdXsErvhEYQcFpXZ3DTuc3v
      owz6cpJxoxvaeDqPx27acpfJZLas3rGjuYbMJlmo62FLK8D0zWFmI1laW4PcmpjCE2il0Wvk
      yvAUh/btpFTI0N8/QE1zF03+7Sl3MxurM0JzonTXP69YLNLX14fP58Pr9VIoFOjt7eX5559n
      aGiI2dlZxsbGmJ+fZ2Jigu89t4uR6Sg1zpXRmUyuuGaMfTmWDGd4KsqhnuCq92tcFsLx7IqI
      jSAIFUJbbW0tExMT9F8bYLTvDNHYQTQe5yqpxjsxE07T3Vg9BLoEr9OyQhUDyvLtd+53NgLn
      osTM3SgUymKm2WUzEUnmKWxBWfrL4Vn2dwYqPZq3C1sygGBTB4o8jsFsw2Y2UZKKTE1FQCgv
      h4nYAk079hOZuYnic6KqaqVL4lZhNepIZvIrzlEolsr+rrr+uTUaDd///vcrz48cOVJ5vKSP
      s+R2QFkX32LUE0lmMepvL5LpnIjNpL/r9+isd/Pt410c6amreqzVpGMqnKLGaUaDWvWY5uZm
      mpqaeGeoSEFSeO+999Dr9XR1ddHY2LiKWFiSFaKpHD6ned3x2c16EumVv2M8naerwb3p/8dk
      1JHOiXf9XFGSEaUyG9Vi1JLOFjZ1LVVVOTcwzeGeIDfnEiQ3+fn1sCUDmJ26iSPQiFmr0tDc
      xPD162RyRWLJFDu6e9AIGvL5LLIqVJSVVVW9p64odquRvFhacY6SLGHQa9HptNvaccWi1WK3
      GAkn8jT5y+6MqpZXG4fVdNdr2a1a/ulr+9d8v85jR6DMDDUaDKxH9nQ77YiKlt/6rd8ikUgw
      ODjI4OAgzzzzDMVisaIlmhNLiEWZGpdt3fF5nRZmIguVY1S1XFLqspdXu1/84heIokhnZyf9
      /f0cOXKE69evY7FYeP3113n//fcJhUK8/PLLOCxGMnnprr9HsVBCVcFhMWGzGMkX5U39X6JU
      YmI+yV/8kyOEEzkKm/z8etiSARTFPKNDgzQ21TM7PUNj5258TivxRByKGSyeIOGxG9Q3d67I
      pt6L4JPFaCAnllacI50vYjMZ0Gg02yImtRxtQRfT4VTFhVEUhaIkY95E8c1aMOh1OK0m6jy2
      u25ua5wWosk8Wq0Wr9fLU089haIoJBIJLl++TDabpa2tjYRsJVsootOu/1ssycIsHaOqKum8
      iNtuRqvVcvjwYcLhME1NTVy+fJnm5mYmJyex2+0IgoDZbC43Ih8aYWQqTiorcnx346oeAstR
      KJZQVBWTUV/+HwvShn/DqakpfvKzf8Qsmzn94ftcHVpAY7Aiz/fxzW9+E6fTyS9/+UusVisv
      vvjipv+bLW2C27r3cOjQAfy1fvYfOIDPWd7suV1urHYXJqOR7p27cW0ytrwebObV3JO8WMJk
      0K07g24VAa99RXVXSVEolhRM25BzyBaKiKUSRenuRUI1TsuKCrKlfmler5eXX36ZV155BUEQ
      eOejsyzMzXCx79q6FW1O20pGqIpKKlvEaTUiiiK/+MUvKJVK3Lp1C6/XS19fHyaTiWg0ysLC
      AvX19ej1enb2dHJ0ZwNajeauRpzKihj1Wox6bfl/3EQlmd/vR+NsZE+rl9bWVvSCjMVZg9Fo
      rDQAmZ2dXSFQsBk8NGFQi8lAKLFSQClbkDAatNs++0OZ2//xMqErWVYpSjImw70vvRpBwG0z
      r5mwWg6XzURyDd79ktTIvn37uDSj0NGew6CKvPnmm9TW1rJ3795VvYi9jpUGpSgqmUIRh9WI
      RoDvf//7aLVaDAYDHR0d2O12UqkUVmt5knM4HLz++uvY7Xa++6yLf/G3H5HOF3Gs812Si3kG
      QRAwGXSLVWHKuqvGEqanZ7gwcJP/8q++i9OoYjVqERWV9vZ2wuEwtbW1vPrqq5w7d46WlpZN
      F109NAbgsBoZnVkpFZ4Xy3Iom6mY2ihq3RYS6XyFa1RSyioI25F1Nhv1/Hd//hJabfWOksvh
      c1kYr9KI79atW6TTaQKBANevX6f/RowjzQaamnZw+PAhbt68yZkzZyrRpe7ubux2eyWbutTm
      KVeQMOq1leTZkvQ83O6L5vGslKRZSth5HGb8biuDN8Or2tIuRzydp8ZZ/oxOq0EjCBRLMuYN
      GMDY1AKZ6Az5+DwjU7fw1QU5M3CLiVqR5557jnA4zMTEBB0dHVvaFzw0BmAy6Mgtkq+Wbprt
      JsIth81kwGzUE03lywZQUpBKCuYtFPmEw2FOnTrF3r17GR0dxWAwEAwGuXbtGi+++CIej4cP
      P/wQWZZ58cUXV/yR5cYaK3lJiqKQyWS4detWuWG4oOXmjUH+5OU3OHPmDL/zO7/D/Pw8dXV1
      hMNhzGYzp0+fRqfTcfTYE1gMGpKZApbF77eeDujdcHx3I2cHVvdlXo7l19Bpyy5TUdrYZBKT
      bXz3P/gu+/btZd++vQzfijAcv8S3v11mhDqdzkpd9FbwUCTCoLwCZO/wHTP5YlWFhu2A0aDD
      aTMxFy3H9AvFEkaDdkPL9p2w2+089dRTJBIJOjo6SKfT1NXVYbfbSSaTKIpCPF6WW7wzvOey
      mciLJaRlRSRLddaNjY34fD4+PX+FtuYGErEIVqsVVVVxOp0MDQ1RU1PDrl27ePXVVzly5Aga
      jUB47AqnT3/C7OwssVRuU3UAd2JHi4+hyci6tQHxdL5C0NPpNAgIFDaQQAvFs5y6PLGC3m0x
      6cmuQYzcCh4aA7AYdasYoRvlAW0VzX4n0+FU5VpbZZ0mEolKRxibrVwjLMsydXV1JJNJSqUS
      RmNZxvBOA7Ca9MiKsoJDL0kSn376KaOjo1y7do1bC3GaPHpmZ2cpFouVvmPLm3ZrtVo8Hg8O
      u519R0+gs3q4fv067//6JBq1uOVONMEaOzaLgeFb0TWPiaXyFcq3XqtFpxWQpLtTKK7cmGc2
      mkFaRrcwG/Vkt7FB30PjAi3xz5ejUCxtS+vRtdBQ62BootwHOFuQtkzCSiaTjI6OIggCc3Nz
      eL1eFhYWmJiY4MSJE8RiMVwuF7Isr8r2Ws0GpFK5q82SAer1en7wgx8A5Y41v+rL8vILe9nZ
      clvCcUlZ704IgoDXZcfu9vLc4TbiwjWuj09z5swZdDod7e3t1NfXV/z/u0EjCDyxq5Ez125V
      1RVVVZVkpoDTVt4kl/cAGsQNJLJag24afA6e3NVYec1uWX0f3AseGgOwWw2rlCFSOZH24P1T
      Fm6qdXLyy/HytbLilivPuru76e5e3b1mqVsLrMxEL4fJoEOv06xZD5HMiKRyIo1V6orXgnOR
      WCgIArmiQmdbE689s4NYLMbY2Bi5XA673Y7BYKCuru6ukZVD3QH+h/9vErFYWtF8EMplpDmx
      VGGbajQCRoOWXOHuBhBOZAl4bRj0t/dEOq0GrabMQdqMWsZaeGgMwKTXIcsKJVmpMDSzeQnL
      NhbD3ImA10YyI5IrSOQKRazmB9MV0eMwE07kaK5zrXpvcj6B17GxkOoSvA4zE4stjpJZkU63
      FY1GQ01NDTU1NUBZOnF4eJjLly8TCATYtWvXmm1sm/xOtFoNkwtJuu7gIuVFCRV1RfNCq8lA
      bgO5gIV4luAdOq0CZUp3Ni/x5RfnGR4e5tixY/T39xMMBkmn00SjUX73d3+Xqakpzp07R1dX
      F4eWCQ0vx0OzB4CyO7B8+SsUpS1FZTYKs1GP2agjls6TLUjYzNuX2NsMvHbzmho8/eMh9tyl
      ocWdcNvLIr1LDQJdVTbBDQ0NvPDCC7zwwguYzWby+TwnT55kZGRkVQd6rUbD4Z4g5wanV52n
      UCxVbtolWEw68huoCZiLpqmrUi+9RIw8ePAgra2tNDc3o9PpMJlMHD9+nKamJjQaDaVSmTkw
      ODhY5exlbFkb9OyZ88wtzHDxwhcMjU1yvf8K57+4iChDIR3l/JkzjEzOb+X0a8Jq0q+IBKVy
      93dWNhl0eBxmZiNp0vcx4nQ3eJ2WqiWasqJw/VaEXct8/42gLM6VQwWyuSK2db7XknSkx+Nh
      //79JJNJfv3rX3Py5EkKhdvNsg/3BLlyY36V5EkqJ6LXaTAuc2PK+7n1VwBVVavqKgnC0n0g
      8d577+FyuYhEInR2djI3N8fbb7+N3+8nm80SCATo6ekhGFzNyF3CutNnJp0mk4hgcAfx2G7P
      fsGmNorKLZxON1HdLDqdCafHQXI+jUaAVCpBx76jRGdGUZTae9YGXYLFqCeVKVC7mFTJFYqY
      9dV1OrcLAY+NqVCCdLaAz7m6a/pXAZfNyMR8YtW145kCyUyBOrdlU+OyGrUksiJSUSKeyeOw
      6Df0eYfDQW9vL3v27CEajRKNRjl37hzBYJCW1lZyYpGB8QV2t942yFgyh91iWBHdMhu0pNfQ
      el1CSVZIZgo4LIZVx5kNOlLZPLt27SKdTmMymVBVlaeffprp6WlEUaRYLJZFCrRajh8/vua1
      1jWAi599wlxqFm/tE7z03O7K6zeuD2D1BinmC3j9AeZDC9jqfJg1UdK5AoJOz8LMTWRFty3a
      oFCeEeyLTMIlPcpsQcJhM9/XjuVt9W6u3QwjFku47ff3WmvB67DQNxZade2ZSASXzYTHuXHd
      IIAal61MrxA0ZPJFvM7VOqLrQa/XVyrdXnvtNWZmZrhw4Utmxwb5X34q8q//45dxOcrkuWSu
      iM9lXXF+u7VM71jvmpIskcoWCXgdq46zmg0UJIVDPbd7GC81MzFZbBj1t7VHl7eDrYY178h4
      eB5HjQu9001N48pMm89fRyZfROuwUsqodPV0k0tG8Td1YtUpaLz1lNQQDu/GWnNuBEsy6UtL
      pyiVfcvlEYL7gWCNgw++GMdk1G1rLepmUOOyEEnkVmkVXR0Lbbj96XJotRqsZgORZA5ZUe8p
      l2I2m+noKIuESbZm/v7ds7z//gfUeFxlvk48vSrTvNRYfD2kciI6rabq2CwmPbkqVWHRVI5/
      8e8+4tneFv7DF3aver8a1jQAqShyfXCMHXuauXkzTFdjTeU9b22Qpb2+3VbepVtNK/2s2rq7
      95raLKxmfaUpQ0EsZ2bvt8ZwfY2dWDqPWdTd16TberCZDZQWk2FL0RRFURmcDPP7L60/w1WD
      RiirQ8xFM9smKiYIAt9+ehdf3gjRuKODdp+R4eFh+gYWaPE7CIXK3Ta1Wu2Gsrkz4RR+T/WV
      ba3eBDqNpqK1tFGsaQC19c0cO7yLS4Oj7Di8a8MnvJ9YvnnK5ItYjPr7wgRdDrNBh1GvJZLM
      rQjlfZUwG/XIcllMa2kMkWSOVFYkE5nm/znzAXv27GFkZASr1YrL5WJ8fLzSf/e9994jmUzy
      J3/yJ0A5Fu+wGBmfi+PYgBrE+fPnuX79OkeOHKmEG3O5HJFIhO985zvEYjFOnz5NV1cXLx1q
      4+TFCZ74o6epq6vj08lPqHFruXz5MsVikaamJvQa511lFeeimTUFvsph1NUG5LSZMOi1q1S/
      18O6UaDQ/AJGix2dsH1KXPcC2zKV6OyiHtB9vv8xGnTUeW2oi48fBGxmAypUamFVVeV/f+si
      8UyB9o5Odu7cicfjoaamBq1Wy6FDhyrUYLvdzje+8Y0VSTeNIOC0GZkOpTakB3Tw4EHa2tqo
      q6urNOJ7+umnCQaD5WRaLocsy+UKsh31zEfTzCxSSFJZkT07u3j55Zdva7bKIuNDfYyNja1Z
      u7AQz64pGWk16asaQFGSyealTWmWrmsA+VyWkqzcc/Rmu2A13v7iorRUDHP/Gy0EvXZ0Wg3W
      bRTg2gx0Wg0Wo55Ephy7vzQyx825BCf2NjE8dA2dTofZbC5XhiUSfPLJJwSDQYxGI5Ikce3a
      tRUGAOVk2OhMDPc6TfiW8OmnnxIIBCgWi/T29jI3N8fJkyfp6upCVVXq6+s5ceIEfr8fm9nA
      we4gH126iVSSyRakSi2Ay+Vi37591Af8aCxlOshbb73FF198QalUqkSKysramVVJsCVYzYaq
      LlC2UERR1U1pKa1rAE1tHVhNetRt1GK8F9gsBjL5IqqqksqK2Mz3pxbgTjTXudAIwpoShl8F
      lirDro6H+Nu3L/PDbx3kn3/7MPUBP9FolGw2y+zsLMePH6e2tpZbt26RTCbJ5/P09PSs4vY4
      rSYW4tkNrQA+n4+pqSlKpRKTk5M8/fTT1NbWMjY2RiqVqjQRee655wB48VAb54dmCC9Ksd/p
      OpoMeow2F0ePHeP111+v9CV79913uXbtGolEklA8Tc0aPK+1VoBYqtz+djNcobuu6aqcZWYu
      QU/r5rKN9wPLxV0z+ftXC3AnpkNJMvkiN+cT9DTV3P0D9wE1Lgs/PTWIqsK//ONnK5LpbW1t
      lVamSz14N9J/t9ZtpSQra2oXLcfu3bcjKkvhzyXKxBKeeOKJyuOWOhe7Wmr5ycmrCAKrWLR6
      nQadRiAvlrCZjZVEVTAYJJlMMjR8g7EbwxSSbYwXkzQ2Nq4IhTrWaPQRTeURBCqN0DeCdac0
      u91Goahnz+7m9Q77ylCmQixtgjevZ7lVvPZEJz9842BF8OpBYGwmxkw4zX/y3aOb6hewFpaU
      4DarCLdRvHq0gy+vz2I26FaFqstFMav7BCy5Sc3tPfgb26mr9TI3N8cvf/lLzp07V6mdWKs3
      QSZfxGk1bajWujKW9d68NnCDZ57cxbnLY3zjmQcfCVraA6iUN8H3awWQJAlZLifcRFHE57Tw
      3L5GhGVdKCWpLAei0Xw1btGxnQ101Hsq/X7vFUvsTOt9IhM2+Z00+BzIikpJVlbolS6vCquG
      uWi5cbjP58Pn81EsFpmaKrevPXXqFILBQjaTXZUXiaXy1Pvs5ApSpQHJ3bCuAeze2cqv3rvA
      a2/89ka/932FzVzeA6CWIyL3Usm0FhRF4bPPPmNqaop9+/YxMjJCXV0dqVSKeDzOH/zBHyDL
      Mj/60Y944oknVrgH9xPfPlG9X+9W4bSZEITV/vl2QaMR0AiwkMiRyRdXJMP0Oi06jbCm5ON8
      bGUI1GAw0N7eDpRdrasDg4z0n+f99x08/fTT6PV6dDod8UyBep+DvtH5cg+BDeRI118B+ofZ
      2emj79okzx/ruK0loygoqopGo0FRZASNFlQVVQWNVgOLSnDbrddjW1YMkcyK7GjefhdIo9HQ
      09NT+dH7+vqora3F7/dXWJDXr1+nu7v7vkXHwuEwH374IU1NTaRSKdLpNLt37+bSpUscPnyY
      zs5OTp48SSwW44033rirZGI1XLkxh6pC3+gCHfWeu39gk9AIAn/9e8fJFqRVmeAlFyhfrL5Z
      XYivbi21BLPZzKGDBwh0j7L/wCFkWeatt96itraWyVsZDu/p4JxY1iHaCNY1AJfLytRCgmQ6
      TfpgK47F2WJ6YoSZ2Tj17Y1E5ubRmByYVZFYOsueg8dQ0/NcvX4TmzfInu6WDQ1ko1hSMsgX
      pPsye5VKJf7+7/+elpYWBgYG0Gq1jI2NVUKJXq8XSZIYHh7G7/evCi9uB2pqanjmmWeYnp6m
      sbGRwcFBWltbK5OJIAg0NzffU3+s/Z0B/ukr+3imt2Vbxqwum/SWxlTjtOCxKxVXZamjprAo
      016tC89Sm6cddwk22CwGjBYbdpuJ7373u0xNTfF//eNPCZrSZLMKqVQao9d11wl43Tto/1Mv
      UU3gz19XT07W4/f6iM9OY7Q6CTo1aGIFTDpIFHJ09z5BdOYGiqJsGxsUynSIRCZHtlDEbLg/
      TNC/+Iu/qDw+cOAAAC+99FLltbq6OnbtKu+J7sf1Q6EQs7Oz7Nmzh0wmw8TEBJcvX8btdtPa
      2oooirjdbtxuN/F4fEskQ7NBw+tPlPtrbcd3iEajfPzxx1gs5WbbU1NTHDlypNL74NChQ5w+
      fZrJyUm+/e1vV7Re77y2rKgk0nk8duOa41IpZ+jT2TxWY9nPCQaDOII7eOGFQ5y79QG/ePNt
      /B477e3ttLW1rdlHeEtT6JWLX6CxeAiFFiihR06FuDA8j6suSCoZR9CbuX75LA5f/baxQZfg
      WGSE5kUZu9X0QNiZ9xsajYabN2+iKErlZne5XPT396OqKg6Hg4mJCUwmE4FA4K6znKqqnDp1
      ihs3bnD06FEGBgYq/ZRDoRA/+MEPiEQi/PznP+cHP/jBltxWv99PV1cXLpcLURRZWFigp6eH
      TCZDR0cHBoOB/fv3YzQacblcWM1GCiVl1f8niRLpXBG/ZzULdPn3sZj0FEvqimPimQJelw23
      p4bnXz6Mz1ZevcfHx9Hr9VgsFhoaGlYELrZ0Rx4+/hwq5aUsGGwoi98uzojlH8/FMW/dfcnS
      mo16cmKJdF7c1t5gXycEAgG+973vrXp9x44dlcdL8fiNYt++fQB0dXVx7do1vF4vHR0dzM7O
      AmW3617cuYGBAS5cuEBvby/xeBxVVXn77bcpFArU1tYiSRK/+MUvaGpqQhRFjAYt+SoJq2y+
      iCQr2K3r/7eVgMgi8qKEoqrYLQacNiPpXJHOhgAHDx4sF9fMzzM8PMyFCxdoaGhg586d2O32
      rRmAoNFUWJjL/dIVx9ynDK3dYiCTEytkuMe4O1RV5R/+4R9oaGhgeHgYi8XC9PQ0v/71r9m9
      ezczMzNotVo+/fRTTCYTvb29m/7/du7cSVdX14rZdUn+Rasty1f+8Ic/RFXLs7bTaqway48k
      c9Q4Lat6wd2JOzuHZvNShRlwZyM+QRAIBALU1dUhiiKTk5PMzc1x/vz5h6cofglLam06rea+
      1wI8KhAEgT/+4z9GVVV0Ol0lyvXCCy8AVNyIv/zLv9yy7LhGo6nqZy8/33LjsJj0zEUyq46f
      jaSpv0sTEkEQyo0Tl60giWxhUSlcwG42kKvSREMQBEwmE93d3SiKgtVqffgMwGY2EE3mHxg1
      +WGEIAgYjbdDxkt7sTvDp2upPtwPlF3Z1TfpeiHQ5bDc8flYKo/VrEcjCDjW6Ie8HBqNhvr6
      +odLFQLKLtB8LIPVtH5jicf4esO6hgHMhNP4N2AAd+4BMrkiXocZQRAWWzdtrL/yQ2cAFqOe
      UCKL1aRHuO/1YI9xv2CpwuiUFYVwMktgDRr0cpgMuhWZ5GROrBT3lM+9sRZKD50f4bAaWYhl
      aAu6H68ADwFGRka4fPkyhw4doq+vj2AwiN1uZ2wyRCZfJJ/P89577+Hz+Th4+CjpxZn8bnBY
      jdycuy0bH03mKhlnt81EPJNfxRWqhoduBTAZdGQL0qaU0B7jwaGpqYndu3ejKApNTU0kk0ma
      m5vRCkq5N4HRSHNzM6lUis/6bxGKZ9cUAVuOpbripeRqbFmvY5NRT2GDdIiHzgCWOpF8VdVg
      j3FvmJycxGAw0NjYSCAQIJ/PYzKZMOi0qCrkC2IlPLnE8N0IQ9Vs1JNf5gJlckXci+RIi1GH
      KMllQtxd8NC5QGZjeciOr6gW4DHuDYlEgomJCYrFIjdu3KC9vZ1z584xfWuCdExibiHEQP8V
      WlpauDiT47WjHRvqWXxnVVhimQK13WIsJ8YeRQOwmPQIlK38Mb7+OHr0KEePHgWo8KcAeg8e
      4cr/dhK318cbb7xBSVb4yZmT/LNvrt1edjksxpVFMbF0vlLjYDHpKRRLyBtwgbZ0F02NDTE9
      n6S5vZG5qRnMLj8WKYrsbqc94CSfitB3bRhXoJWe1rV1GbcCq8kAAg9MpOoxtgcVmfNFRmgi
      UyCdL9KxQbl7q1m/qDwNYrGEVFJWuMeKqiJJMtyFLbAlAwg0tiIqU7jdHqKzs+gNJlrqmxkv
      K2GQSyfp7D1GdHp029mgem35xzPdJyboY3xFUBW0GoFsXkSSTPSNztHos6MR1A39r2a9lnSu
      SEmSSKYL2Mx6FLmEtFi1ZzcbiKVyWIzrZ7a3ZADDA/2Y3QFymQwObw2xVJSwKhBO66lz6BF0
      BmZujiBojdvOBgUwG/Q4HlEm6G8K9JQrw0pKmZ7RNxbiQHdwU/+pUa9FVgUyhRJ2ixG9QV/h
      ENktRgqSfNfzbemObGhuJSfKmMxWSiWFnkA9+WSCJnM57e6oCYIujs25rMmT4AAAEBpJREFU
      /d1b4uk8kiyv6hn8/7d3J89tXPkBx79NoLF0YyMAbuC+i5SXkTzWOGM7kcuplFMVO5WKfZmk
      KqfUXPMn+JCq/AE55ZzDpDIHxznEqZoaJ46tsTyiRFEURVJcAO7Yia2xd3cOkGhRFMVltJDC
      +1SxSi0ATw8Qf+h+/d77/YTzx2lvTFhVajrhnQx//ccTR7/oEarDhlaqkSseTJHzaBK1pzlV
      AHj9bTzcmq0+yDfjbNufpNUfeD7pQ/LFKg7ZSrZw/ORHwtmkPEh2HE0XME2T3hNu+FcfVJ3f
      zZfxuRz7bot7FDu7+aPnE87drZS+Di///A9/LpZCvwIeFrqYXY0z0R/cS2l+XM4HE145rbI3
      B/Bo2+VD9hw/6kxPhJmmydzcHF9++SXRaJRf//rXrK+vM3dnmqmpG5imSaFQ4IsvviASibzs
      7gon5LRbKVVqTC1s76tweVxupVE4MauVD+SI8qgOcse4BDrTAQCN/bdtbW3ous7FixdZXFwk
      n8/v1dddXV2lu7ub5eXll91V4YTcip1oukA8o/H60MkzDz4snZspVPA+lnnCo9obRUCOcOYD
      YGtri87OToLBIJqmYbFY9n6AfdmJhfPFabeytJHG7bQR9J683rPTZqVcrZHOFWl9LABch2SP
      e9yZD4BIJMLU1BRLS0uEw2FCoRAWiwVZlkkkErS3t5NIJE68R1Z4+VSHjXB0l9dPUeUGHqTK
      LNXIapUDKR69LsdeIuWnOdODYEmS+OSTT/aOH2Zhu3Bhf5a0zz777IX2S3g2VIcMJlwcPF0A
      uJwPxgCFyt4yiIcUh8zOTpRf/erfGBho5FDSNI2JiQlu3rzJRx99hKqqZ/8MILy64plio6LL
      IYUwjuKwWdFKVbRy9cDiSIfNisPl4/JbP8XtdtPX14ckSSSTST777DMikQibm5siAISXZzdf
      wiZbqNeNo5/8BF61UeVGcchYHruF6nLaSES3iMWi9Pb24vP5sFqtlEolFhcXkWUZm812ti+B
      hFfb3/zp6/zlu+MH7uAcl91mJZ7R8Kj2A3tDFLuMIVnJFzR2dnYoFouMj48zNDTE7Owsw8PD
      p88KsbEyz3ZCY2Com821DTztvRi5HQqGk5+8MYFeyjJz5x6B3lGGul9OQQnhbDFNk9nZWdLp
      NCMjI9y4cYMPPviA+fl5gsEgo6OjxGIxrl27xtWrV/H7j07Y63I2UuR0BdwHtsfaZAuqp5Wf
      v/cn+B/ZYmmaJm+//fZewJxuLdDgGHVjBdXtwS5bkfQ8khqi25IlVzbQd5MMvf42yc0VDMP/
      TFeDCueTaZp4vV6SySSGYTA6Osq3336Lz+djfn6egYEBZFnmtddeY2Zmhvfee+/INm0P8v97
      1f2V6B/yKDZSWQ2388fSsv/6m7t4FBt/9f44cMoAWFtZwtfZh8UwGBwZ5v7yClYrFFoquCxg
      WizkMilqRstzWQ0qnD+maZJOpxkYGCAQCDA3N4eqqni9XiqVSqN+sKKwurpKR0fHsVaFutXG
      N3vAqzzx+V6XA61S33usVKnxu7sbaOUavR1e3pnsOV0AWCwS66srdPeGiG3tMDh6EVNLoJlB
      Wqp51EA32bUwA4ODp2leeAXpus78/DyKouzVArt06RILCwsEg0G2t7fJ5XJkMhkGBgaO1aZL
      sSHBobWOH982aWlpZBP8+4/f4t//Z45b96OnC4DeoXF6H/w56H9QM17t4dHFz4MjY6dpWnhF
      Wa1WfvGLX+wdX7lyBYDx8fF9z5ucnDx2m4pdpsUiHVorzud27lsRuhbLojps/HS8i9eH2vmX
      /7wp7gIJ55tDth5YCfpQY9/wj8vmb93fZijkQ7ZakK0WfvnxW2IeQDi/ljfTlKt1FteTT3zc
      5bRRrPw4OL67GufKxI9LZlyKTQSAcH75PU5GewIMdj25fK3X9eOK0HyxwnaqwFhvYN9zxCWQ
      cG75PU7+6ZcfHpoh1v1IAt3lrTShoBu3c/94QQSAcC6Ypsn169cJh8O8++67XL9+nQsXLhCJ
      RPB4PFy9epVqtcqXX37JpUuXGB0dRXXaKJYblWOmFra50Hdw15m4BBLOjbfeeouenh48Hg/v
      v/8+xWKRZDLJ3NwctVqN6elprFYrbncju7TqsFGu1qnXDWZX41we6zzQpggA4dyYnp5mcnKS
      crlMNBrlnXfe4dNPPyUYDGKxWLDb7Vy4cIHvv//+QSE9K+VanfiuRrWu099xcKwgLoGEcyOf
      z/P1118zPj7O0tISkiSRTqe5dOkSsViMyclJvvnmGy5fvtyoRWyXqVZ1ZldjDHT69vLKPkoy
      X9ACnXq9LpZCCC+UaZr87T9+wXhvgMtjXfzFz/dPzt6+fft0Z4D1lXk2dzL0j/YRXd/Grrqo
      aAVMq4M333ydWj7OzN0lvJ39TA73PJM3IwgnJUkSDpuVO6sx/u6jNw88PjExcboACPX0UzFk
      Av4OrPU6eoudaDGPlktQqBgYhTxjl/7oueQGFYST8Cg2HDYLbV7HgZyjX3311ekC4N7sbWze
      DlLbYbZSJfr6eujqaGcrJmM1S9RkO2tLd5EdbrEaVHhpDKNRImm424/iPLhg7urVq6cLgOHx
      i1RqOk6nA6e7jGx30mK34GvvRm4xUYIhRhxuHOrRxc4E4XnJFytsJfN4VDuGae7LHQrg8/nE
      IFh4tc2uxAj6lEMrT4p5AOGVoes6c3NzaJrG1tYW6+vrDHe52Y1t7O0Y29jYIBqN7r1GfCUL
      r4xEIkG9Xue7774jGAyytraGLMt4vV5qtRpjY2NMTU0hyzIffvghTqdTnAGEV4ff7yebzXLl
      yhUURWF8fBy/3084HMbpdGK32xs1ildWqFQa+wTEGUB4Zdy+fZtwOIyqqly7do3+/n48Hs9e
      PqBYLNaoQ9Dbu7deSAyChaYmLoGEpiYCQGhqIgCEpiYCQGhqp84NuhUvMDjSw2ZkE1egnVom
      QRmZN958E7O8y8ydeQI9Iwz3ni73uyC8CKcKgO6BEepGBNUTYHhQIlvWKek6pmTBBPKZNMNv
      /Izk5jKGERSrQYUz61QBEF5axN3eSz2XJJar09/pIp324kZDK1dpsVhJJ3eoGRaxGlQ40041
      BlBUhVQsSl2SMaoaybxJX7sLJdiHU6rgCnZjN2sMDQ084+4KwrMlJsKEpibuAglNTQSA0NRE
      AAhNTQSA0NREAAhNTQSA0NREAAhNTQSA0NREAAhN7VRTs1uR+2wnNIaGe1gPr+ELdlLIxMkX
      a/zkp29jM4rcuXOPtv4xetufXL5GEM6CUy2F0Ot1tiJhPF09yHqJaLrEcH8H95cijI6OkN5Z
      wXD3kNqKMDY2imma6Lq+tyhOEM6KU50BoptruDt7sBslotkyg/0hsokt3MFOJKmRlbdaLqGb
      EpLU+DFNE4vF8qz7Lwh/kFMFQLmssbMwT1dXG8loDN2UaHOrtPtUtHwGxd9NfPk+of5RpEfy
      MUrSYeXMBOHlEKtBhaYmLsqFpiYCQGhqIgCEpiYCQGhqIgCEpvbCbsuYprlXpEAQzooXdhv0
      IdM0MU1zb1b48WMAwzCeevz4LdWjnm8Yxt6E3MN/E36clzAMA2Bfnx59/EX18Wl9Pmkfj9Pn
      Z9HHR491XUeSpKf28aR9ft59fOEB8Cw8/qb+UI//xzwLzdjHx4P2WbX5PPt4LgNAEJ6VczEI
      rhUyFA4ZPuzGN7k1fYdy3ThRm5lM5ol/X86nmJqaYube8h/cFkAquk40ladcSDN98xbpQvno
      BvUymfyTn1evFFlejlCrlrgzPcWNmzNUj/HWD+ujaZpshReZubdMKZ/m1s1b7GqVI9urFgoU
      Hys8/VA+HWd6+jaJZJybU1NMzy0d3cG9Dulksvm9w91EkjpQLuwyfesW6UM+l6cp5LPU9Yff
      81WSiSy55DZTUzewfP7555+fuMUXrJLaJlHSsToUcrtJEtsR1nYydLT5MSQrqqmhyT7c9uMv
      ttvZ2cbQdYxqEU3TWLy/hORw4/N6afe7KVYM/D7Psdra3tlB1w0cDol0Kkfk/hLZKvi9Lgzq
      ZNMlXG4Vf6tCIlXC73M9vcF6nu2khm5AWcuTzSRYXlnH4w/SgkE2k8XX3kFXRzuaVqIt6Oeo
      i46HfbTbYXc3R/j+EvmaRKtHxWJzoGVSuPxB2loV4sfoYymVIlsrY0o28rldUtF11raSBIJB
      MMFlA01yMdbXRrFs4G893meJWWc7mkA3oahpZOIJ3O1tmHWDVp+LZLqA33ey+tOpZIxypYZN
      ltjN5YhHNXoGevCrtrNfI8w0TWrVOpVijJynlVQ0is0q41ZaMEwo59NUnB2EXPJxW8Q0DOp1
      g1g8hlvWqVkUuvoHKOQKdPhUYtEoHZ1Dx+5fvVYjFo/hdQeJJtLIShdStfEt5nKpJOJVjGqJ
      WK7KUH/oyPaMeh1DLxFLGkilNC0OG32hNorFMkGfit3aCPR8Koor0HHkL/+jfXQpAWLxXeyu
      EFQafUzHo3T0DiBVisTzNYb6u45sr1avUS2V2MVBLhrFLsu0ey2UamCUcuQMB70dHqJry7R3
      DRz7szQNHb1eJZZMolfKqC2N92o++PwGj/j8ntjXWo1iLoHTbhBN5mnBBphsx3fPfgCUsglW
      MjoXRzq5Mz+Lv60dn8uOhIQEpJNJsuUYivoGrartGC2arCzcRWkboJpeJ1Ew6O9vxak4sWIF
      U0d2tuJ2HO9sEt9cxbAqhLwwO79JR1c3TtmNaTZevzQ3RzxTxzB8pDN5bA6FnvbWQ9szaiVm
      F7cYHh9n/f4CNVklFAiiOGT0FiuFdJSNnW0qshOv3Uan/4izCRDbWMGUVbo8Ovfub9HR1YNi
      c2EYFsAklYgRSxUJBOykUnlsTpXuNu+h7ZXzaSLpPBOjvcwvrOD0Bgj4VOxWsFogmk6RyJVx
      OBUsTg8exzF/zQydxfkFgj0jpLdX0HQboTY/FiCZSbObzGF3OJ/6+T0uk9giW5boa/ezsrJB
      INSHDRmMOqovKAbBQnM7F4NgQXheRAAITU0EgNDURAAIL59R58a1/+X7m3fRjacPSU29zLXr
      N5/42ObaOoe9fHt9nSdNFZ35u0BCEzCqRHcNXutNcm16BZu2TvvQJC1GHZtk0tbTQyK8wFrG
      oLW4wPdrHt79mcn8zA+0tPaR31zE3TNBeGYGxdnC7NIOrw2HWAqH6Ri4SDW+xP/9cI+PPnqf
      lfUUb4z3sZ03mRzqEgEgnB2+gJ+7M+tUCknmtn9PhwKy4uLPQp38fi7MoLNEORDi8qVRKG0w
      H5X5eMzKf/ywS/L+NwwEFH771X8h2VVuZxO0vTbJ3d/+N9X2EQY6/WxGIizfXqBWSaL4RmhB
      BIBwFrRYkPUs1+cMfn5lgt/9UGY4GKLH2GFNHUZqsdIfVNjYtfNeKIitbgenB58xw9K6A5vD
      wWhniDaXHXtfG5F4ge6OdjxeD/r4RVKJdSo2FzbZQlf/IJ2dPSiqyjdf/0bMAwhnlKFzb36R
      sclJrM8xm44IAKGp/T9ZOkRLxsdeagAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Sheet 11 (2)' width='192'>
      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
      YII=
    </thumbnail>
    <thumbnail height='192' name='Today Retrospective' width='192'>
      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
      Zx1i4wAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Waterfall (2)' width='192'>
      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
      AElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Weekly' width='192'>
      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
      SUVORK5CYII=
    </thumbnail>
  </thumbnails>
</workbook>
