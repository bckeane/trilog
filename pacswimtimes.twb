<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20201.20.0219.0753                               -->
<workbook original-version='18.1' source-build='2020.1.0 (20201.20.0219.0753)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <SheetIdentifierTracking />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='PAC_Swim_Times (tri)' inline='true' name='federated.18km2km19o3c7g14ogy9i1kyztnf' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='n7ye9qfqvy.database.windows.net' name='sqlserver.1qf31a70cbf0th1a574zj1fv2fw1'>
            <connection authentication='sqlserver' class='sqlserver' dbname='tri' minimum-driver-version='SQL Server Native Client 10.0' odbc-native-protocol='yes' one-time-sql='' server='n7ye9qfqvy.database.windows.net' username='tri' />
          </named-connection>
        </named-connections>
        <relation connection='sqlserver.1qf31a70cbf0th1a574zj1fv2fw1' name='PAC_Swim_Times' table='[dbo].[PAC_Swim_Times]' type='table' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>id</remote-name>
            <remote-type>20</remote-type>
            <local-name>[id]</local-name>
            <parent-name>[PAC_Swim_Times]</parent-name>
            <remote-alias>id</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>19</precision>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_BIGINT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SBIGINT&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Swimmer_Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Swimmer_Name]</local-name>
            <parent-name>[PAC_Swim_Times]</parent-name>
            <remote-alias>Swimmer_Name</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>255</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation flag='2147483649' name='LEN_RUS_S2_VWIN' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Swim_Event</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Swim_Event]</local-name>
            <parent-name>[PAC_Swim_Times]</parent-name>
            <remote-alias>Swim_Event</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>255</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation flag='2147483649' name='LEN_RUS_S2_VWIN' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Swim_Distance</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Swim_Distance]</local-name>
            <parent-name>[PAC_Swim_Times]</parent-name>
            <remote-alias>Swim_Distance</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation flag='2147483649' name='LEN_RUS_S2_VWIN' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_VARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_CHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Swim_Stroke</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Swim_Stroke]</local-name>
            <parent-name>[PAC_Swim_Times]</parent-name>
            <remote-alias>Swim_Stroke</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>255</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation flag='2147483649' name='LEN_RUS_S2_VWIN' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>minute</remote-name>
            <remote-type>3</remote-type>
            <local-name>[minute]</local-name>
            <parent-name>[PAC_Swim_Times]</parent-name>
            <remote-alias>minute</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>seconds</remote-name>
            <remote-type>3</remote-type>
            <local-name>[seconds]</local-name>
            <parent-name>[PAC_Swim_Times]</parent-name>
            <remote-alias>seconds</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>milliseconds</remote-name>
            <remote-type>3</remote-type>
            <local-name>[milliseconds]</local-name>
            <parent-name>[PAC_Swim_Times]</parent-name>
            <remote-alias>milliseconds</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>YardsMeters</remote-name>
            <remote-type>130</remote-type>
            <local-name>[YardsMeters]</local-name>
            <parent-name>[PAC_Swim_Times]</parent-name>
            <remote-alias>YardsMeters</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>5</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation flag='2147483649' name='LEN_RUS_S2_VWIN' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Event_Rank</remote-name>
            <remote-type>2</remote-type>
            <local-name>[Event_Rank]</local-name>
            <parent-name>[PAC_Swim_Times]</parent-name>
            <remote-alias>Event_Rank</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>5</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_SMALLINT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SSHORT&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Event_Time</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Event_Time]</local-name>
            <parent-name>[PAC_Swim_Times]</parent-name>
            <remote-alias>Event_Time</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>25</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation flag='2147483649' name='LEN_RUS_S2_VWIN' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PremimVsFinal</remote-name>
            <remote-type>130</remote-type>
            <local-name>[PremimVsFinal]</local-name>
            <parent-name>[PAC_Swim_Times]</parent-name>
            <remote-alias>PremimVsFinal</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>25</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation flag='2147483649' name='LEN_RUS_S2_VWIN' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Swim_Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Swim_Date]</local-name>
            <parent-name>[PAC_Swim_Times]</parent-name>
            <remote-alias>Swim_Date</remote-alias>
            <ordinal>13</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_TYPE_DATE&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_TYPE_DATE&quot;</attribute>
              <attribute datatype='boolean' name='TypeIsDateTime2orDate'>true</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Swim_Meet_Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Swim_Meet_Name]</local-name>
            <parent-name>[PAC_Swim_Times]</parent-name>
            <remote-alias>Swim_Meet_Name</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>255</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation flag='2147483649' name='LEN_RUS_S2_VWIN' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Elaspsed_Time</remote-name>
            <remote-type>134</remote-type>
            <local-name>[Elaspsed_Time]</local-name>
            <parent-name>[PAC_Swim_Times]</parent-name>
            <remote-alias>Elaspsed_Time</remote-alias>
            <ordinal>15</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Hour</aggregation>
            <precision>2</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_TYPE_TIME&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_TYPE_TIME&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Calculated Time In Seconds' datatype='integer' name='[Calculation_1179098702896578560]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[minute] * 60&#13;&#10;+&#13;&#10;[seconds]' />
      </column>
      <column caption='Elaspsed Time' datatype='datetime' default-format='*m:ss.sss' name='[Elaspsed_Time]' role='dimension' type='ordinal' />
      <column aggregation='Sum' caption='Event Rank' datatype='integer' name='[Event_Rank]' role='dimension' type='ordinal' />
      <column caption='Event Time' datatype='string' name='[Event_Time]' role='dimension' type='nominal' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Premim Vs Final' datatype='string' name='[PremimVsFinal]' role='dimension' type='nominal' />
      <column caption='Swim Date' datatype='date' name='[Swim_Date]' role='dimension' type='ordinal' />
      <column caption='Swim Distance' datatype='string' name='[Swim_Distance]' role='dimension' type='nominal' />
      <column caption='Swim Event' datatype='string' name='[Swim_Event]' role='dimension' type='nominal' />
      <column caption='Swim Meet Name' datatype='string' name='[Swim_Meet_Name]' role='dimension' type='nominal' />
      <column caption='Swim Stroke' datatype='string' name='[Swim_Stroke]' role='dimension' type='nominal' />
      <column caption='Swimmer Name' datatype='string' name='[Swimmer_Name]' role='dimension' type='nominal' />
      <column caption='Yards Meters' datatype='string' name='[YardsMeters]' role='dimension' type='nominal' />
      <column caption='Id' datatype='integer' name='[id]' role='dimension' type='ordinal' />
      <column caption='Milliseconds' datatype='integer' name='[milliseconds]' role='measure' type='quantitative' />
      <column caption='Minute' datatype='integer' name='[minute]' role='measure' type='quantitative' />
      <column caption='Seconds' datatype='integer' name='[seconds]' role='measure' type='quantitative' />
      <layout dim-ordering='alphabetic' dim-percentage='0.55389' measure-ordering='alphabetic' measure-percentage='0.44611' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='Fastest Times'>
      <table>
        <view>
          <datasources>
            <datasource caption='PAC_Swim_Times (tri)' name='federated.18km2km19o3c7g14ogy9i1kyztnf' />
          </datasources>
          <datasource-dependencies datasource='federated.18km2km19o3c7g14ogy9i1kyztnf'>
            <column caption='Calculated Time In Seconds' datatype='integer' name='[Calculation_1179098702896578560]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[minute] * 60&#13;&#10;+&#13;&#10;[seconds]' />
            </column>
            <column aggregation='Sum' caption='Event Rank' datatype='integer' name='[Event_Rank]' role='dimension' type='ordinal' />
            <column caption='Event Time' datatype='string' name='[Event_Time]' role='dimension' type='nominal' />
            <column caption='Swim Distance' datatype='string' name='[Swim_Distance]' role='dimension' type='nominal' />
            <column caption='Swim Event' datatype='string' name='[Swim_Event]' role='dimension' type='nominal' />
            <column caption='Swim Stroke' datatype='string' name='[Swim_Stroke]' role='dimension' type='nominal' />
            <column caption='Swimmer Name' datatype='string' name='[Swimmer_Name]' role='dimension' type='nominal' />
            <column caption='Minute' datatype='integer' name='[minute]' role='measure' type='quantitative' />
            <column-instance column='[Event_Rank]' derivation='None' name='[none:Event_Rank:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Event_Time]' derivation='None' name='[none:Event_Time:nk]' pivot='key' type='nominal' />
            <column-instance column='[Swim_Distance]' derivation='None' name='[none:Swim_Distance:nk]' pivot='key' type='nominal' />
            <column-instance column='[Swim_Event]' derivation='None' name='[none:Swim_Event:nk]' pivot='key' type='nominal' />
            <column-instance column='[Swim_Stroke]' derivation='None' name='[none:Swim_Stroke:nk]' pivot='key' type='nominal' />
            <column-instance column='[Swimmer_Name]' derivation='None' name='[none:Swimmer_Name:nk]' pivot='key' type='nominal' />
            <column caption='Seconds' datatype='integer' name='[seconds]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1179098702896578560]' derivation='Sum' name='[sum:Calculation_1179098702896578560:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.18km2km19o3c7g14ogy9i1kyztnf].[none:Event_Rank:ok]'>
            <groupfilter function='member' level='[none:Event_Rank:ok]' member='1' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.18km2km19o3c7g14ogy9i1kyztnf].[none:Swim_Distance:nk]'>
            <groupfilter function='level-members' level='[none:Swim_Distance:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.18km2km19o3c7g14ogy9i1kyztnf].[none:Swim_Event:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter from='&quot;100 Back&quot;' function='range' level='[none:Swim_Event:nk]' to='&quot;200 IM&quot;' />
              <groupfilter from='&quot;25 Back&quot;' function='range' level='[none:Swim_Event:nk]' to='&quot;500 Free&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.18km2km19o3c7g14ogy9i1kyztnf].[none:Event_Rank:ok]</column>
            <column>[federated.18km2km19o3c7g14ogy9i1kyztnf].[none:Swim_Event:nk]</column>
            <column>[federated.18km2km19o3c7g14ogy9i1kyztnf].[none:Swim_Distance:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.18km2km19o3c7g14ogy9i1kyztnf].[sum:Calculation_1179098702896578560:qk]' field-type='quantitative' range-type='independent' scale='log' scope='cols' type='space' />
            <format attr='auto-subtitle' class='0' field='[federated.18km2km19o3c7g14ogy9i1kyztnf].[sum:Calculation_1179098702896578560:qk]' scope='cols' value='false' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.18km2km19o3c7g14ogy9i1kyztnf].[none:Swim_Distance:nk]' value='192' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.18km2km19o3c7g14ogy9i1kyztnf].[sum:Calculation_1179098702896578560:qk]' num-steps='4' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-diverging'>
                <color>#d4451d</color>
                <color>#d4522d</color>
                <color>#d45f3e</color>
                <color>#d56c4f</color>
                <color>#d57a60</color>
                <color>#d68771</color>
                <color>#d69482</color>
                <color>#d7a293</color>
                <color>#d7afa4</color>
                <color>#d8bdb6</color>
                <color>#d8cbc7</color>
                <color>#d9d9d9</color>
                <color>#9dcbe4</color>
                <color>#8ec2df</color>
                <color>#80b6d9</color>
                <color>#73a8d0</color>
                <color>#669bc7</color>
                <color>#5c91bf</color>
                <color>#5385b2</color>
                <color>#487aa9</color>
                <color>#3b6ea0</color>
                <color>#306495</color>
                <color>#2b5c8a</color>
              </color-palette>
            </encoding>
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='rows' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.18km2km19o3c7g14ogy9i1kyztnf].[sum:Calculation_1179098702896578560:qk]' />
              <text column='[federated.18km2km19o3c7g14ogy9i1kyztnf].[none:Event_Time:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.18km2km19o3c7g14ogy9i1kyztnf].[none:Swim_Distance:nk]</rows>
        <cols>([federated.18km2km19o3c7g14ogy9i1kyztnf].[none:Swim_Stroke:nk] * [federated.18km2km19o3c7g14ogy9i1kyztnf].[sum:Calculation_1179098702896578560:qk])</cols>
        <pages>
          <column>[federated.18km2km19o3c7g14ogy9i1kyztnf].[none:Swimmer_Name:nk]</column>
        </pages>
      </table>
      <simple-id uuid='{A294D0BE-5A63-40D1-A627-C8B5FE115B0A}' />
    </worksheet>
    <worksheet name='Fastest Times (2)'>
      <table>
        <view>
          <datasources>
            <datasource caption='PAC_Swim_Times (tri)' name='federated.18km2km19o3c7g14ogy9i1kyztnf' />
          </datasources>
          <datasource-dependencies datasource='federated.18km2km19o3c7g14ogy9i1kyztnf'>
            <column caption='Calculated Time In Seconds' datatype='integer' name='[Calculation_1179098702896578560]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[minute] * 60&#13;&#10;+&#13;&#10;[seconds]' />
            </column>
            <column caption='Event Time' datatype='string' name='[Event_Time]' role='dimension' type='nominal' />
            <column caption='Swim Date' datatype='date' name='[Swim_Date]' role='dimension' type='ordinal' />
            <column caption='Swim Distance' datatype='string' name='[Swim_Distance]' role='dimension' type='nominal' />
            <column caption='Swim Event' datatype='string' name='[Swim_Event]' role='dimension' type='nominal' />
            <column caption='Swim Stroke' datatype='string' name='[Swim_Stroke]' role='dimension' type='nominal' />
            <column caption='Swimmer Name' datatype='string' name='[Swimmer_Name]' role='dimension' type='nominal' />
            <column caption='Minute' datatype='integer' name='[minute]' role='measure' type='quantitative' />
            <column-instance column='[Event_Time]' derivation='None' name='[none:Event_Time:nk]' pivot='key' type='nominal' />
            <column-instance column='[Swim_Date]' derivation='None' name='[none:Swim_Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Swim_Distance]' derivation='None' name='[none:Swim_Distance:nk]' pivot='key' type='nominal' />
            <column-instance column='[Swim_Event]' derivation='None' name='[none:Swim_Event:nk]' pivot='key' type='nominal' />
            <column-instance column='[Swim_Stroke]' derivation='None' name='[none:Swim_Stroke:nk]' pivot='key' type='nominal' />
            <column-instance column='[Swimmer_Name]' derivation='None' name='[none:Swimmer_Name:nk]' pivot='key' type='nominal' />
            <column caption='Seconds' datatype='integer' name='[seconds]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1179098702896578560]' derivation='Sum' name='[sum:Calculation_1179098702896578560:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.18km2km19o3c7g14ogy9i1kyztnf].[none:Swim_Date:qk]' included-values='in-range'>
            <min>#2019-09-01#</min>
          </filter>
          <filter class='categorical' column='[federated.18km2km19o3c7g14ogy9i1kyztnf].[none:Swim_Distance:nk]'>
            <groupfilter function='level-members' level='[none:Swim_Distance:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.18km2km19o3c7g14ogy9i1kyztnf].[none:Swim_Event:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter from='&quot;100 Back&quot;' function='range' level='[none:Swim_Event:nk]' to='&quot;200 IM&quot;' />
              <groupfilter from='&quot;25 Back&quot;' function='range' level='[none:Swim_Event:nk]' to='&quot;500 Free&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.18km2km19o3c7g14ogy9i1kyztnf].[none:Swim_Event:nk]</column>
            <column>[federated.18km2km19o3c7g14ogy9i1kyztnf].[none:Swim_Distance:nk]</column>
            <column>[federated.18km2km19o3c7g14ogy9i1kyztnf].[none:Swim_Date:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.18km2km19o3c7g14ogy9i1kyztnf].[sum:Calculation_1179098702896578560:qk]' num-steps='4' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-diverging'>
                <color>#d4451d</color>
                <color>#d4522d</color>
                <color>#d45f3e</color>
                <color>#d56c4f</color>
                <color>#d57a60</color>
                <color>#d68771</color>
                <color>#d69482</color>
                <color>#d7a293</color>
                <color>#d7afa4</color>
                <color>#d8bdb6</color>
                <color>#d8cbc7</color>
                <color>#d9d9d9</color>
                <color>#9dcbe4</color>
                <color>#8ec2df</color>
                <color>#80b6d9</color>
                <color>#73a8d0</color>
                <color>#669bc7</color>
                <color>#5c91bf</color>
                <color>#5385b2</color>
                <color>#487aa9</color>
                <color>#3b6ea0</color>
                <color>#306495</color>
                <color>#2b5c8a</color>
              </color-palette>
            </encoding>
            <encoding attr='size-bar' field='[federated.18km2km19o3c7g14ogy9i1kyztnf].[sum:Calculation_1179098702896578560:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='rows' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <size column='[federated.18km2km19o3c7g14ogy9i1kyztnf].[sum:Calculation_1179098702896578560:qk]' />
              <lod column='[federated.18km2km19o3c7g14ogy9i1kyztnf].[none:Swim_Stroke:nk]' />
              <lod column='[federated.18km2km19o3c7g14ogy9i1kyztnf].[none:Swim_Distance:nk]' />
              <text column='[federated.18km2km19o3c7g14ogy9i1kyztnf].[none:Swimmer_Name:nk]' />
              <text column='[federated.18km2km19o3c7g14ogy9i1kyztnf].[none:Event_Time:nk]' />
              <color column='[federated.18km2km19o3c7g14ogy9i1kyztnf].[none:Swim_Stroke:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{0964E375-3C85-49B9-A76A-904E4D5AC337}' />
    </worksheet>
  </worksheets>
  <windows saved-dpi-scale-factor='1.5' source-height='44'>
    <window class='worksheet' name='Fastest Times'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.18km2km19o3c7g14ogy9i1kyztnf].[none:Swim_Distance:nk]' type='filter' />
            <card param='[federated.18km2km19o3c7g14ogy9i1kyztnf].[none:Swim_Event:nk]' type='filter' />
            <card type='currpage' />
            <card pane-specification-id='0' param='[federated.18km2km19o3c7g14ogy9i1kyztnf].[sum:Calculation_1179098702896578560:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>&quot;Keane, Logan&quot;</bucket>
          </multibucket>
        </current-page>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.18km2km19o3c7g14ogy9i1kyztnf].[hr:Elaspsed_Time:ok]</field>
            <field>[federated.18km2km19o3c7g14ogy9i1kyztnf].[none:Event_Rank:ok]</field>
            <field>[federated.18km2km19o3c7g14ogy9i1kyztnf].[none:Event_Time:nk]</field>
            <field>[federated.18km2km19o3c7g14ogy9i1kyztnf].[none:Swim_Date:qk]</field>
            <field>[federated.18km2km19o3c7g14ogy9i1kyztnf].[none:Swim_Distance:nk]</field>
            <field>[federated.18km2km19o3c7g14ogy9i1kyztnf].[none:Swim_Event:nk]</field>
            <field>[federated.18km2km19o3c7g14ogy9i1kyztnf].[none:Swim_Stroke:nk]</field>
            <field>[federated.18km2km19o3c7g14ogy9i1kyztnf].[none:Swimmer_Name:nk]</field>
            <field>[federated.18km2km19o3c7g14ogy9i1kyztnf].[none:id:ok]</field>
            <field>[federated.18km2km19o3c7g14ogy9i1kyztnf].[sum:Calculation_1179098702896578560:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{E8100182-B7E8-4370-B46F-B0FCE74586E8}' />
    </window>
    <window class='worksheet' maximized='true' name='Fastest Times (2)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.18km2km19o3c7g14ogy9i1kyztnf].[none:Swim_Distance:nk]' type='filter' />
            <card param='[federated.18km2km19o3c7g14ogy9i1kyztnf].[none:Swim_Event:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>&quot;Keane, Logan&quot;</bucket>
          </multibucket>
        </current-page>
        <highlight>
          <color-one-way>
            <field>[federated.18km2km19o3c7g14ogy9i1kyztnf].[hr:Elaspsed_Time:ok]</field>
            <field>[federated.18km2km19o3c7g14ogy9i1kyztnf].[none:Event_Rank:ok]</field>
            <field>[federated.18km2km19o3c7g14ogy9i1kyztnf].[none:Event_Time:nk]</field>
            <field>[federated.18km2km19o3c7g14ogy9i1kyztnf].[none:Swim_Date:qk]</field>
            <field>[federated.18km2km19o3c7g14ogy9i1kyztnf].[none:Swim_Distance:nk]</field>
            <field>[federated.18km2km19o3c7g14ogy9i1kyztnf].[none:Swim_Event:nk]</field>
            <field>[federated.18km2km19o3c7g14ogy9i1kyztnf].[none:Swim_Stroke:nk]</field>
            <field>[federated.18km2km19o3c7g14ogy9i1kyztnf].[none:Swimmer_Name:nk]</field>
            <field>[federated.18km2km19o3c7g14ogy9i1kyztnf].[none:id:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{6A1A2E19-7D79-43C2-B126-60A8F37F2EC0}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Fastest Times' width='192'>
      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
      RK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Fastest Times (2)' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABYlAAAWJQFJUiTw
      AAAgAElEQVR4nOy9d3wk13Xn+62qzjkg5zQIk2c4mTMc5iCJlKzooOAgyWtr9XZlr/3RPttr
      r/d5vfaTd209a72W1pIoMYhUpiiSYuaQk/MMBhgAg5zRje5G51Bd9f5ooAeN7gZ6OOKaAb+/
      ZrpvVVej77n33HN+53cEVVVV1rGO9yjEf+0HWMc6/jWxbgDreE9j3QDW8Z7GugGs4z2NdQNY
      x3sa6wawjvc01g1gHe9prBvAOt7T0PxrP8A63htYyreGkyGSchKj1ohRa0IQhH/V51o3gHW8
      5VBUhXMTp3m25ylGfENZA+io3MhDmz9CW1n7v5ohCOtUiHW8lZAVmcfPPsxzV5+m0FTTSjo+
      ueu3uLv9/n8VI1g/A6zjLYOqqrzY9xzP9Rae/ACpdJJHznyT7umL/4efLoN1A1jHW4ZwMszT
      V36MyupORiqd4keXniCtyP+Hnuw61g1gHW8ZBr39+KLzJY0dnh/EE/a8xU+Uj3UDWMdbhrnQ
      TMljU+kU/hKN5ZeJ9SjQOt4y6DWGkscKgoBOoy9prKqqxOQUA14P06EgcVlGJ0mUmy20uNy4
      jKuHVxVVwRvxMOYbWTeAdbx1aC3bgEbUIiupNcfaDQ6qbDWrjlFVlWAiznP9V7k8M0VKUfLG
      CEBneSX3t3dSabHmGIKqqkwHp3j83MNcmjxPSkmtG8B7CaqqIisprnkH6JvtYT7iRRAEKqxV
      bKzaTKOzGUmUfmmfV22rZUvNNs5PnFlz7MGW2zFpTdlo0coVXFVVBuY9PH7xHNFUcYNSgV7P
      LP1eD+/v3MiBhiYEQUBVVUZ8Q3zl5b/CH/Nlx6/nAd4jUFSF8xNnePL8o4wHRvPeFwWRDeWd
      /NrOT7GhvPOXFpOfDk7xX1/4T8xHvIUHqOAwOemq3MxsaBqNqKGrchP3dLwPp8mVfY5+7xwP
      nzuNXGDVXw0PdW3mQEMTCTnOf37u/2bUP5zz/roBvAeQVtL88OL3eKr7RyhqetWxOknPp3b/
      NnduuPdNG4Gqqgx4+jgzfhJPeJZQPMiAp4/UCldIEiSsBhuhRJC0kvtcblMZX7r9y7SUtbEQ
      j/HVY68TTiZu+FkkQeB39xxgeqGHrx75St776wbwLoeqqvy856c8fvbhNePxS9CIGr5w6A/Y
      07D/ho0gkgjz9eP/yOmxEwXvu7VmB2WWClwmN1XWar5x/GtEkuGC92pwNvEX9/81z/YPcGI8
      f9cqFU1OF6J8ntcGX8x7bz0M+i7HxMI4P7r4RMmTHzL0hUfOfJNgfOGGPiuVTvE/XvubgpN/
      6b59c73c034/D23+MNPByaKTH2DcP8q5iQtcmJ68oedYiVG/j0HfdMH31g3gXQxVVXm+9+fE
      5dgNXzsf8fLG0Ks3dM2RwZfpmbm86phIMsx3z/wLqqoyuTC+6lgVlaMjl4jLN5chVoGYbCr4
      3noU6F2MhJzg4tS5N3396fGTPLDxIURBRFEVJgJjXJm5jD86j0FjpK28nc6KjWglHZAxgFLQ
      M9ONJzyHUWtec2w8/ctZo62GauZD+a+vG8C7GAtxPwuxwJu+fi40QzwVJyHH+e7pf+H0+Im8
      w2qDs5FP7fodWss2MB2cKum+siIzuTDOtpodvNj3bFH3zKAxUmtvpm/+xnewlWhwtSEorQzP
      D+a8vu4CvYuRkBPIN0EwS8gJPOFZ/vrFP+fE6NG8yQ8w5h/lK6/8FafHTt7QvQUEttZsZ1f9
      3qLv39/1ARpdDW/q2VfCpjfz+QNfxG0qy3l93QDexdBrDGikN7/J6yQtj579NhOB1X31hJzg
      0bPfwqg1lnRfjail1lGPRtLyu7d+kbva70e/jAZh1Vv5+I5P8uGtn6DcbHnTz78cFRYrjc4m
      /vS+/8LexgPopMznrbtA72I4jA7sBifeyNybvkfPTHdJ44LxBdzm8pLGbq7eStmysW6zG7e5
      HF9knipbNZ/Z8znaF5NxzU43OkkimV49f7EWWt1uZCWNPy7SWP4ASWEznrBnfQd4N2FlSkcn
      6dlRd8ubvp9OY1gzcbYcRq2RTVVbVh1j1dv41O7fRhAEwokQf/vS/8OT5x9lamGCuBxjxDfE
      f3/lrxnwXF0cr2dr1eocobXQYHcSTiT572+8xrfOnuL42AjeaBpBdK3vAO9ULDEie+dmGfH7
      8MdixOQUOknCbjBQZ3fQUVbBvR3v442h14ilojd0/3JLBU2uZjzh2ZKviSYjfPnuP+exs9/m
      +PAbeYfbWns9//bQH1Btq80m6Po9vXn3CSWCPHzqf/PnD/w1OknH3W3t9MzNrMoBKgZREJBE
      gccunkUpkPNdN4B3GFRVZT4a5eXBfi7OTBXlxpyfmuRnXKHF5WZP0wMcufZjVLU0Ho1W0vLp
      3Z/lyhox/ZXQSFosOgtfOPgHPND1EK9ce53euWH0kpEdddu5v/MOLLoMRTqtyKuS5MYDo8wE
      p2hwNuE0mvjwpq08dvFcwUm8Gqw6PcN+X9H31w3gHQRVVTkzOc7PertJlOgTD/nmAQeVjjuY
      CxxBUVdfRQ0aA5/Z8zl21u2+4V2j3tGAIGh4Y3SIk+PjeCLlaHTlpIEz02nOzbxEi8vNoaYW
      mp0O4qni4U1FVUjI8ez/t1TV8Ksq/KD7QknnAVEQ2FlTx6WZ1UOz6wbwDoGiqjx99QpHR4fX
      HlwAWm0TdWUO0qlzTC2M5u0GkiDRVbWZT+z4JC3uNgRBYFvNTsrM5Xgja5cqioJIa/ku/v7o
      a3ijkaLf4dq8l2vzXjZWVOIyVzNXxMUy6cyUWyqJJJMM++fxRaPIisLBphYuTE/ij0YLZg8E
      oMHh5IH2Li7PTq9pLOtkuHcAVFXl1aFrPDdw9abv1epycripjGueq4v1ACIV1kq6KjdRZ29A
      FK/HRVRV5djw6/yvY/9QMAewHHXObWj1u5GVG5hOaoip+Z+RVvJ3ggPND+C03sKV2RnSBaao
      UaOlymqlwmIllkqh10hUmK20usuotdmRFYWvHHkZf3z1JNq6AbwDMOyb5+unj9+w/1sM97Z1
      cFdbe9H3VVVFUVUSsoyKyuuDL/LE+e/muCRLEBDoqNxJQtiGrNw4fVpQfYQjr+OLZuoF9BoD
      lfZbEDQdKOra99tUUcXHt2zHoNXmvO6LRfnb115akwK4bgBvc6QVha+deIPJ4I0xM1eDTpL4
      g4O34zTmEsRkJc3lmWnOT08y6vdlSWgGjQaNEMUX7iaVmiAuR9GKWuqdDdzVfj9XvRI9njef
      a/hgVydOQ5KknGA4IHN8vPTIE0CLy81v37IXrXS9mm0yuMBXjx1Z89r1M8DbHP1ezy918gMk
      02mOjY7w/s6NQGbFnwoF+f7lC0yHgnnjM4agQ6ffSa3rIA91dtLgcKPX6PFGI/zk6qs39Txn
      Jqf54v5DjAX8nOo+dsPXD/nmeX6gj/d1dGXrF6QS6xjWE2FvY6iqysWZm+PCF8OlZSHUId88
      /3zyWMHJvxKeSJRHL15iKhRBEASuemZv2jWbCQXxRiM8299b0N8vBcfGhvFErtcWWPWGnB2h
      GNYN4G2MtKoyOP/WaOUE4jFmQ0ECsSiPXzxHIl06aS4uyzxy/gy+aJSJhZvfndKqyvmpSUZW
      idevBVlRODs5kf2/Waej0eFc87p1A3gbI5pMEkzkHzx/WZiLhPl5Xw+hN1FrG0kleaav503V
      6RbCuanxG6hZK4yrntkcOsieurWZpOsG8DZGJJV8S+8/4vfRPVu6ettK9MzN4I/dWLKsGPyx
      m+f8BxNxUsvi/psrq9ngXp2gt24Ab2O81QG6q565m/Lf04u0jF8GLLrSVOFWQ1pVkZcl+CRR
      5ONbtlNmKl55tm4Ab2OYdbq39P6hX4J7pb+JeoMlGDQaNrjL1h64BnSihG7FwddmMPC7ew7Q
      VuT+6wbwNoZJq/ulrIyFIAAW/c3fu97uwKYvXQO0ELoqqmhxuW/6WaqsNjTLlO1UVSWWSjHi
      99HqKqPZ6cZuMOaESNfzAG9jaCWJJqfzpvz0YrDo9DQ6nFyaKSwXUiqsej2bKqv4aW9phTMr
      oZMk7mrdgEYU0YpiQb3PUtFVUZn9t6qqnJoY49n+XmLLaNSiILClspr9i5KJ6zvA2xw7aure
      kvtuqaqmwmK96fuUWyzsrW/MmXylQgA+0LmJcrMFp9HE9uraN/0cFp2ebdWZwhlVVTk+PsKP
      rlzKmfyQIeRdnJni9dEh6u2OdQN4u6OrvJLKX8JEXQ6tKLK/oZlNFVU3dR8B6CirQBJFfm3r
      TjrLK0q+VhQE3texkb31jdnX7t3QifVNunzv79yYdRdDiQS/6F+dOHhldoaeudl1A3i7IUNE
      U1iIBZgLzRBNhnlfRxfiL7GB3IHGZiosFqqsNpqdb973bnA4qbHZAdBrNHx6x27e19GFcQUx
      bSUqLRZ+c+cebmtuRVVVFuJxeudmGQ34uK+9E4Pmxjzzu1rb2bFs9+j1zJYkpnVhemL9DPB2
      gqKkOTtxmmd6nmLUN0wyncgKUJUZNzEXvflDa6PDyd2LTFBREHh/Rxf/dOoY6Rv0vbWiyINd
      m3MMUxJFDje3saeukdeGr3F2coJkWsak1WHV66myWukqr6K9rBxJFImnUjx/rY8zE+PZTLQo
      CFgXD+drTWKtJHFbUwsdZeV4oxHcJhOiIOKNFK5HWAlPJLLOBv0/AVVVSaWTRFNRtJIWozbz
      Qy2HrMh879x3ebb3ZwVLFyVRQ6XjDiTNm9fJqbXZ+a1b9mYn2BJOT4zxoyuXSs4JiILAhzdt
      ZfeKTKuqqgz7fTzb38tYwJ993aY3cLi5lQMNTdl6g1Q6zaMXztLrKcz8tOj07K6rZ9jvYzzg
      z3KEBEHAYTBQZjIzH43ij10vjCkzmbm7rZ35aIQXrvWv+T0aHM51A3grsaR/+fSVn9A9fZFo
      MoJG1FDraODejgfY3bgfjajJtBPtf45vn/z6qiK2kqBhV/PHmYuab0gnXwC2VtXwoU1bMGkL
      5xYuzUwVPDSuhEmr44MbN+cdWFVV5dLMFE9cukC6SO3xLbX1fHTzNkRB4PTEGD/oXr016ubK
      Kn5j+y4SskwwEUdWFMxaHfPRCN8+d6potVd7WTn93rWr2Gpt9nUX6K2CqqocH3mdfznxv/Jq
      a/vmeuif62X/xCE+u+/3SKsKT3X/cE0F57QqMxc4yb85+Ce8ODhAn9ezZra42mrjnrYONlWu
      fuDdWlVDg93BkZEhLs1MEU4kcp7GoNFwS209tzW34jDkC2AF4jF+eOVS0ckPcHZynCani121
      9SUpPg/Mewkm4jgMxuy5IiHL/KD74qqljgNeD2adjkiyOJVEI4rMhUPrBvBWQEWlb66Hbxz/
      Ggm5MFlMReXY8BHMOjO76vcV76CyAuOBUQQi/NYte5mPRuiZm2XEP48vFiMhp9CIEqIg4ItG
      seh1mHU6zkyOMeyfp6u8kmaXu+iB2mE08VDXZt7fsRFvNIIvGuX0xBhDvnlkReHM5DjToSD7
      65vYXFWdc5/TE2MkSjh4vjEyxPbqGnwlUCiScpqFWCzH4Pq9Hnxr8I9UoN7mIJxMMFGglsKk
      1dHsdHFlbmbdAN4KpJU0T55/tOjkX45Xr714Q5wfWZHxRb3UOepxm8wcamrhUFMLALFUkheu
      9XNqfJSUopCIyjlcnddHhqix2XmocxNNTlfR5heSKGLTG/hJz+VFVYlFKJnagSHfPLd46/jI
      pm1Iiz59zrhVMB+NEE4k0ZUQ6REF8sZNBksT+11IxPn9fQc5NT7KxekpfLEIJq2OjvIKDja2
      8Ex/T+YzSrrbOm4Is6EZBrx9JY1NpVP0zl4p+d6CIBZsPxqIx/jG6RMcHR1eNZs6FVzg66eP
      c3J8tKjhqaqaP/lX4OzkBK8MXVv2PUqTaVFUFRWV1hKoD26TGfcKIptA6eFgjSjiNpkpt1io
      sFipsFgoM5kxarXZ+6zvAG8BZkPTa6ooLIdW0qKTdCTTa9OfrXortfbc7HAyLfPdc6dLLp1U
      VJWf9HZj1RsKng1mwiEuluCjvzEyxIGGJkw6HeVmS0F3YyWMGi1WnZ4DDc1cnJ4kXMRPFwSB
      W2rruTwzhT8WxaDV0uYqo87uWPsLkokIfevsybzDcPfsDK8OX6PFlSHHrRtAiUgraaaDUwTj
      CzhNLiotlYhFWoreyCoFmYZwVdZqToweXXPswZbbMeuuKyarqsqR4aGSJt9yLK3yrS53nqJC
      v3eupOKUmJxiNOCnq6KS7TW1nC/BaLoqKkkpacLJOAcam3l9eIiYvLJ5noBRq+PFa315u1lH
      WQUWnX7VQhwBgWG/r+gYfyzGxelJtKK0bgBrQVEVjg69xo8uPcFs6Doprc7RwMe3/wa31O/J
      86WrbDVoRE3J2vwNriZub7ubYd8Qs6Hi5LTWsg18aMtHcz4vU+D+5sSygok4ZybHObh4hlhC
      OFF6Ic7SJGsvq2BLZTWXZ4s/vygIzIVD/NUrL2Tj+qIgoJMkKixWNIJIldXKXCRc1P3q886h
      EUU0olgwFCwIAg12B6PL8hCFICtKJnFW6hd9L0JVVb5/4TH+6eg/5Ex+gInAGP/j1f+2mLjK
      XS8rLJV0Vm4q6TN0kp69jQcot1Tw5bv/nC012/OSZBpRw/6mg/yHO/4Eiz6XFzTo895U5Vh3
      gQlrM5SecbbpDSiqSjAe59bGZlpdhXn3WlFCUVXGFgI5he+KqpJMp1EUhU/v3M3OmrpVtTwh
      M3k3VlSxqbIKrSgikDGkWpudz+zYnZfoK4a4LK/vAKvh8vQFfnr5B0XfV1F5/OzDdFZupMXd
      ln1dEiU+seOTDHkHiK6hr3lv5wPUOzKEsEprFX98558x6B3gyNBJeuZmQLDiMlfhsjVwftpL
      Z7lIpcWa3QVKUXJYDTOhEGlFyUZzIONmPCP0rpkZNmm1zEcj/PxoD7PhTAMugQzFucxkxmUy
      YdBoaXG5OTI8yEy4QJOuRUyFgjx99QoaUSwpKjYW8PNHt91JKp0mmIhj0Giw6Q0IgsAvSlTQ
      i6VS6ztAMaiqyrM9T605Lq2m+UXvz7PXzAaneWXgBfo9VzncdneOv74coiByd/v9fHTbr2cn
      s6qqBOJxTk6GuRZwodVtRKutJ5TUcmlmmmf7e/n7o0d45MIZfIv6m2tlbtd+foXkIg9HVVXS
      ioLLaOKW2vq1r1UUftrbnZ38kInBJ9NpZsIhmp1uPrp5Gza9YdXJv4RLM1NcLVFgK5SIE04k
      MGq1lJstmLW6TIRJVdGXSKaTBHF9BygGWZG55l2bTwJwde4KqXSKR898ixf7f5HTVMJmsLOl
      ejvzEQ+hRAitpKXR1cw9HQ+wtXpHlhujqiqDPi+PXTi3qkujotI9O8Ogb57P7Nhd8o9dDJIo
      opUkhn3zHBkZZDTgR1YUHAYjoiAU3AWWqslCieIHUUVV+XlfD3V2B8P+0nIEsqLckMqEisrJ
      8VGOjQ4zH41i0mnZUllDjdVWksRKldW6bgDFoKoKyXRpq2tCTvDomW/xfN8zee8F4wtMLozz
      lw/8LQatAUnUoJN0eQfn2XCIR86fzYuIFEMsleLhc6c53NJa0vhicBtNHB8b4Zm+XJdnaVWX
      BJFaux1fNIIoCNTbneyua+Dpq1cIsfpkVVSVV4auUWFeux3qEkxabdHQ6HLYDUaODA9ybGwk
      +9pCPM0bo0PY9AYkQVyVlgGws6Zu3QUqBo2opcJSWpWTRtTwYv8vir7vi87zfN8zmHRm9Bp9
      3uRPK0qGiFbi5F9CTE5xdnIirxD8RmDQavMmf86zqQq1Njt/ese9/Mkd9/Lpnbtxm8xFJdBX
      YtTvw1aAO1QM97R1lCRrWG21cWJ8tOB7wUScWpsNbZEwNWSIcK8MXVs3gGIQRZH9TQdLGusw
      OtbspXV56kLR9wZ93jXDdsXgiYQLktNKgUmrI5pMrnnYPTMxnuPuRG7ATUkpaZqdrpKKXCot
      VnbVNXBna3HlaoBmp4sys3nV51aAf7P3ABvc5WgW3UxREKiwWLi/vZNgIk4wEV83gNVwf9eD
      1NlXPwy2l3eyu2H/mveKy/HFQ6ZMKp3KiXRcvsnC9DKzhQrLjbcTvXdDB4E19PMhM4nHFq4b
      qPUGVCAyMX4L97R1rDpOIFOs8/JgPyatlrtb2zEXoG53lVfy6Z271zTahCxTZ3fw27v28se3
      3ckX9x/ij2+7kz+49XZEQcga9PoZYAVUVSWZTjK9MIkvOs8HNn+Yn1x6kpkCCaqtNdv5/YNf
      YsQ3tOZ9nSYXD5/6BmcnTpGQEzQ6m/nItl+lo6KL8YU3380dMgSzT+/YzTfPnFyTKQmZyXZH
      6wZ21NTyTF9PSZ+xnOvjNBqptFhzoj/F0OJyE0oksOj1tLjcDPvm87LMkiCQXlRxWIJJq+Wj
      m7chCAKnxsfo886hqirXfF4eOX+G2jUoEVUWK2+MDHFqYgx/LIpRq2VjRRV3t7YzG7r+3OsF
      McuQVtIcHT7CTy//gJngVJafb9AYsRlsNDibEAQRl8nFzrrdbK7eiiCIpNIp/uTnf8hEYKzo
      vSVRyuMHaUUtX7r9P/LcoO+mpAEtOh1/dud9BONxnurtpnt2uiiVwa438IHOTWytriGtKPzD
      sdeYDYeLjM5AAP7t/kO4TWY8kTCiIDAdCq5Z0CIJAh3lFVyb92b5+6IgUGmxUm42Iwki9Q4n
      vXMzDMzn08Ftej0f3LiF7106n0e2M2t1KKgFw8CSIOBafNaVKDOZqbXZubjYO2zdABaRVtI8
      fu47PNvzVNHClFp7HX90559SYc0nkI36hvmbl/6SQCzXl88YjJv5In22auz1VDg/dFMSgw6D
      kf94+93AYhVacIHu2WnGAn48kTCCIFBrc7C5sorNldU5odNXBgfWbL3kMBhpdrnpnpkmtWjE
      Bo0mm8UtBI0o0uRwMejz5v01taLEZ3fvo8npIp5K8devvVi0/tes1RUNC2+tqmE+GskhAZp1
      Olpc7lXdSpfRRCAeQ1HV9TMAZCbN0eEjq05+gMmFCf752D+SKhAebXQ1858f+Bu2VG9HK2mx
      Gxzsqt/Ll+/6TzQ4GwvcLYPZ0DSqenPCsMv9f0EQqLHZqbHaSabTxGWZSDLJdGgBTyScFxq8
      tbGZhjXciWAizvmpiezkhwyNIJlOo5OkTGmhKGZ5PZ3llXx+935SSrrgXzOlpDkzOQ5kokyr
      UalXy4kkZJkv7DvI53bv50Mbt/DJ7bfwR4fuRE6vHv6MppJsr65FYP0MAEAyneSpyz9YsyQR
      4OrsFS5NneeW+j3Z11RV5dTYcR49861sR8WoGsFudLChvKNgfmAJApk+V6+PvvmDcGf59XCt
      oqq8PNjPS4MDOQdFfyzGK0PXGPLN85mde7K6ozqNht/atZenerq5ODOVc02VxUpaVQu6EktI
      ptNsrqzms7v3EU/JmHU69BpNlqJQDIFFl8+gyWRyC2WKRUHApNUVTY6ZdZl8SoPDSbPThSgI
      CILAwhqap6l0mrvb2ml0ONd3AIDp4CTTwdX7yS5BRc1r8Hxq9BhfPfKVnHaiKSXFS/2/4KtH
      vsKW6u1F71fvbOTO1q1Fi9XXglmryyqiQaah3ssrJv9yjAb8PD9wNRuFiiSTWVkSp9GETW9g
      f0MTv7f3Vn57196S5M9PTYyilzQ4jUY0okgynV5UbygennUajcyEggz6vOypbyhYprm3vpFb
      G5sLXi8KAqIg8A9HX+MvXnyW//baSzw/0Ecqnca5RljYoNFi0enZ19C0vgMA+CLzJa3+S1he
      v5tKp3j07LeLdmG/MHmWQy130FW5md7ZXP1Mg9bIZ3Z/DpNOx30bOvhxz411Zge4Z0NHVhFt
      SQ9zrTZDl2amuKetg9lwiMcvnstrkHFyfBSjVkury12S+kQwHicQz3DsT4yPEU7EcZnMlJvN
      BekUkiAyGvBzZnIcRVXRiuKisK2INxLGqtezu66RzZVVTAWD1NrsTAUXsr/QUqXX2cnrTTWC
      iTgvDw0QiMfYWVvHlbnieqpbqjLnIEVV1w0AwKC9MXXj5eMnF8bXbCTdO9vNH935pzzT81NO
      jR0nFI9QZW/g/Rs/TKOrDVVV2VPfyGw4zLGx0rn9++obc6QF06rKVAmFMbFUiqveOZ7uvVIw
      +5xxowbwrBEdug6Bn1/tyZl0nkgYTyRMjdXGQjxOJJVEIENhkEQxJ4SaUhSmggt8oHMjh5pa
      kZU0z/T18rdHXs4aj17SsLmqmjKTmRaXmycvny+4ZJ2fnuRgUwv7G5o4vowmsYQqq5U7Wzeg
      qirhRGLdAABq7HWYtKY1qctLaCu7ntSJp9bW2I/LcXQaPV3VtxNINTIS8BOWZZ7oHkK6Mkyt
      3cH26lrua+/AYTDw4mD/qrIfWlHi3g0dHGxsznEdBCha6J4LgdeHB9ekXvR6ZosS4pZDEoWi
      AlfhZIIvHjjEfDSCJIjYDAb+8fjrBceen5rkQEMzLw8OcHRFkU8iLTMXDvHhTVuJpVJFw8aq
      qjKxEKDSYsVpNBJJJtFJGrSSxEI8hi8a5e9ef4VGp4v96y5QBnaDg33NB3m5//k1x9oMdvY3
      X6dIVNtr0YhaZKX4ZLIbKwvWp0Jm1R4L+BkL+Dk2Oswntu7gS1W3c2xsmCuzMywk4ll/XSOK
      WPUGtlfX0OBwIisK2sWDH2T84jq7Y80ElUGjKSkDLCsKZSXwfhocTq4ViONDRqg2rai0LbYq
      CsRjRd2qZDpNIi1zcrxwPmV8IcCo30etzY5e0hQ14JPjo9nQqCgI/Mqmjdna4qWFpd/rYXJh
      Aekv/uIv/mLVb/cuhKqqyIrMmH+E7umLjAfGaHG3cc3TTzhZfNuXRA2f3v1Zau2teCJhIskE
      Fr2JQGy+aDZYp7Eii1uZi6w94aKpFJdnpugqr8weAPc3NNHqduOLRllIxIkkkwz7fZyZHKd7
      dhqzTk/FYoGMsKireWFqYtVV+5baeqaCwZKkEO9u6yCaKt6sb0tlNYeb2zi7GD3fllcAACAA
      SURBVNZcCa0osb+xialgkJGAD1XNTORCkZ3O8go2uMt5eWig6Ims1Z0pjPdEwwWLgewGQ8aQ
      FvMKKuCNRArSo1NK+r23A6iqypWZS3zv3HcZ8Q2hLB5eJUHCbS7DbnAQjC/kHYqNWjtN5Yc5
      NQXPXnsh+7okCJSZ2rGZRglGB2DZdRadFbfjXhLp0tmacVnmsYvn+L8O3IZFp2MhHuf7ly8W
      nICeSIQnLp0nEItxuLkVQRCotzt4oKOLZ/p6C660HWUV3Lehgz7PXEm7QJXFymd37+PlwQFO
      jo8Sl2VEQcCmN3CwsZkDjc2oqFRbbfkTUs2UVz587nROxZhJp8tzrZxGE7e3tKHTSFj1ehbi
      hQ3OEwnzzyePEUzEERByfienwcivb7+FXwxczbl+NafwPZUJVlWVE6NH+eejXy0qQaLX6Dnc
      ehdpJY034sGgNSCIZcxGXcjqahNZJS17qbEE0EsCDc4mXJZOnrp6bZVriuPWxmbub+/in08d
      Y2INrpBGFPnc7v00OV3Z73nVM8fzA1fxLPL4l6q89tY3oJM0/KTncsFD4nLYDQb+w8E78EYj
      PD/Qx2jAR0KWqXc4+cSWHbhMpuzY2VCI75w/neMuuU1mwolEwR7ENr2BzvIKgok489HI4mQG
      t8lEWlEZmM93Fx0GI9FUMud8tKOmlga7E6teT5u7nLGAn+7ZaS7PTCMI0OR0cbCxhW+cPl5w
      V3lP7QCeyBzfOvHPq+rvJOQEZ8ZP8lfv/ztsBju9nlkeOX92zeIKEJA05aTFJj65ez82vYFv
      nj35pp/17OQ49XbHmpMfMr76GyNDNDqcWZWI05PjLMRjqCpYDXr21jeyu64hSw2+vaWN7tnp
      olVdAnDfhk480QhfP3Ush6ow4vfx9dPH+P29B7Hq9USSSQbmPdmMcL3dwdbqWsYDfp6/Vlgg
      LJiI01FeQZ93LqcMcolr5DKaiKaSxGUZSRDorKikxmrnhRX3i6VSmV1IVfnRlUtZQt3S8x9u
      aUMg02nn3NREzrXvqUywqqq8MvAC4eTaDEZfdJ6jw6+xr/kenlxF7bgQvNEIT16+wCe377qp
      zudxWebIyNos0yWMBvyEkwl+2H0pLyLji0X5ac9lpkNBPti1GUkUcRiM/NYte3nswtm8Q65O
      kri/vZOdNXV88+zJgjwdfyzGa8PX2FPfyMPnTjO/7B6+WJQGp4vZyOp/62OjIwXlTxRVJZJK
      8vnd+5FEEaM2k7ga8HoQIGcldxgzu9BcJMzpZWxSFTg6NsytTS3oJIn3dXQRTMSZWAigkzJd
      KdPvpTyAisqV6Uslj788dZFIuvGGq7QArs17OTU+umoosxTMl1h1BZkw4atD14qGI1Xg1Pgo
      zU5Xtu9YjdXGZ3fv5/mBq0wEA5SZzDQ6XGytrsFlNJGQ5VWp2gPzXqZDobznTKbT/PzqFRod
      rlWfeS4cKpqATMgyEwsBys0WftR9CX8sSqXVSr3DycRCAFVVMWp1GR7X6DBOozHvTkk5jZxO
      MxcO8e2zpwglE0iCyP3tG9jX0MQv+nvfQwagqoQSa6/+S/BG/IRnSqNHFEKxcr0bgU6SSlJc
      hky0Za3CGpVMiHDbIhGszzvHD7svXT9gq5moj2txVRVYXeUumkoWVXmOyzI6jZTl+q+ESaul
      zGzOy0Ivx1QoyDN9vdkzRGg+gdtk4nO79+OJhHn66hVOLv6d3SYz1hWF+m3uMoxaLc9f6st+
      TlpV+MXAVbZX17Kxouq9wwUSBAGHsTRdSYCkYrypFbyUwpS1sK2qpmSRxXKzuSSBLE8kQkKW
      CSeTuZOfjBvxw+6LWXamVpJodhZfxRvszlXdw2qrjduaW/N4PlpJ4v0dm9i4SpM+gQxhbuUB
      OkMbVwnEYzm/z3w0wsHGFjZVVFFuNuM2mdBIIsfHRvKiXcl0OsNDmve++3YARVUY841wevwE
      M8EpjFoTm6q3sqP2FrbW7KBvrrek+1Tamlm4CckdgUzjuFKatRWCVpI41NTKdCjI4BrS43pJ
      w62NLXzv0rmSnksQYGIhUDC0OhMKMh+NUGGxEkrE2VvfyJB/Pq/wpMpq4wNdm5gKLuAvEE4V
      yBhIq7uMBoeTU+NjTAYD1Nkd3N7cRoPDSSSZ5OT4aMFE24ayclrdZfR583WCREFEEvLX7iqr
      NXu4f+zCWeajUS5OT+U17XMYjDx87jQxOfXuMoCknOSJ84/wYt+zpJZlZl8eeJ5GZzO/uvNT
      OI0u/LHVD6dVthp2NezjpcGRN/0sgiCwo6ZuzVBjMbS7y3EYjXxk8za+dfZUUUqyVhT5QOdG
      OssrcBpNq1KXITNx9ZKmeNdJQcAbjfD01R5GAz7SqopOlLDpDWglCY0o0llewe3NbRi1Wu5o
      3cBPei7nJdU2VlRlm3FY9QamQ0GCiQT9Xg8troxRGLVa7m/v5Jm+3myBiiQImHU6am0OnEZj
      pnB/2c7mNpkZX/ATSsRz3CujVsuwz0c8JdMzN5Pjdukkibtb27k0M0Wjw0lKUbK/y7smD6Cq
      Ko+e+RbP9BZXcyszl/MrWz/OY2cfJlIk42s3OPjS7V8mpdr5zvkzBceUAp0k8UeH7uSfTh69
      YXdII4p8Yd/BbAvShXiMF6710T0zQ1xOoZIRtKqz2bmnrYM2d0aP89joME9dLd5rYKk3b43V
      hkmn4zvnTuc9W4XZQkpJ53FtJFHk17ftZHNldYZvE1zg2OgwvmgUfzyKrCikFQWDRsuWqmru
      aGnDuEjx/tqJ15lYuE7SkwSBz+85wLP9vdlIWZ3Nzh2tG3h5cCBLYxDI1DoIgsB8NEL1ouDV
      kksjCgIHG1tYSMS4OH39vKaTpBz3qMxsxqLTM7EQwKY34DKauDbvAUF491Ahxvyj/MuJ/5nN
      7BZCNBXFZXLz6d2/w3zEiz/qI60ulfgZ2F63i9+/9d/R7G7FqNXyxujwDZCkc1Fnd3CwqYV6
      h4OL01NrUpSX4wOdm3J0+3WSBpvBiKykiaWSWPQGDjQ28VDXZiqt12kQNVYbC4kYM0X0QkVB
      oM87x9mpCU5PjFFutqAVJeKynC0sqXc4uDaf73KpqkogFuWW2nqu+bz8y5kTTAYXCMRjJGQZ
      jSjym7fs4UBjM4PzXl641k/v3CxmnY7T4+M5WWmVjLbn8lLGYCKBoip57p4/FuXTO3dzd1s7
      Rq0mRwhLBertDjzhSI6frwKtrjISskylxYLNYGDQN4+iqsTkFGlFQa/Rkki/i8Rxz46fzHF7
      iuHcxBl+Y9dv8oVDX+L7Fx7j2PDrKGqaDeWdfHDzR6hZbD5h0enpKq9clVe+Gpa0NRsdLn7z
      lj08duHsmopnGlHk/vaunCKQZFrmmb5eTo2P5Rw4nx/o48rsDB/fsp0qqw3IrNIPdm5GI0qc
      n5pAVhQMGg3VVjvhZCKHJJdWVUYDfu7b0ElHeUWG0mG28P3LxfWLvNEocTnFswVoFrFUijdG
      hkmm5SzpzxMJMxkMoNfkEte0klRwYRkoQhb0RaOUmy15qtlL31kSc905jSjyq1u2IaUVdDod
      P1qxK0qiyOf37Ofau+kQXEi2pBCC8QVmgzP87xP/M0f789LUefrnevn8gS+yt/EAgiBwT1sH
      Vz1zN5QIg0z0Y2fN9S4ura4y/t2Bw9nm0StzCxpRpMXl5t4NndQvq89VVJVn+nqLniMmgwt8
      5/wZfnfPAWx6PaMBPz/uuZzdAQQyHJv3dXTxzTOFs9KXZ6a4s3VD9v9LpZKFYNBokBWFuSLn
      jAGvJ+9vFU2l2FpVw1jAz2w4hEGr5cHOTcxFwrw8OJAzdlt1bY40CoBWEHGGwkT6BiiXJDZo
      tAykkiAIGDQarHo9dXYHI/7MeUVQFHYNjxN67s9JezyIZjPt7W30tDYQ0+kyJaiVVVh1esw6
      3bvHBboyc4lB78Ca4wwaA4F4gEtT5/PekxWZ3tkrHGw5jFFrxKrXY9br6SuSXCoEk1bLb+7c
      g31FWZ5eo6GjvIIDjU1scJfT5HThNplIptPoNVpUVcUbjSCJGRqAKAhMBBf4aU/3qtVqsVTm
      TOAymfjmmRN5Pn1o8eAZSSULc2EkiVsbm1HJGJxBq+HC9GRBpuie+gY6yis5WSTJZzPoSaWV
      vGu3VNWwoaycMpOFB7s20eYup85uZ3IhgC8WRStKHGxs4X0dG/HHr7twGlXlziv9OJ74PtHj
      J4ifPElL/zUa6xto2bqN2UiIi9NTjAb81Duc3NHcxvajJ2g5ehwlFIJ0GjUexzg5RevcPBW3
      HyYhCPR7PZwcHyMQj717DEBOpzg+8saa4xpcTYz5h4nLhdmGCTlBvaOBJlema0qtzY7daGRw
      3rumH+80GvnMzt3U2ornGyRRxGk0Mhlc4NXhQRbi8UW6cYKZcIhL01PMhsNsKCvjzMQYQyUo
      K4cTCRbicUaKyCuuFord4C4jnEzyXH8vR4YHmQoGsy2IliayQGZX2+AuJ5iIo6hqQSryg52b
      EAQhx9UyabVMBRc4NzXBSMDHuakJmp1uBn3zGUNTFDorKrirrZ0nL1+gzzOHKAjsb2ji/fML
      uH/xAiwzNiGZwjo4TKy1hbOx6+HTSDLJHaIW0/d/CAV+J30kgs5k4qhOIq2qJNIyC/H4u8cF
      2lqzg1b3Bgbni+8Ckqjhrvb7ePjUN1a9lz+aiUwoqko0laTSbOGu1nbeGB0qSB6zLhZY39rY
      lI18FIOqqvTOzfLTnu6CrpVKpmuLJAqkS+wGH0rE12xTWm62EEomcuL5Jq2OmVAwp63RknvT
      4HDSWV5BQpYZmPcyGw5la5Z1koRJqyWVTmfOGVotHWUVDPt9xFIpKswWTDodLqMJs07H68s4
      TQlZ5umrV5iPRoguPkv37AzToWCONlLP9BQ7jx0vuBOpySTqseOwY3P2NQFIXLyIfpW/WeLc
      edT337PsRu8SLpCqqoiixGf3/z7/47W/YS6Uf3DViBo+su3X2Nd4Kz+8+L1Ve/iWWSq4MjvD
      6yODjAUCeRNVFAS6yivZWl2D22SmymJFW6JCs6woPH+tb81zxeWZaSrMpel9LsXnV0OV1cpv
      te/JSgVWWKx4ImHOTxVubDcW8LOzpha1QJ1xcnHiP9i5iTZ3GaFEgm+fO5XjFt1T3cHdbe28
      OpRPBw8m4nku1EpKRTgWJeadp1izo9q0QkdZBdc8swhkFCTcMz5Wy4K4JYkqizUrwdLl9b2z
      DUBRFQY8fbx67UUGvf0k5SQGrRGnyYWqqkSTUXSSjmZ3C+/b+EG21uwA4NbmwzzV/cOC97QZ
      yrgwm2Z84fQqn6tyZW4GWVH41a07Sp78kFlhS+mWoqhqjhDVaqi3O6m0WIoeTgFaXGVY9Hru
      am1HI4rEZZm/e+OVVe97dHSEeJEONIqqcm5qgr31jbwydC1vQh8bHea25hY6yyt48Vp/znfZ
      W9fI2EKAq4tnK7vBQIPdmbMTOS1WzNVVyMHCIV2D3c5D/UN4Tp1CSqdxdnQgulYn31na2vjd
      vQfonZtFL0m4v/Xdd64ByIrMDy48zjM9Py3YjbHWXs8XD/0h9c4mzDpzThuiD2z6ECO+obyD
      sFFrw269g/GF0liYfd45vn76OJ/fsz9H10dRFfo8Hi7NTDEfjWDQaGl1l7Grth5/LFpyZ3iH
      wYRe0jC1Sh8wjShyW3MrZSYz3bMzBZNuVr2eS9NTPNvXiygK2ZLLaHL1sLE/Fl313ONbrLGN
      FuAgpZQ0A14v/d45KiwWIskkeo2GZDrNhelJBEGgs7yCFqebVndZdmGIppJUWaw82LUZm87M
      /LXBnDNA5ktriF/uRgkGWWq9EfN4iev1oNFAoTOPJCE5HCQef4INbjemPbvx+P3vzEywqqo8
      1f1Dnjj/yKrj6uz1/Nl9f4XVYENVVebCMzx95Sf0zfWiKGlSSgq3uRyjxkCDq5mpiJuZ8I1z
      dzZVVvGp7bsQBIFYKsn3Lp0v2OvKotOzp66Bl4fWjlYBbK+u5fbmNr5zPj9jC0t5g05ubWwh
      mkoy6vfz8mA/M+FM4zutJNHocDG+4M87CJebLQTisVVlCU1aHSklXXSMy2jiSwdv59zkBD/u
      uZR3raykszuDTW9gX0MjLwz0ZaNRWlHiUzt28eK1PsYWadfbq2v5+JbtiIJA2uMh8NjjRE+f
      yRiBKKApr0A0m0kOFa6VEO12JLud1Nj1cKpgMoEgoEauL2xSeTmiyfTONABPeI4v/+zfEytB
      xuTDWz/BR7f/GuP+Uf7mpb/EF809LFZaq/ny3X9OICEWjZWXgt++ZS8bysp5+Nzp7NZeCJIg
      oqKWVJD+kc3b2FPXQCAe47Wha1yamSaaSmLQaKizOzjc3Eqlxcqz/VfpmZshKcvoNVqanS72
      NTRSbrbQ55krKrhl0mqzB9FC2F1XTyiRKNq4bmdNHZWLPvWQz0tkMdHX6HAiiWKeCoZeo8mj
      d9fbHTk1B5Ig8oUtO9B//wdET56CxUOtYDBg//jHMB88yNxf/hdSE7nVXVloNFT9l/+MEosj
      T08j2mzIs7MEHnk0f2h19TvTBTo/caakyQ9wYvQoD235CI+e/Xbe5IeMOO2T5x/BYj50U890
      YnwEFXXVyQ8ZPnopFOcyk5nNlVWLZ5kkc5EwcTmFgEC11cavbNyCWafnW2dP5vTVjaaSXJmb
      QSOKfGLrjlUL37dU1XBpeqpg0U+m1amFzZXVeCORPMZmjdXGxEIgp8xwU0UVH9q4Batez08K
      GJ1Fp88zgAy57boBiEqa0D9+jfRQri6QGo8T/NGPMWzehLJahxpFQU2nMWzsgo1dAMx/vUjU
      750aBRrzj5Q8dj7iZSY4Tf9ccQnwy9PdVLk23tQzDfrm0azSk2o5lvR7irVFsuh0fHTzNkxa
      HfPRCN84fTxnpR70zfON0yc40NhctKn05dlp9gUaqTBbC74vALfU1LGjupan+3qYDi5k2Jii
      iEaUMpSH/l6MWi0f2rgFTzjMsD/T3GJjRRUmrZYnV9Am+rxzRFNJrDodu6truTw9SWRxwjsM
      RrZWVXNsbITkIvdoU0UVH2jvJJ6I0++bRxBEbgksYFox+ZeghMOEnvsFuvoGYnOF1fhEiwVN
      eTlqOgWoIGqQHIXzMqLV8s40gEKckGIQBIG0IpMucFBeQkoRSNxk+WJSlhnyFRaHWglFVXmw
      cxP9Xg+nJsZYWFyl9RoNre4y7m3ryPJ7jgwPFnRTfLEoLxYpOF/6jNGAn1sbW3hjdCiHeAbQ
      VVFFvcOJKAj83t5b8UYiizpHeh6/eI7pUOYzY6kU3bPTHG5uo3/ew3w0glaUqCsgqa4oCqHu
      bqQ3jiFOTvEJnZaR9jaMh2+jP+DnlcWQ6NaqGg5VVGF54xjhJ37EPfE4u6sqsX3wQSzzF1cN
      ZSb7+nF+7neIX7mCulI6RQDTtjKSx/4rylwvajqF6GhA59qGaDWghJaNl0T0rqF3pgE0u0tv
      DVppqaTaVoPbUs5MEQVoi770SrFiUKE4x34FBEHAoNXiNJpwmUwZ5YPF6Mzdbe05qsqraX2u
      VWwjCpmCxnvbOnimv4eFeByLTs/WqhruaGnLPq9GFKmyWgFr5vC8IqeQVlS+e/50VmunzzvH
      bDiIUaO97j6pKi0T02gf/UE22WYEusbGMagCx9oasveLhkMYfv4LwpeviwXbZmaQRkZJt63x
      20oSuqYm7B/9CMGfPZ2hPKgqolGLsWkWbfIp5KvXcyzphXHgKNZNVcQ9m5H9KUSrDWP9AlLq
      yDvHAFRVzTSmEGBH3S5sBjvB+NpCsAdb7kCvMfDQ5g/zv4/n06U1ooYHNz3IS8OlF6AXgigI
      bKqsLqkAxqY38ExfDz1zueeFM5PjDHg9/Nr2nTQ53QiAWV8sFZTh7heL/UuCSCyV4iuvv5I9
      B2SKWSq5s3VDXu4inkpxamKMmXAIu9GIIRImIcs4jEY6ysrpWcGKjSSTfKBzEy8NDhCXU9To
      jRy6+AJigd0q/uprdFR9lJO6TI1w+8g48cvdeePSgQDJwcGi3xdANBqZ/dM/IzUzi6DTYb71
      VsyHD6GMPEl6oHj9hqjOYNlcgfF9XwVRJfLIhyD1DpBFkdMybwy/ypHBV5hamEAA6hwNNDqb
      6Z6+uCpRrL28k9va7iKcTLClZh8f2x7mmd4fE04EAQGn0cnHtv86B5oPc3zihVUjImvBoNFw
      V+uGVbV2lqCoat7kX8JCIs4Tl87zhX2HsOr17Kqtp7fAWEkQ+PCmrbw+MlSQsl1hsfDa8GBO
      tElWFN4YHSKlpPmVjVuyuZG0ovD97ot0L0tE7aipY29dA2VmC4m0nFfcLggCZ6cmslGpgzYH
      pkCRBSmd5nZFYMeeA2glCd13HqHY0VxVVAzbtxO/kE/LFq1WUlNTmVUfUGWZyInjmHbUkx4u
      3oRkCcrMJeSh5xAMdlhcPN/WBhBNRvj71/6W7uncZmwLM5kIg0bULDapy03ECIg4Le3YrXfw
      90ePZnn4oqCh1v0xrLoE+xua2FLdgVmXoRtsqqzO0ZW5UWysqMKqN/Dr23by8LnTRd2TjRVV
      mWqkVeCPxTg/NcFtza1sWuxs+MrQQHYC6iSJD3RuotnlpsZm55WhAc5MjBNPyzgMRvbUNeR1
      e1mOMxNjHGpqocyU6bXrj8XyolfX5j10llfwbH8vsVQKk1aXVVbQiiJOo4mxxUN8OJnklZFB
      PkhxGUJJq8kq182vkjkXNBLu3/tdgj97msgrr6JEowgaDfpNG7HceSfef/hq7gUpmdhr30Vr
      WFulGyDV9xxSzfWGJW9bA1BVla8f/1re5F8OWZHprNzExsrN9HuukpQTaCQ7QbkWQXQyE841
      jIzgEkRSOp7umyGSsnJHaxuiIHJrYzPnJsdvqHJrCZIocmCxiKXFVcbv7zvI8wNX6fN6SKXT
      2WKTw82t6CRNnjtRCIM+L7c2NnNxeoqxBX+mN68A++ub2F5di8NoRFVV/LEok8GFTFcWMit/
      R3lFnoLacqRVlSuLBLTpUJAKsyVvH03IMj9YphABsLuugY6ycmpsdl4dupbD+oxYLIh1tagj
      +XIwgk6Lxuki8voboNGgbWjIVOYX+FsbNm5EtNlwfvI3sH/kw6T9fgStFkQRNRZD0OtRV/CG
      BGltV3gJ6sI4VHRl//+2NYABTx+nRo+tOa5vrpfP7P4sH93+a4wF/Hz73CkEZW15kNQiKW0u
      EuZjW7ZTZbFyqKmVV4dvXMvz1sZmahfrd5fyii6jmTJTlGA8TpnZzKGmVroqKrlcotZQMp3m
      pcF+Xh7MVUq+ODPF7rrMgTKcTPKd86dzWJRXZmfwRaOF5tZ1qCpHRgaziavZcCjT9VFRsof5
      Sos1TxTLH4uiESVeW+wtoBFFZCWT19hWVYP74x/D97V/QlmWcUUUEYwm5v/pf6Eufp5gNCKa
      zSgrGnBIZWWYDt6KEgohWq0IBgPyzCyBx7+HPDeHaDQiGo2kY7Gs8eg3b0bfOkV6rEhibCUE
      EalyE0vO7tvWAE6PnShpnKoqnB0/hcNUxXfOn87+qKXiwvQkdoOB93Vs5N4NHSzEY5yfLsyQ
      LITt1bXct6Fz8VkyLYp+frUnR88mEkgyduEMGyuq2N/QVFLTCYNGw+sjQ3kr81RwgTOTYxxu
      buPyzFTB9qrToSAGjbYomU4jSXmCV3V2B5sqqnhpcACbQU9HeUVGgW3ZmEAsxnfPn87ukg0O
      J11ON8YXX6b2J8/iDYUQNJm4u6aqMht/j548lbPaq7EYqkaD+c47UAIBlEQCQdKQGhvD8//+
      HaLJhP1DH0Tf1YX3//tH1MUC/XQiAQgY9+xG11CPVF6Oac9u5O7HSI+9uurfcwmiqwVN6x0I
      lgrU8NzbVxjLEy69CmsuPMvTV6+sefgshtdHhhgP+JFEkY9t2c49be1r0ou1osQdLW18fMt2
      NKKYw/MvpIasAlfmZjg2Nkzd4m5RDBpRpNZmLyrMtaSwsFoDu61V1eilwuvb4eZWNlfmilK1
      usq4PDtNOJlgKhjkyPAgDQ4X0mIotcqa6biy3EUMxKJ0vfY6ta8fhUAgU4GVSJAOBDDt24f7
      i/8WeX6+oKuDLIOqUv7Hf0T5f/hDZK+XdCAAsowSDOJ/7HECjz2enfzXoSLPzWL70AexHL4N
      0WhE03Y36Asn/HIhoO16EMFgR3/oD0EQ374GYNSa1h60iIW4vKYs4GpQVDWbpJFEkbvbOvh3
      B27jtqYWHAYjAhm3QCtKlJnMHG5u5d/fepj727uQFg2lVJ7/Vc8cmyurs43tVkIQBG5vaaOj
      rKLogdKyGBqtsBTP8m6pquaTO3ZRZ7NnJzFkMrINDif3t3dyW1MLNr2eFpebRqcze6iFjAu2
      saKSX922E4fRiEaQSK0oNrGHIyRfO1LwGRZ+8lOUaDQzqYsg7c1QU2SPF3l2xYIny0UJb2o8
      kaE8KGnUZATBXIZ+9+/AGglSqXorae8A0Sc+Rar7R4jutrevC7SxajOvDb5U0lgZ95uWL1lC
      /7yHaDKJSadDURVmwiGmQkGSaRlJFNFKElurari3rSM7AZfjRnj+gXiMz+7axzP9PQz7fMhK
      pq2o02ji9uZWdtXWo6gqzS53XqWXTpLYVFGJJxymweGkZrGD4nI4jEZ+1nsFXyxKnd3B53bv
      543RYbpnpwnEY3z77Cke6tpMSlEIJRIEEwmevHQBSRCRWSSfkSmof2VwAH8sltUJqrPZCcTj
      OAxG7ounEIo0pVYWFlBCITTl5aQ9hTPkmppqAESLGdFgyD07AIYtW4iePJm3g+ha6kle/C5y
      79MoC2MgSIiuFsSydhT/CKwsdxUkpNqdKP4R0iuCKm9bA9jTuJ8fXHwcT7gwE3EJtfY6nOZm
      gsVi0CUilU4zGVyg0eniycvn83YUWVE4OT5K79wMn9y+i8YVmpmBWKxknr8vFiWtKhg1Wsw6
      HTpJ4s7WdjZVVqKTNNnozo6aOqLJJN5oBEVVM6JOJhNPXLpAOJlAK0pUhdc0UQAAIABJREFU
      Wa10llcs6uqLdJRVcGVuOpsgG/H7eOFaXw4VQgVeWmzEt/TEgXiMjRWVzAcCKH4/nZXVtNjt
      PLEi0bavoYktldVoJIn04BDFHFVBp0M0m7Hedx+Jvv48Tr9gMmL+/5l7z/g4zvPc+z9te0Xv
      HSAJkmBvokQ1q1rulnviOC5x7MROj3OSk9jJe06q3xS3k8Sx3GL7SJZkWVanCimKpNhJECzo
      vQMLYPtOez8MsMRidwHIeX9Srm9cDmZmZ59nnvu57+u+rj2b0PqOYmpJ3DdtIPzSOVg8zL5l
      M8FPfgLBbif66qtpVqhSEcQmP0/qWKYlk7FoQSuWbkaq2oMxeQ30FGJhA3LzXWh9x9CHs5uc
      /lvToTsnr/K3L/5VXuanx+blS3d9mcevDK7aDbVefGDrdvpCs2vWAzw2G7914BaCzhthWs/M
      NP92+sS6rlPkcjOfiGeEFE5F4Tf23ESBy8VPL1+gfXwME0udeUNxMXc3b+Tq5DiHuzuzVrva
      QJCP79yLXZbRDJ2/eun5DN0el2LJgSwXzw04nCQ09Ua9wjR5p2pSd+QY2sQEoigi19bwiy0b
      6fZ5QBDwxOJ8ZC6CZ2gEQZawb9pE9MjR7PAFsLe24ty9C21iArV/gNTQkBXPCwJywIZrwzyS
      NAzq4ltfkDG0ILrrELbNd+LcuYPoy69Y5w+FsDfU477zdhh8CGN09edsO/Bb2Pd/NuOz6A/f
      jzGVTYj8b60KUeguZnvlTkbnhwnFZjOqvo1FLfzebV+iJmj5webqSnqj8DscnFqHrHlK1xdj
      5BsbSbssc2ZkaNUGkyXEVTWr3qAZRtrA4cxIZkpvOhbFbbOli10rMZ9IUO0PUu71IQoiXTNT
      GTTozaVlbCwupW8xnJJFkfe0tlHs8aTj/ubZObY98RTMzSEYBug6xuwstcMjuHbvpkhVuf3x
      X+C43ok+PY02OUmy4wqmriE6XekUJ4BcWoo+O0v81GlSPT3oMzMoFRUUfOqTeG7egSI8h5Do
      gQwhMwNBjCFJQzh330Xi6hih734PY2EBVBV9bh73rhr0699f8/nq09exbX0/gnzDz1m9/Bhm
      NDua+G8zAXRDZ2xhlEuj5+iauk4sFcNj91DkLuZQ4x0cqL+F2mAd/bO9JLQkC4k5OqeuUewp
      YSYm/P8iR26aJgvrzCSF4jEO1tanN8GKKJLQ1DVdYfwOB+qy0GM5oqkUE9FIzkk0EYkQy6Pt
      A1YBLOBwcnKoH9ti9kcQwG93MJ+wVCNsksQtdQ08sHEzE9EIPTMz+B0O7mveSNuRY5ij2YkE
      KaXSWFhE9flLSFM5KtiajmNbG8GPfRT7pk343v52jEiEVGdm15sxP4+toR4x/iLGyKn8D0hP
      oY+eJ94N2tiy6+k6QuwikrJ6Fd26pyRS9T7EwA0CnhmbQR/Kvu5bvgcwTZPx8Bj/eeYhLo1e
      yPDbLfaU8O6tD3Ko8Q6KPSX82/GvpZtaNNOgf7aXr778v9lV92FgdTmStaCI0rrZnABxzdKV
      KVxkc84n4rSWlDEwF8orUeKx2fjA1h083H4+pwuie9EVMhdM00ARpZwpVrAqt984eSxdByly
      u/n8/pv55sljzC07Z/fMNJppcLTvBulsPhLhwZH8Bbr42XPo0/mp3on2yxT8xmdwejyYmkbo
      +7nf0slLxxF8ayc2zIVRhNSKtlFBQHTmPj7nOeIhzGQYbeA4xtwgguJECNRgzmWGt2/pBDBN
      k5H5If7m8FdydmtNRSb59slvMRWZpKGwKae2v2Zo9Ewew+W647+UCWouKlq9eroCAlb31Ylr
      fVwcHyWSTCIIAi7FhtduxzRJh2U2SaKpsJi3NbVQ4vawt6qGF7o7s855qL6J86PDOSfQxuJS
      dNPgUo50r1uxkdC0jCLgdDTKq/29GYMfYHhhjvFIZpP9VDzGrCiQV1NhDX0iM5XCiEaRPB4Q
      RSSfn1y0QsGcgXV28jlbfGjJAlI9vSAIuPbuxbnHhvr6lXX9vT59neSx/xdzeRJFkBACNUil
      WxAUJ0Zk4q2dAJqh8e8nvplz8C/BNA2evPwYLcv4GysRTU6wv7EiQyL7jUAUBG5vaOb61GRe
      j62VkEWRRy9fzEh9mqaZNoCu9gf42PZdKJKE22ajZ2aap65dIZxK4LM7KPF4mItbTelOReG2
      hib2VFZT6fPzH6dPZmxYC5wu7mnZiCgIzCcSGZ1kbsXGeza35QwBg04XkihmCGw5ZQVJFDOK
      bKYoIu7bA0/mYFRKEt777mXuRz/OXdDCoihLPquBRxBFPPfcReLq1Qx1BtHjwbV3F/rl19Z6
      tNbxbgclf/onJC8ew5zvR6lvQLC5UEUZVmlusiCgnv0+mCtCSVPHnBtEavsgcss9RH/4/rd2
      AlybvEJXjp35SuimvupxfkeAt29opXd25peqBt9S15A2bHi5t3tdYriqrq+a9x+an6N9Yoz7
      Wzbx2JVLnF22sR0PhxEQ2FNVzS11DfgdTlK6xvNd1+kLzeCyKWimQUPQKlDtqarBJklcmZxY
      3OgKFLjcVPsDbCwusbI/Uzp2SUp3trkUhbiqUuH1pTk9AlBXUICq6xnuMHWBAjbuv4WFyWlL
      gWGpEd1mw/uOB/Dedy+JS+0k2vM01x/Yiz5ynNTAcczoFILsxHeogPh1DSNhNZ/73/8+lIBG
      rOMb2QMzBwRvKanX/gHtyhOgJdA7AIcfFBck88vEgACitOokSZ3+Ntg8kJh7aydAxypMz5UQ
      BRG77CCZQ9Pztua34Xc4+fiOPTx09tS6vLKWsKuyKs3lKXK5ubWhMUu1eCUcOdQNcuHcyDAB
      hzNj8C/BxOTMyBBtZRWYwLdPn8yyLJqJRXnP5jYkQeT7585kmEdPRaPsqqwioVqx/9LErwkE
      8TsctI+PpRmhxW4Puyurebm3i44Ji4lqkyS2lJZTZkLTy0eZ+LeHMFMpBJuCfcNGHFs249iy
      GaWuDoCCT3+Sqb/7hyw1BlulA4UnSDzZn/G5BHgafNj2fR7bjg8hSBKmlkQs2Ygxkd/EAwDZ
      jjHWjj66wvJpqQFKcYKao6NAkFC2fwT16s9vHJsDZjyEPmb1G7ylWaAT/cfon12fF64oinzq
      wOfonLyaljUUBZGDDbfxge0fRRIl/A4nW8rKGVtYyOlbtRyWF+4m7mnemM7kCIJAfbAAVTcY
      WkEEW0K518fuquo1tTjBSm2ORxbycnqsPL/VCZarjhFVU4TiceYS8azaRErXGZmfZ3hhjtFl
      6mmxlEoklcy4ZkxNoRtGhrKDbprsL6ug6Qc/Qmu/DKpqvfk1HT0Uwv/e92BvasSMxwn//EkW
      nngSQRCQCguwb27F3tKC+0ALNp6GRJ7MjJ5EH3wNweZGLN+GIMmIvkq07sOrvKEFpPpD6CNn
      864UgrsYx61/jGkakApbld6yNhx3fQVlw/2kzn0fVjFDB5Cb70IfOf/WToC+mR6urvU2WITX
      7uMT+36DO1ruQRALWFCDBD17MKVaTg4NcXlinIVkgnKfj4O19VT7LTJZNJXCYNEVXJTw2GyU
      e33sra6lJhDEpdiQRDHdHSUKAs2FRbQUlQCW8KxumBS4XNzdtIF3t24lFI+te69gmqtrAGmG
      kVNpeQmz8RjhVDKnuUZcVVF1I6P5xjRN9BzXFASBxAr5k9LrnRSeytFGqOvoc/O49u9j5pvf
      IvLCYfTZWfS5OfS5OZzbtxH46AfRzv41ZmRtDpY+cga54VZEdzGCvwqxoB595PyNItgSZAfK
      jo8hV+5E634h/wm1JLZ9n0YQRfSp65AMY0anMKauInhKMKY7MVfZVyIqOO74U8zwW7wJbqvc
      wc/aH1nV1mgJG0tbiasmP7tyhevToCiWpv1S2jAUj9EXmuHl3i4O1TVyR2Mzm0rK0A2DSCpJ
      QtM4NzLEudER+udCaSnxoNPJrfVN7K2qSa8EYLUJTkcj1gQyTWZiUV7p7SapaVQHguv6fpIg
      UuLxZikyZB6zeupVN4z84ZYgsL2ikiO93enVqrGwiAKnK8Nowmd3cE/zBh5pv5je3zhkmfpo
      /lVSHRgg1d9P/PSKCWKahA+/iKNJzllZzf0lUqTOPITz/r8DTKSiFmx7P4XWdxS0JILdh1jY
      iNx8F2LxBrSuw2ueMnn86+j9x1juG29MXiXxzJeQSleRuDFNpOo9GAujyHUH39oJ0FjYzLbK
      nZwfXt2MzibZ2VlzB984+eqaNkMpXedwTyej4Xk+ss3Kwnhsdg53d2a5j4DVfvjElXZmYzHu
      27AJATg/NsJPlw2WJcwnEzzbdY2GgkKKXO6c9p7LURcMclNtPf954WzOVUARRW5vbOYnF8/l
      TeHaJJm9VbU815U92Kp9AXZWVNE9PcVoeIF91bXc02xli1Rdp3NmiipfgPs2bKLM40UWJU4P
      9iGlVA42NlMS18nH1RT9Piv3nyMFaiaTpC4/u24PYwB9+BRmfI7k8a+hLm5sAXD4se/+dZRd
      H0cQreEolW62Nql5jAwRJfSB1yDXUzNU9NAAUsOt6L1Hs49x+DGmu4g/9hnrWm9lCCQKIptK
      NtMx3s58IvdPoUgK79v2Mc6O6euu0oK1SYypKTYWl3BpYozncwyg5Rian6Pab73Zv3v2FNoq
      q1IoHqfQ5SahZVMaluBSFD7YtoOGgiJM02RwLpTxUyiixH0bWtldWc3wwlzeybS7qpq7mjaw
      kEwwEQmnz1Hq8fK2xhZ+cP4MM/EYJpayw87KKl7s6eTi+CgpXcelKLSVleNSbHja26l+5HFq
      XzmK8prFp9EmJnKmN/3vfTe2unoir7ySNQlEnxdnQxJib4CCbpoYc4NWVmd5/K8l0YdOITiD
      iKVbrFDU7rUqwiNns88j2RAD1auHOFoC+77PIm96AFNLIggSYkEjyrYPYEYmMedu0F3eciqE
      Q3Gyu2YfcTXOZGQCzdAQAEWy0VTUzCf3f46ZRJDudYpOLcfIwjxNhUW80te9qkQgWO+JpKYx
      EQkzOJ9bsW05kprGeze3MRZeyDaR9nj5YNsOaoIFiIJAfUEhxW4Po+EFi+YcLOCDbTvYUlqG
      KAg0FhTRkyOF65QVyn0+omqKW+sbaSkqZnh+joSmUe0PsJBM0D+3XBZRZSIS4fzYCLphYJom
      84kE07EoLf1DzH79Gxa3xjQxk0m00VGrPdFuv8HlEQQEpxMjHCHZ0QGGgbF8ckoS/gcfRHZO
      Ycy8gfZR07CoyjlfLCbGbA+2ze8FSV6s1i6qecdmwUhZlOdALfbb/wQzPr/mtaWKXdi2vAdl
      4/3Ytn8YZfO7ET0lpF7/14wJ+JaFQFbRKMKR7hc5O3SKmegUDtlBgauQfXUH2V97E6XeMpKa
      wcOXV9kQrXYN4Pnu60yE1+bpg1UllcLr6xFK6houxcZvHzjExbERjvb3EkklqfIFuKuphbpg
      AcLi9+yYGOfJqx1pVYW+2RlODQ9S5vUuWqA6+M29N3FhbITBuRCiKJLSNC6MjaR1hjqnJqny
      B9K1h3yyKrk21COhWaafegExl9tKPE7RH/4BRjKJGY8TeeUVUp1dJK/dWDFtTY3IJSUIsozr
      wH4c27ahXphCu/7Mup4VAKICev4V3IxMYYT60TqfJXXxJ1aIJIiIJZuw7/syoq8KMVBtVXAn
      8zf8L0HwV1jnNTTM+ByCKFkNMyuaZt6SCWCaJgOzfXz91a8yupDZfzsTm2b80ii6ofHetg/S
      OTOV1Yn0RtAfmkVap5SiZhio6yjSLCGaSnFpfJRnO6+lFdJ6ZqfpPTXN5tJy3ru5jUgqyU8v
      X8jI1OimyenhQQIOB3c2ttAXmuH4QD+hRJxit5tbqup4pvNaRsjUMTmec2Vy22xpCkSNP0ht
      MJhhSQTgMkHM05SCaaKHQnjuvAN1dIzZb/9H9nMZn6DkT/8HovMGGUduuY/kyf+zRlHqBuSG
      W9G6ns9/gADqtV+gnv9P0nG7aWBMdKB1/AzHA/+IIIiYhobcdCep8z8ELfeqLvgqkSt3o090
      kDz6VfTJKyBKyDX7EQsbMMZvFPTekgkQiof4xyN/k7fZRTVUfnbpETw2D4bU9F+6lmGayOts
      /CxwutAMg8Q6OrvAkgi8kKOBfsnnK5JKUhsI5tUIOjsyTLHbwyPL5EeG5+e4NjWJQ878aURB
      oMTtzSDLORWF3zpwC72zMxzr7yWiJukPzeJcrAKDVe+4s3mTpcKQx21F9Fs9ytr0VM5NrxGL
      YSwsINhtmIl5UOMIdg/2m36L5Mt/Tc7N6DJIdTdjP/hFtMETkMz9bEVf1WK3Vva5tMGTGKEB
      tK7n0XpfQZAUxIJ6jKnr2bUCmwfH7X+CqcaJP/lFzGV2WVrnc4jBeqSqPehjl8DU3/wJYJom
      T3U8vmanl4nJ4+2PcKDxU//la9YGgnTNrL2H2F5emWUonQ+yKK5pot0fmmVylXNFUkme67qW
      RX+OqyqKKKX19AVgf3Udt9Q18P3zpxkLL6BIEve3tBJ0OFF1PR36zBKjzOPl7oZmFtrbqR4b
      pTIUJVlZQTLHBJBKirG31GMmIyhlpTkdViS/D3PhGvHXfoQ+3g56CsHmQqrcbXVb9byUt7Al
      lrSibH4vRnQaZfN7Uc//IHsfINmw7f+sVcDKBUMjeeRvFzM/ixBE5PpbMVMRjFAfGAZiYRO2
      m34LqWIH6pmHMgZ/+lRzAzhv/xKirxJTS735E0DVU5xap+RJJBmmb+Y6UP5fuuZtDc0sJFcf
      2NX+AHura0hpOmeGh9akU1T4/BlN5PmwcoO8HE5ZyctdEgWBz+69iUcvXySUiKMaOiYmn99/
      My/1dHFyqJ/nuq4yOB9CXUGRjsTj1D31LNoxa8BkDPslQSrBxFYwh7NxmtgPHwBDQ/SU4m6R
      iHXaMLXFoSFJuFoNEs/8bkZ11dQSVkhj92Lb9XGMuSH04dOYahxEGdFfhRmbxpjuIvHU71l/
      ZPMg+KtAjWPGrWcn+quxHfg8csvd6OOXc9IkBIc/mxZhGhjhMVzv/46VWr32FProORLP/Sm2
      PZ/EmM+jE2QamNFphLI29KHX3/wJEE6GmY+vPXCWoOkhEH/5CeCQZWoDQX51x24ebr+Qpclv
      SX74uKOxmXAyScDh5KPbd/HDC2fyaoXur67FY7evawLYZRmbJGfxfATgYF09rw305aRKuBSF
      82MjDC8W0V4fGqBnZpr3bWnjpd6udF3h9PAghS4XgiCke5IbO7vRjuVoGxQE/B/8AKJDRG//
      GpI0CgawOAeNUB82L8hbFVTzTqSyrdirBPQr/5SfWpAMk2p/FPcHf4Dgr8JMhhEkG4lX/hrt
      yorUcyqCmYpg2/tp5Oa7QJQRHAGMqWtoHY8jlW5GC9ZhLvd/sHux7f0MyVe/mnVpMxUl8dL/
      g3b9BovVnB8iefgriMUbct+vKCPY3MQe/TTGxOU3fwIIgpAlyrQaGgsK6V0QM3pc3wiaC4tR
      JIkit4dP7znA9elJrk9NEkmlSGoqk9EIM7Eo3zt3GkkQKXK7ubm2gc/tv5lXeru5NjVBQtMw
      TBNFkthXVcvbmlo4OzK09sWxem/fu6WNn3W0Mx4JY5pmmnNUGyggmkpxpC9TEVkAdlVWZ30+
      HYtyuLszq6gmixL3t2zi+GAfLYUl7Dy54m25BNNEn57CVtEFcn7quGhTcbjP4Xrv75M4/Bdr
      8mpIzJG6+BMct30JwVWAPnYR7eqTeQ9PXfgxyvaPYYT6SPzidzFCS3l5AbGgHnnrg5bciacY
      ZdM7EYP1aNeeShPY0vfpLUPrfC7XF8WYH0YM1lmp12WQm96GPnYp3UT/ptcBFFHheP9RInk2
      Qyvxjs3vwu+0VMreKERB4P1btuFf1NuXRIuasKm4FL/DwfHBfiKpVLqYZWISTaXSQrHvat3K
      wdoGBMEqlKV0nYG5EGdHhinzetdFiNtZUcWeqlp2VVazobiE8XCY+USCUDzOmZEhYqpKtT9A
      LJXCNE0cssLOymr219RydnQ4i7+zoagkvSoswWd30DM7zVwigW4abLraiZBHj0cUp5Biq9uj
      AqBGMWPT6MNnV01f3jg+jrL1/QiihHrlCfShVfzW9BSit5zkkb/FXOHZYMZDIEo4H/hHlIbb
      EN1FCKKEWLYVfbx98f9l5PpbrMHc+0ruaxgajgf+EUSRRDRC0laA0vYgrkO/h9rxM4xFEuab
      vgJIoszNDbfxyIUfrXlsobuIreXbaBNtdE5P5pQBXA031dRTk4O3k1gUfs0no2gCJwb7qQ0W
      oIhilhLDQjLBi92dBJ2uVXuRXYqNg7UNgLVp7p6eztLbnFpkgX7hpkO0T4xxfKCPc6PDdEyM
      ZVku1QUKuH9DK5FUksuLtGa/w0GVz8/pxRVpPBxmrKSYyr7+nPckKUOslbVZgtbzcp7CVTbM
      VBR0FSQlN1V5BdSOxzCjuVmkxvhlKz5vvD39mRioRml7EO3a09a+Yf9vYoRXqUTLTrqiAR4b
      v4ur423EVR3frINd01d4p7eRIFZt6S0Jge7e+HbODp2id5VqnizKfGTXr+G2W/LlH9+5l++c
      eX3Niu4S2soquG9D7i6yq5MTa/J4TOC1RW3OXMNFN038DidFbneWG6J1/yJ7qqqZjkVwKDKy
      KPH6cG7FialohEvjo7zc251+4y9lhpoKiijz+lAkkYaCQnTT4KPbd9M7O82r/b1WjWMZoU4W
      Rarf/z6Evn70FT5atuYmHE09GJPrC9/QUyCub4gIzgDIVl+2uEr3nnWwRH4hdbAqw72wOAFM
      XSVx+CtoV38BmOjDp9HHLuB819cRizdY6dDlf23Cy/EdfP+H59CWCXfNLsR54UwvJ20F/E7p
      Pjakzr01VAhFVNhc1kb/bC+z0ewwwmv38fG9n+Zg/aE0Tdljs7OltIzpWJSZVQavTZK4u3kj
      b9/Qmlff8/hg36oMzSXE1BQRNZWXziwI8Pn9N1Pk8qAtCtEGna60O0v/XIhzo8OcGR7Cb3dw
      YWwk77t3JhZNt1MuhyQKbCwu5aWeLs6MDHF6eJAyj4++0AxnRoaYikYYW5intaSUSl+AhKZx
      ZX6OcOsmah1OxHgMdB37po0Uf/EL6EMvY+bLkGRdXEYq3Yq52pt2EcqW9yNV7wNDRfSWo/W+
      ks70rITceDtiURPGeLZLTPp8G+5HWpxIxvglkkf+HrgxmM14CMHmxnbg81b2KX0tgW7bdr4+
      dSeamXuSpXSBdn0jb3v/r7+5K4BhGlyfvMLLXS/QM91NQo3jUBwIgkixp5SgM8jG0lYO1N1C
      kbs4w909kkoyMj9PXbCAlK6n5Udcig1FEil0udlYXEpbWQV+h2O121j3htoAHKKUV+vHY7Mj
      iSI7K6vYWVkFWAJZ3z5zMmOgR1JJftpx0fo+eSaTx2ZPyw8uRySZ4hfXOtL3HFNVHu24mFEo
      Mxe/kyKZ6ZBsCvDccSv7bDYiL71M8nIHk//rr/EdKF7XdwcQPKXYb/1DYo9+xmo8yXectwKx
      oI7E03+AMd1lZVqcAZAdWTKFUuVu7G/7MsZsL2r7T62waeX5nAXpmF9wF1spzRwVemNuEJJh
      xGA9RmQSqbAZ28Ev8IsXwmh5NesshKIqL/RKb94E0HSNhy/8kGeu/iKnY6NuaHxo569SE6xN
      f2Yu6mg+33WdyxNjedOFtzU0saOict3ukaV5RGVXIuBwsqW0LCsbs4QdFZXEVRUBK90pCAIn
      hwZyrhi6YeC123Pm/euDBRyqb+T7505nrRB+p5PxFfyeWCq1qEp3YyUscLroDWWuppOnXify
      4kvpf6vDw0QvFuEsVFaIUuWGsukdiKVbcNz1FRIv/iXkYOwK3gqksi0knv/z7GyRZEduuA3B
      XQSiYtUGUhGSR/4WwRlAqt6HPngys4hmcyPV7Cf+009ixmdBVJBr91t7ixWTxdRTxB79VHqS
      6aPnCPec4NpQxZrfDeBEx9CbEwKZpsmTHY/x+KVHrDa2HFhIzHN5/BL7aw/iUByYpknXzBTf
      OfM6g/OhvLTj6KIx9Hg4zMbi0oywZ2kCvdrfw+HuTk4M9dMXmiXodNIXml3TDeZAdR13NrUw
      Fl7I2jP4HQ5C8TjPdl7lWH8fPbPTFLs9tI+P5tX2aSkq4UBNHaML86i6JYi7pbScD27dQZnX
      R1LTGVm40YpZ4fXxga3b6Vgx+Us8Xj7ctoPJSISEqlLi9vCOTVuIJJMZm+wdU7MUDmT2QAju
      Qjy33YQ+en7V7y4WNuO468sIsh2xoAGl8Q4wNCv0UJyIwVqULe9DabmX1NmHcqdKTR0zMY/j
      7v+F4C0lefTv0fuOYEx3YYy3Yy6MIVXuRqrYjuAqRK67GfuBz6Oe+c6NkMY0MOYGEUu3WMxQ
      0+rvk6r3WUWtUKancHishycju9clcZNU9TdnAsxEp/jGsX/KEL3KhUgyjCRKbCnfRs/sjOW1
      lUcIaiWmohFGFubZWlqOtKjXf2l8jO+cfZ2umWlCiTgLyQTj4QWuT08hrGFSUehyUeRy89pA
      L4ZpEnA6aSosprGgkAqvj77QLPOJBLppopsGs/EYF8dGkEUxbxV5a1k5t9Y3YZdlOqen0q7v
      W0vLERdN6MLJJHZZ4q6mDTywcTNBl4sKr5/+0CyqoeNfJNDVBIJU+gNcnhhjNh6jLzTLvS2b
      cCkKtpTKXl+APdV1JI5nFsRce/fhecenMdWYVXXN8QzEsq043/FPiO4i6wM9iXrpYbTuw5iJ
      xdh724ex7fo1Uqf/HWM6W+MojUVWZ+rs9zDDK2oPpoEZmcB+6A+wH/gccv0hzOg0ao4Modxy
      D3LNfozQAGKwFvvBL6KPnrcsj5ZBkBReTu0nuQ5OY0nQ/eZMgNd6j3B6aH30h/n4HDc13MF3
      z55+w3qfM7EYiiRRX1BIX2iWH5w/k9clxTBN7JKMXZYzjllycQ+nknTPTDMbjzEbjxGKx7GJ
      Iu9u3crTi8ZxK6GbJpqhW1o8KwaWx2bjvZu3kdQ0Hjp3Ct00MTE1F9PmAAAgAElEQVQZj4Sx
      SZau6LNd1wjFY0RSKcbDYbaWleOy2Sh0udlfU8em4lKuTk5wZmSIvkWeUf9io004mSRgs7Pn
      WhfVj/+c4LHjqNeuI5eWYKoaCALO7dsI/spHMWPjCJIdwVUAWgoUF6KrALFiO/a9n8F+6A8R
      XVb62DR0Es/9GerFH1tENkODZBi9/1UwNPSRs3k3u0sww2PZgz/9nwaCKCE33rH4w+ioF3+S
      mX41TUvJofcVq5ocnULreh7RVZhVR7DX38RQ4GYGJtZOcrznlk1vzh5gaG51teXlmI3NcLir
      Y93pzpU42tfDvupanum8uqa+T0rX+MiWXaR0jelYFIesUB8s4PTIUFa+HqB/LsQj7RdzblaX
      oBoG79vcxpG+nnSOv9zr431bthFwOi1pwhWb8OODfVl7g7lEnOe6rvGRbbtQDQN9sXn+huz5
      TJZbu/n6KeaeejbN6NQmJxFCCkW/80VszU0Q7Sd5+A+sTqt0PC0g+KtQdn4cZfO7ESQl45z6
      6Pm8vP/Uue8j2H15n0X6vtaoCxiRSfSZbrRrT2EmI4iFjRmpTcFVgLkwkjkp1DjG3ADKtg+h
      Xn8GQ00RK2yDnb/P/YaHM9fGiCXzRxw1JX7u2/cmGWSIYn5bzJUQBJH2HHLb60VcUzk+2Lcu
      no6JVeF9+8YbTdS6YfCfF3O04i0iV84/45ymSZHbQ3UgwEwshomJKIgkNQ3TNCn3+nApSgbP
      SMnzfAbmQpwdHebZzqskNY0ClyvtL+ZUFO6rbeDFni7GU0kagkEaT5zNojObqkrs9GkUf4j4
      83+Wg45sWvyZl/4KY+oq9tv+JGMS6CPnyFs401PW5nQNyNV7raJanvOYqQjxh38Nc2mTLYhI
      lbsQy7Yi+ipAkEi+9FfZfxcLIW/9AB0lH+bxI5fp7dFQO8/gtMm4HArxlJpzL1Bd4uNLHz2I
      XXmTskANhevn9PscxUTV/5plwXp5OkBWJdeEVSXOnYpCUtPyhlZOxcZLPV1cn75B9x5emOMH
      F87w2b03UeiyuEZH+rpx2ywjbLfNxuNXcquuPd5xKb1ijIfDtJaUUjo9S+XhI9h+9Cj3CgJC
      cxMlH/0IIU0nV9CoT3UTP/zDvFx864sbqO2PIBY0YNv+0XRxTcjjM7YEZeuD1iY4z7kFfzX2
      W/8IIzqNMX4pxwlcmLHZG4N/8V70mW4cb/8HRHcx2tCpnLaqpuzg8VNj/OTkREbBK6Vav40o
      CjSUBzAxCcdSFAfc7G+t4tC2Go5dGuTopcE3ZwJsr9xJwBlkbh0s0Nay3fSur8koL/IJUeWC
      c0XjiSQIVPoCGSpsy9FUWITf4cibGm0tKeXcaHahKa6qHBvos3qOF1enBo+XWxuaUHWdo/29
      GQU+URBoLSlLt0QuQR4aYfPPfmE5LS5+Zp6/wHT/APZNG0n1ZN+XLF+B9TBwTZPUmYeQNz6A
      6LTCK6n2JnjtnyHXhHf4UdoeRAzWkXzpr7L2AoK7GKX1XeiTV7Df9Nskj/0jxuTVRTo2CI4A
      9kN/QOrsd7PXhlTUyvq4i5HK2pAq96APZ8qbt9sP8pOT42h67hemYZhMz8f4m8++jYpCK/Wt
      ajpfe+wURy5YVfk3ZRNsk+z4HH7OD5/JMLlYiQ0lm3jHlg9zfuyXN7wDK31omuSVEl+OW+ub
      KPPeiGMFQaDQ5eLCWLbTukNW+EDbdraWVZBQVUYXFiwKsmBREG5vaKalqJjzo7ltVqejkYwV
      ZzoWpdoXoNDlxm2zMRkJo4gSFT4f79i4hZ2VVZwZHrzREmqa7HvlGL7Z7MFsJhLIFZVIwcAN
      Ty5RxLVnOzbv5bztg1lIxZArdyEG66zn4SpcVGhYkTYVZeyH/giSCzcaVQQRqagFqXQzUt1B
      jPlh9O7DaJ3Pofe/ZmV6NtyPER6z0qlOP6KrCNNQM5QawJo89j2fRJAdCJKMVHfQEsAKTyB4
      ipHbPsJ/jO9kfG51ol5S1ZElke1N5QgCvH5lhB8dvrHavikukYIgcHPDrXxi32/gsWUXoURB
      ZHvlLr5w6A8p8+YV6V43gk4Xt9Y3rnlcsdtyVVd1PWOw1wSCfGLXXip9fmRRtPg1/gCf2rOf
      Uo8XWRR556Yt/MqO3fgcdgSs5pZoKokkiCh5KBi5bEuvTk3w1WMv80j7BaZjUWyyzHs2t7G5
      tAy3rPChojIaR8cpiyW4u7aBmlD+7IY2Mkzx7/0u7oMHEV0uHK2t+N59D2ir854yYcmXmLqK
      2vk8iWf+yKoZOANg81h05cY7cL7zXzDGLhJ/8ouo7Y9Y2aCFEczEPPabf8d6gy9LUZrxWZLH
      /wUzNoMxeQX0FObCKKkz/2E1rQduFECxebDf8ruwbIMtyHaM6DTmYqgVLd1H7+T6JvWlnom0
      QvaZ66MZkdSbxgUSBIG6ggb21x3E7wxgmAKIPgo89dzW/A7e0/YgBS4fNlnm4thI3maU9eDm
      ugb2VtUQisdzyw6aVkgZcDo5MdjPsYE+rkyOE9dUit0ebJJMgcvFrspqZEEknEogIBDXVEq9
      XhyywujCPD+6eC6t9JDSdYYX5ukLzVAdCGYVzgqcLh7cup2OyfH0j+GQFUbDCxnfNaamGJwL
      sbuwmJmvfR0e/ilNPX20Xu2kxjDRxscz7IiWQwoWgK4TfvppTFVFm5wk1X0Vm3doXYrMS5Cr
      95A6+33UU/+KMdNtpRq1BOgq8ob7cdz9V+iDJyyV5RUruhmftQpds/3Z6VE1ZqnJrdgvmIl5
      XO/6GsniHZyJ1/OCcC9HJou5PmhVtov8LvRLP7FSsaYBiXlmRnp5fm4DhrH2ftFuk7h3bxOy
      JHL04gCDkzfGxJtOhotr0DVrMhEPIEjVCGIZYxGDk4MDXJmcwCZJ+J3OdXHtc8GpKLy7dQt2
      WaG1pIyAw8FsPEZisbfWLsuYgIFVdIqpllHcXCJO5/QU16cnqQ8W4LbZONzTyeHuTsKpFAuL
      Vdau6SlaS0p5/MrlnPLoCU2jxONlT1U10VQKURTYWFTCg1u3UeUPUOLxMBCapczr5faGJi5P
      ZId70VSK+hdfxjy5jFNvmqgDg5irvBjch24hfvL1jOZ3PRLDXrqAIKyzpiKImIl5jByOigDG
      eDuCqxD12lOYkdw90WZ0GsHuydzYAshOBMWZQ/FNoKfgbv7uqMbzfQq9sybDUwt0Ds1w9OIA
      1wZnaDGv4JxdRp5TXLyc3JXe8K6GyiIfd+9tRBQEpuZiXOi+cd9v2gQwTZNzo8N879xphhfm
      cxLSwqlk+g2Zy0huPbizsYUqf4BQLIaq69QVFHKgpo49VdXsr6nDNMkQk1qJSCpF7+wMNYEg
      j3dcyrqHaCqFqhtcn57Ie38JVeWu5g0MzIWYjcVI6TpFLg8I8OOL51hIJgknkwgCOVWhJV1n
      x4tHkHKoSYheL6Lfh7miN0Kpr6Pgk79O7MQJ9NCygSfKuHduhGjuTftKCO5iq2i1yophzPZY
      nP+8WSUTZfuHLTmSpXqDIGLb8TGkoib00czOrn6xib+9VMPkfG4KyUQoyuVZB7vt13CQAEHC
      c8vn6UmVMTy1dmPVoe21hBbivHiuD1XTGZ0Jk1ycOG8aF+jC2AgPt19Y16CeTyRuMEHfwHVK
      PV5EQeAX1zt4baCXk0MDXJ2awK3YqPIHSGgqj16+tGaBLKpa3rx5ewYEq/Kaj0ohCgLXp6cY
      mp9DMwxiaoori3ylpcZ8Eyvc8TscWeFekz/AhjPns7x1AUSfj9K//LLllJ5MYmoaSnk5wY//
      CkpFBaLTSeLCxfTfuvbtw/eBz6D1vbKqZr51cgVl6/swckkSLoeWRPQUW1maXFCcOO74n0iF
      jehT1xHdxdgOfhHbzl9FKmvDCI8uNq0LGMEmvrXwDoYjqyckF1QFs/5t7Ln5dux7PonceDul
      BR5eax9CzWPWDeB325met/oAOodmuDY4bVFb3A40w3hzJkAoHue7Z19HewNvdMM0qfD5MU1z
      XWnNCp+fWCrJwFwo7cJomCYLyQQdE2PYJJnpWHTdsuZxVc2wFlqOlqJiErqWd5/iVmw56wsx
      NZXxAvDY7Pzqjj1MRMLpXgCHrHCwoQlf/yBmDmM6157deA7dgqO1ldRAP6meXoy5OaLHT4Cm
      4b37bhybWzGiUZTKCnwPvB25vBq5Yjva0Mn8QlayHfvBLyDXH0K9/NPVH45kw7b301b2J8dv
      KrfcA6mw1cgen8VMzCMIInLjrZhqwhLKjUwiV+1ifNef85PXp9ZFXpuOCdx97704AuUkUhqq
      puN12+kans2oAyyhvNBDVYmfzqHMcNowTMoLPfzPjx/6r00A3dC5OHKOp688wQvXnuHM0OtM
      RSYo9pTgVCwTadM0ebbrWpYaw3qQUDU+uXs/hmkwE4tmrR4Clj3o2ze0MhuLMZpHZ9/E0uiJ
      q6m8TM2VEASBCp8/S83BJkm8q3UrxS4P16YmslYoWRS5u3lDRiFsCdsrqhAEgWgqhSJJFLs9
      TEQibC4t487GFrpnp1lIJrg6NclcUSENg8MIyWX+u2VlFH7us4guF7GTrzP/8CM3BqBhkOzq
      wrFhA9GjrxI7+TrayAixY69hahrOvbeiNN8Fesri0RsqiCIolr6P484/R95wP4Ldi9rx2Kpt
      jWLxRhx3/hlINksnyLgR5kj1h7Dt/BiJF/5i2TlMjFAfgjNA6sx30HtesjbEoX7O9kc4s1CW
      91rLkdJ09m2s5GLPBP/48EkeO3qNjv5JnHaFyiIvXqcdmyJRUejlnn2NfOqBnbx0tpfZcPZv
      Hk2qvPPghl++EDYdmeSbx/6Ja5OZrn2nBo7zRPtP+dDOX+XOlnswTJP28V/OvE41dEYX5vnA
      1h08sGEzvaGZxZhaw2t3UOnzU+71MRuP8ejl1e2WVENfVxfYEiRB4H1btvFC93U6p6fQDYOg
      08X9GzZR5fNT6fOjGTov9XSlM0EBh5N7WjbSVlZB18xUhn6nQ5a5rb4Jv8PBZCTMiaF+zo4M
      0xea5fzoMBuLS5mO3gi5up127vzSHxM4f4H4+Qvo09PYW5pJ9fQg+XykunLYOOk6848+lqHr
      aaoqC08+iXP7NmRfEmO2zxqwgoDor8F+558jVe60tDMBbC5su3+d5NG/z/1gBAn7vs8iiDK2
      PZ9Crr+V1Imvo4+cQyyow7b7E5jhiZwTSOt7NSv+T86vn/ZimiaHz/by0rk+9GXZn7lIAlXT
      +R+/cgtNlQUospg2B5Sl3ClpURDQDfOXWwHm43P85XP/g4EVkhNLUA2V8yNn8Ng9BFyVHF2h
      VflG4LbZ2VxahiJJlHi81AYLaCgoosofwOdwIAoCvbMzXFzHJBPXoEAvR6nHy6H6BhKaxkQk
      gm4a+B1OKr1+Sj1eJFFMT8DR8AKqrlPgclHq8VHm9dFaUgqLVqmKJPHOTVtpKChAXuZXsNzr
      IKFpGaGeKIjctHETzkiU6CtHMCIR1IFB680+Po5cXESyI9syVFAUjMiKjbVhIjnC6Bf/xuLP
      G5rFsEzMoQ+eQGm5B8F+oz4jlm2xil/jlzMJaIoL+61/hLzx7Yt7NBP14o9RLz8OWhwzPI7W
      +SyC3b1onrFCvqX+FkvWfFkYlvDU8tpCw7p+E0UWGZuJpDewy6FqBguxJLfvqEsbnYiCQCSu
      ZmR9llAccHGyY/iNrwCmafKfZ7/LZGTtmfvjs9/H76p/o5fIQDRHn+xKrOWysoQSj5eFRCJn
      7+1K7Kio4qlrVzg5dKNCOTw/x8Pt55mKRri7eQMXx0Z55PKFdEZrYC7EwFyIq1PjfHTbLraU
      lXN+bJj5RIL/e+kcE5Em7mragCgIFLk9GWnUzSVlJHWN9vFRBEFgf3UtRbrBxA9/iLk8bDNN
      YidOEvjQB5ErK9FGblSd7Zs24mhtZf7Rx7K+jzn2C3Bkb+rNyCSp09/BceefYapx1Cs/t/p5
      YzMI/koE2YFUvh0xWIvceAeivzL9t8ZsH6mz38vMGGkJtJ6Xkap2ZzizCw4/KE7EQB36wqi1
      AgXr2Xzn71P6427GZ/OYYSxDccDNxCrH9Y2GSCQ1rg5M8dK5PmbDCYr8LhoqggxMzKHrpiWE
      VuhhdiFuVYnXvOoKzMVDHO87uq5jVUPlSPfzQPMbvUwatjXIWGBtgG2StOZmeVNxKUGnk8c6
      Lq26EjQWFFLgcvHU9ew3rAkc7e+hJhDksSuXcqZzr0xO8NpgPx0TY+k9h26avNTTTWtJGSld
      p9DlJuBwYpgGNYEC3lZdCxcusKOrHzkQoGbrTrTBIYy5HGGbaZIaGqLkS3/M/MMPkxoawrlz
      J9777gVNI3ryJNoy53d7Sz2ypwfyMEP0kbMY4QniP/9tq0q74vsKnlLst/wugs2d8X/GTHdW
      zy9YhS3bgc9jNNyOPnYBweZG7X4R9cxD1gGiguNtf4G88X4QFT5wu41vPH46I6xZCZdd4cHb
      Wvnmz/IfJ4kCjx65wqNHr2ZsqhVZ5D23bKKswEOB18G1wRkeftmSYHzDIdDlsYuc6H913cfL
      ooCsNP7SLu5tZRU0FBSueoxdlpmNxxldJcZ3Kzbe3bqVhoJCvDZL1nCl7LooCGwqKeMDW3dw
      YWwk78bdME3Gwgurbqjnk3EWEomsSTkWXuCVvm6rw0s3uKOxmfur6wj/89eIPP0MyuAQUmcX
      seMnkPw+kldzO9so1dWk+vuJHT+BPjePmUjibGtDKi5GKa9AHRhAdDjx3ncPgY98GO3qo/nl
      xN1F6APHMVYory3BnBvATMwj1d+aTk+DNdC1Kz8nK1mtOLHv/Qxy3UGUlnswYtPoyxXcTANT
      T2FrfRdgFapMEzqHZnK+mLwuG597zx4ObK7m1LVRQjk2tQClBR5OXhlm5fwwDJOJ2Qiffedu
      assCPHb0anrFecMrQDS59lK1HKqeYGNh0Zo8+lwQgE0lpWsfJwjc37KJ2ViUnhwVZEkQ2FZe
      yWw8ik2S2FddS3NRMZfGRhmYCxFTU8zGYrjtdiq8PhKauuZqsjI7tBKxlEq1P5iRdhUQGFmY
      T//IumlwfKCf1tPnSXRkisIa4TDRo68iFRVZXl0ZX0gCTSfy3A29/VRPD7MPfRfnzh3M/9+H
      MZNJEARSvX0I99+PVLMvb2OLYPeuruQGqFeewLb3U+gL46jnf4CxMIoYqEHwVWTJrCgbH8Bw
      FqNrFhEtV8HMTITpHQ3x7KlurvRPEU2o2BVrI25XJARBwOe209ZYyjsOtFBZ7EUQBH71njb+
      7kfHs5pdSoNuGsqD9I7mfmnNLMTpHpmlrbE0o3r8hidAwLk+h8QlBF1BDtU1/lIToLmomArv
      2h1HAC6bjY/v3Mup4QEujI0yF49jmGY69358sI/jg30oksT2sgru39DK7Y3NRFJJHjrzOuFU
      knAqyXh4gSP9PTSusuoIWBKFubwBllDkdvPu1q0kLmkMzYdwyAo319VnaXumNJVYe3tOmSg9
      FCL4iV9j4ec/T4tcCXY73gfejjaZnWZNXb9O6vr1G3QJ0yR+7jyRwy/iufV30McuZrUQiqWb
      EUu35PbjyriZFMkT37Qm0WIDvDF5BUQFqWqP5b0lygx69nEkdAtd/+cwmm5QXujl5pomNksu
      FN2qjRgIvBjZwo//7UUSqey4zGmX+dQDOzmwuQqbbE2GeFLlWPsQ/eNzbK4vZnw2QjSuIkkC
      m+uK+eAdW3j5fF/WuZYjqVrXqi8P0NFvPc83PAFaSjZil+1ps+q1sLV8O02FReytqsnp0pgP
      LkXhXZu2Ziy5a8Euy9xS18hNNfWE4nG+feYEsRW1KlXXOT0yxEh4gc/sOcAz169maW2quk7X
      zDQBhzNna2ZjYRHv2LiZ/tAMc3nCoAPVdbhtNhoKCpmORbDLsuUXFizI8CpoLSnD4XCQ82kK
      Ao7Nrbh27yLy0suoo2O49u/FuWMHC4//LOd1c3GFkp1deB+4H8fbvkLy6N9jRqcsF5X6Q9h2
      /gqppdh8VZi5wx1DtXj97/oWPz/eyY9fvk5SvfFiGJiY5/WrsDv4CT5TcQa3mOCMvoMfXK1C
      y+MpEI6l+PaT56gu8dNYEWR6LsZffu9IRp+v0y7zuXfvYe/GCuw2S5JmQ3VR3ru3KRJ1ZVaP
      w917GnnhTO8vpwohiwoJLcH1yatrHuuxe/nswS/gUBw0FxYzHYuuy3zCrVhv8wqf/43cWhoC
      8PT1K6sS6sLJJCld49LEWM6NrGma3FLXiF2SmU/EMU0TmyThsdtRRJEzI0OYmFnN8aIgcKi+
      kZvrGnilr5vD3Z2kdJ2YqtI9M82e6hpKPV5mYzEaCwt5z5Y2ZE0ncS5bpsTe0oJzz25mvvWv
      RI8cQR200qDq8DCeu+8ieb0TY94aFILdjvfee0h2dWdVZ+31RTD0XVKv/6uVhtRVpPLt2A/+
      NoLDhxmbWd2YOv1Uc8PUUpxUbuPff3EhLy1hNO5kvvx2dr3rc/zzkQXmo2vY3Wo6oYU4B7dW
      87XHTtHRlxlBaLrB1YFp7t3XhN0mY5omQa+TzqEZJkPZ2a6NNUV0D8/yyJErXB+cIehzMr0Q
      e+MTQBAEWoo3cn3yKtN5xE3Bsjf9rZt/j7pCK8criSJbSsrw2OyMhudzxtjWJrSUD2/bRYXP
      94be/suR0DQeab+4Zs5/IhJG0428TTptZRW8fcMmtpVX0lZeiVuxcX1qkvmklUpdGvzNhcU0
      FRYRcDpJqFr68zPDQ1m+xoZpktBUxiNhpmNRIskk23ftxgiHSQ0OpXt6lZoaCj7168x+81uk
      OpcVvUwTbWQEfWaGwi/8NsnOLvRQCMntxrl7F4KiZKRGJb8HR+HrsLC8cGa5Muqzfcgb7kX0
      laNeeyq/Ly+W0wuYoGaLAae8tXyto5yF6OpRwfDUAooicaJjfdKMoXCCPZsq+c/nL+WkOiRS
      GhtqijAMk/946hw/OnyZhWiSpKYhSyKSKBD0OCjwOukdC9E/Pk8onGBsJsJEKEp1if+XK4RJ
      osy+2oNEUxGGQgNZTu8eu5d7Nz5Ama8cWVJwyE7LF0AQqA4E2VtdS7U/QNDppNDlptRjuSU6
      FYVIKsXpkUHOjAymxasKXe4MF/e1MB5eyMjf54Nhmngd9pxO7AICdzdvwO9w4rLZcMgyP7l0
      Pqdhn4nJJ3bt47X+XqZiURaSCa5NTaAZZtbqYppkVKQnImF2Vlbj9ngwwhEEUcRz910UfvqT
      pAYGCT+de+OqjVub6/jrp1iyPU20Xyb4oQ8iyDLa5CTOtjb897dijuZ+u5tzg+ncvljYhNb9
      Yk7FOMFdjPOd/4wgO9BX0qQFkcH6X+PJq2t335kmjM2EiSXWp/WkGQbbmso41j6Y92VWFvTw
      0DMXuDY4QySeIpa0GuGri318+RO3cdv2Op44dj1n2+R8NJl7Alj+snMc7XmZp648wXPXnuJE
      /zH6Z3pRJIUCVyE22cb2yl3c1HCISn8V1cFaAs4g09EpklqCqxMdvNr7Cs9fe4bu6evUBOvw
      L/aZyos6/U2FRSiSxOtDA4wvEsJiaoqkphFNpZiIhLk8McbF8VGCTifFbs+6HlwkleL1dUwA
      AYF3t26la3oqi2fUXFhMkdtNVE3hsdkZWZjPO6mSmsbm0jJe6evO7CzzB5lPJtLriyKKHKpv
      pHvZHkA2DDY/8wLxnzyMNjaGEQ6TXNzImvE4ySvZtYglaBMTVrZnCYaBPjtL4tIlzGQSY2EB
      W0kEIvmEq0yk6j2IhY2WmbSrECPUa21yBcDmRW66E+d9f4sUrEOq2G5dY6YHTA3BVYT95t+l
      23OQ45fX91YXBAFVW582qygI3L+/mZ7RUM7UpyyJJFSNkRyU6PlokrJCD6NTYc525m+xzdoE
      a4bG0x1P8MTlR4mvWO4ujZ7n6as/Z2NJK7++/zepClRT6i2jpOUe2scu8Py1p0muKIxohsqF
      kbNcn7zK7932JTaXtwHWJHttoI+nrl9ZM1SZiUX5wfkzvHPTFg7U1GX8n2ma6KZJKB4joaqW
      kJTTlSU9kgt+h4Nt5ZWUeLy81NPFyMI8DllmNhaje2Yq3Rhf6vFyc+0qFW1BwC7LNBcWp9Oe
      Nkni9sYmTg4N0Ds7Q5XPz6H6RpoKi1lIJDg5NIAsihy81o10ZkUGxjAIP/0M9o15bH4WYaut
      IdGeqbCsjY+nN8JGNEqyJ4ndlf8cphon/rPPow+eSGt0Cq4CbHs+bekELVIkTNNkOpzitHw/
      fYVtiGqYDS3N7Gqqxz2cv79iJaqKffSMzK5a9FqCx2WjssjLx+/dxv/+watZFIh79zVx+mr+
      TFxH3xSlQXfe/4cVE0AzNL517J840X9s1T+6NnmFrzz7J/zBHX/KhpJNzCfm+PrRr5JYpfE6
      rsb42qtf5e/e+S/4HH46JsfXNfiXYJgmP796GZ/dzuZSyzPMNE2uTE7wUm8X4+EFSyFZFKnw
      +SnxeNMK0vnQVl7BlYlxBEHgPa1bcdtsvNTbxfNdmXrzE5Ewh3s6Mzx5l6Pc60MSxP+vs/OM
      juM8s/RToXNEN3ImkQgCIAFSJEVROVAWZVmigrPXcTwO4zkz653ZP3tmz+7xGe/s2B57PfaO
      x57d9bEtS5YtWR4rUjIpkpKYRBAEQRAkck7d6Jyqq2p/FAii2d0gpfsTXeiu6q6vvjfc915K
      bLbVhVDKZl8pz/X3rfULVpJJfDY7i7Eoo8EAgiCwt6aebS8dKtagRQ1HEJ3OfG4PIJWV4Xn8
      cdRQGGVmxhiA370LU00t4eeeMw4SRWx7P4Z2abgwDdriJvPO/0KP5/YZ9ESQ9LHvIjgrMLXu
      R9U0Xjs5wq/fvEAkcW3HefViH+VHhnnirnZcdjPRxI2nzj60u5nXT49wafLGrp3Vfhf/9lIv
      EwthbBbjVnU7LPjcNvbf0sTt2+rp3eDpbpJEqks3FkJeC4F0Xed3fb/mjcuv3vDEwHB7PDf9
      Hvs23clrl/5I/9zGbEyAdDaNWbLQVNrO/33vVFH/3GLQgV7/zT8AAB15SURBVLGVIHvqGpAE
      gbcnxnh+oI9wKrW2kDRdJ5xKEUmnkESx6AK7Gta8NztF3/ws5+dnqXS5eX14qGBOkM5m2VVT
      x3I8nhPXu8wWnujcxi96z3AlYLBGZVEkkk7l0LMTioKiaYyuBBgOLKPrOnPBINvP9iEU+R5E
      hwPfl75I8tw5WLebCSYTgkkmdvgIWiyGqaaa0r/4Os7770dPJFDm5pD9Ptwf+QiOe/cjlTaR
      HTuWI2ArOMsRvbXowSK1c11DnT+PqespXj0zwc9eOluwZh9PKfSPLlBd6iYY3XhIfVOVl889
      1M2mKi/vDkxvGApJokAgnGR8PkQoliKVMYQLHr19C3/15B6aanxIosBsIMqVAjuQIMDBO9vZ
      3V7Dkd4xUpnCRZe1BbAYm+efj/1TUfXmQkhnUySVBAPz/URuNG20iqSSxGnbwvkPSJFOq1m8
      ViOpfub82aJDNjpGB3hndS1pVUVRVURBwG93sK+hkelwKEfENpXNMhoMEE2ni9I2eqpr+fCW
      rUTTKZbicWwmE/tb27DKMu+s0++JZtKG99h1CbBFkvDa7Gt+ZxaziZ1zi1DEwNrc2oLn4GMG
      92d4BLmsDPdjj6JFo2RnZ42pL1VFC4cRZInU+X5CzzyLFgojWKx4P/4xRJsFPTIH6QhadB7B
      6sG883NY7/s7lN6nNxbLysQIeXfwvVfGC978V6FqOiZZZHN1ScESJBjsy//4sb1UlDgp9dhp
      qvExOLlEPJkbpgpAc40PTddJpvM/c2gywJ3dDThtZsNssKqEgbGlnMUnAHUVHgQB3rkwjcUk
      E4gk8oZuZEm8FgIdvvJGQd3+G+Ht0bduWpcfIBBfLjgI/n7QvzDHdCRcsCKzHoqmYTWZ+Obt
      dxPLpBEQcFosjASWOTScnxiGU0nMklxUT6jc4WRgcYGLiwurXWaFFwb6KbXnxpl2k4lNJf48
      I+16l4fbvD5i09NELRbu2dpBiclB8H//S/6HSRKuhx4i9Kunib5i7MrZ+XnUUMgIea5D4uQp
      I/Zf/ZWz8/Mk3jmKST5J9vIra7RmXUmiDL2CXL93TWJkI5w+N0Ak7r3hcUuhBH/2yE56Wqo4
      dGaE5bBxw+m6jkmWaKrxcXkqgM9lw+e20d1cwXe+up/j/ZO8fnqEmaUoDpuJh29t4c7uRr7+
      vZcKfk4mqzI0FSCVyfLSu1eYWgxjNUtsbSzFZjFhliUSaYWLY0tMrmucWUwSt3ZU47Ca8Dis
      9F6ZZ3gmaCwAXde5OF9Ymu9GyNzIQvM62Ez2m2qGbYSZcPiGXJyrGF8JIonimlMkUNQ6SRAE
      9tY38NbYSN4usKnEhygIvDR0cc2P9yqWEzFcZitOi4VoOoXbYiWVVZBXQzABaA7H2Prr3xCd
      muYuVUUs8eKKJXE88ABaKET4hd+v0Z5FpxPvpz6Jpa2V5e//IOez4kePIUhS3vkJJpNxXuty
      FHX4BQQhv8Gmr4yTevO/I5id6MVGJI13ZSp5c5U3TddZCsV5/M4tPLy3haVQnOePDnKkd4JU
      JsuJgWlODEzz9KF+vnZwF7d11mGSJcbmVphejKCoGpmoyu+ODhJPKQiiAEXoWBdGF/nxC6dz
      diUBePyudh7c1cQ3f/R6XkMurajMB2L8jz+/38hpThkiAWt3wkZNrRvBKm9sSbQeWyo6iroz
      3ixS2eyG+p3rUajLW+32UFnAJabeU8IDzW0c7NiGx2pFwChdbqus4tM9t9A7O5138xsQSKlZ
      DnZsAwRmoxFGggGjjl1ZzZfLq7n/1TcQrwyjp1LoioK6uETol08Teu63uD7yCFX/+D+xdncb
      8b3FQmZ0FDUQQDDlis9KXg+2W/dc9/ECzv0P4Dn4GILVCpKEpb0Z2VK8FKwFRhBdGxMNxbI2
      TOWtGx6Tc26iiCAIWM0yEwthDveO5+Vg0WSG7z93gpHZFX5zeIDXT4/m3KzJdJYXjw8V7Ttb
      TBLHz0/mhWQ68MKxSzx/7BLRZOH7a2IhzOxyFFEUkOXVoZm1i30fYcz1uH3z3Tdlfi0KEvu3
      HMjxt/ogMEtSjpzhRih0o5sliU9s30G9p2RN+a3J5+ej27qRJYndtfUc3LqNSpcbp9mCrhul
      2I12HVXTODo2kjdsMxpYxvTHl6GQxauuE3vtdZTJKcLPPUfq3DljcQQCxA69weK3/h7H7fsM
      9ieAyYTniccp+dSncH34YeSqKuSKCjxPPYn7kQ8jV1Uhud1IvhJc++8AbSNbWR2pcR9S7a7C
      L1s9WO//r7Q23JiNCyBJIk01BlFS03Sef2swL+a+irSi8vShft58r/CkoKbrOO3mvBKmxSTx
      4O7morLnmqZz5lLx3FLTdTJZFQGBe3oajfO+mgT3zpxhKZbPMLwZfGbXFymx+7i0MLDhcU92
      f5K9jfu4sDh/0yFMIVS73dxa38iF+Y1zCVEQeKi1nVJH7hcpCAIOsyGVktVUfDYHO2vqqPOU
      IGAMtDzdd5ZwOkUqm2UxHqN/3lCWKHbeVpOJSqcrT4nOkkzR8c7JopUeVBUtFiXx9jt5L+nJ
      JHJFBd6PPUX64kUEUSK7HED2+3Deew/q4hLK1BR6Ko1cVsry976PFomgJxKkBy9iqQhs6AVm
      6jiIZe/XQRDRIrNGH8BkNzrDZW3ooUl8LjMnZ0RiN+jedm4q47E7tiCKAvGUwi9eP79hrX8l
      liSZzhZdJBaTzLe/fB8eh4VgNEWl38k3Ht9NTamLw73jRd+3qaaEYCRZsPrnthsPs//zci9z
      gRjVfqeRAwiCQHfNjg+UB7gsbjb7m2kpa8NpdvG788+QyORWAiRBort2J5v9TURSYcPt/AM4
      v19Fe3kFW8sr6aqs3rCatLOmjhZ/PkPwahPulcuDayHS+flZNpX4+FT3Tt4Yvpwnf55a7U4X
      mzzrqaqhscRP39xMTld5k9uDpG8kCQypIkMvAKnz58kuzK+JXaUHBlgeHsZ14CGir70Guo4a
      DKIsLORIJqoxBZxtEDpb+I0tLtSFATJ9zyJIJmPAveketOUrpF75z2jBUVRAvvA8n618nB8k
      OgpWZQD8bhtf+vCOtQF0URBWqSsbyMxbTOg6qEWqSw6rifH5EIfOjLKwWln6+18e496eTVhM
      UsG5YIAHdzdR5Xfx+ulcITBJFCgvcfDSu9dMz80m6doOUOWu4U9XXkcpYFu5ER7pPEhn1XYE
      QaClrI27mu6jxlNLmbOcRt9mwqkQ8UycucgMb4+9xZuXX8VjNRFKOz7QlJhFknmqsxubyURr
      aRnpbJbFWDTnphNWj8vqKienJhkJBpAEEf+qwcREaIWnz5/Ne0qEUkkWYjHmY5GCuYNZknii
      czuToZW1HoYkiIiiwGwkzNDyIuVOQzs0q6mGU3xTK84LF9AjRRJ/UcTS0lKQ3w+gq2r+QIyq
      Gh3fdVRsU021MWmVSgE6ppoyPJ/8CurM6fwmmGQByYQ2fRo9No8emUUdO4pgdqCOHl4daF87
      A8qzU3Tu/zyTK1nC8fTaU1sUBCxmmepSF4Pjy1wcX0IUBKpLXVwYW1y7cQvhvh2bcNrNzCwX
      /l7aG8r4/fEhwusIdllV48p0EI/DSrLAwmlvKOWJu7ayu70Gu0UmGE0iAFV+o5scjKSYXlon
      G7leFcIsmfHavJydKqwJWQg1njoObH2U0cAwwfgydrMDt9VDo38z26p76Jvt5cJ1DbKslmUs
      cBmTJCHLN6cHsx4H2tppKTW8bmVRoq20nM6KKiqcLmrcXiRRYCWZIKtrRNNpYpk0C7EoffOz
      zEejtJWV89bYSFGJlJVkArMkFzTA8NntPNy2lT11DTT7y+isqKK7qoZzs9NoukF8SykKBzu6
      GFxaJK5kuLi8iMVup3x0vKCIlLWzE8/HP0r8raMFXzc31KOG8ndLS3MzoseNurKC6HRS8tnP
      4HroIfToJGbHe1jLR8kO/QEBwZAhd5SBxYlU3YO5+xOow2/kvae6cBFdTecryOkqNbc+xb13
      7GJHaxVt9aXUV3iYXY4SS2YIhJPMBWIMz6xw7Pwk4wshHtzdxKnBmYJhkM9t4y+f3MP2pgrO
      jy7m3OQAO1orsZhlxuYKRwl2m4mP39vJ7HIUJatit5oo99qJxDO8ePwS/aOLPHFXO/f0bGJi
      Icz8SmytP7F++F5gXQ4gCAINJZuQJInBhYENdfyNfzaS3tdXiXLHR4/w5uVXiaQitJW3sxhb
      4F/f+WHR90llFuiuvZWVm2QGgkE5sMgy706OM7i0QEJR8NnteG126lb9sv40coVi3YGleIxg
      IkFcyWzoNt9VVZ0XywtAZ2UVum44j9R5vJQ7XSQyGU6vc6TRMZSir/6/DqyUeLm1uQV1fPxa
      R1eSsG7fhu8rXzYkDU0mUgMXcxaBpa0V/1e/QvLU6VxlCEHA9fABg1g2M4NcUYHj7ruQbBn0
      oe8hyWEEVEOtIZuETBzTzv+A7cG/x7T1EUjHyA7+If/CdQ2ptDlvakyw+TF3PYlsdVDm81Dm
      dfDLQ+dZCBZQmQBmlqKkMlk+tX8bV6YCxFPXooqmmhL+9hP7DCEru4V9nXU4bWaSaQWnzcwj
      t7Xy+QM9vHpymOVw4SQ+q2r8xeO7efzOLezf1cz+XU38+7uXWYmmULIaiytxRmZXGJ5Z4Z0L
      UyTTWZZCCeKpDDWlLqKJNLIk4nFac9mggiDQVr6V5tJWpkIThAsYI1tlKz57KfFMjLSau3Kz
      Wpbh5SGuLF1CwCDPFYOOzgOtu2kpa2Z8JbghJ+hqpSaaTjMZDq0N1gwuLXBxcZ4atwe31cqv
      +84WndC6isVYFJvJVDyZlU18YeduREFkKR5D1w03SVXXmQqH6Juf5cTkOMFkgrbSctxWG+Mr
      wTXjvK6KKipcLsbW8ZAcFit3378f157daJEoWjyOubER94EDmBvqEUQRc2srlqYmUgMD6Ok0
      1q5OSv/6r5D8fmMAfngYLZVGsFpxf+hBBLOZyO9fNJLoUIjM5CRy5s3rwpdrUBcuYOp8EtHi
      BMmM0vdsngCu4CzHeuAfDa3/q7qfomQ4N55/FuXii4glDfzxYppjfRtP980FYuzrqucLB3qo
      9DlZCMZwWE1sqS+lyu+kzONYG3U83DvOpYllVmIpRudWSKSzJFIZ5gKF5xMcFhOP39WOxSxj
      s5gYnwvx8onhnGPC8RTLoQSZ7LVrzGY1vvmx2zhwawsHbm1heCaYT4cWBIFKdxV3t9zP9pod
      VHtqqCtpoKOyi/taP8SjXU9waOhllA2qC0vxRaZCE6QKSGasx7bqHu5r3sP2qmoEQSChKGux
      t0mSKLHZ2VFTh1WWWYjFCu4lCUVhaHmRGreHw6PDBY7IR43bQzSdLiiSe2djE+3lFTT5/Oyq
      rWdHdR3RdCpvR5iLRpBEkU0lPmRRJJhMsq2ymse2dlHhNBZALJPGZjJxoG0rVaJE4Mf/Qqq3
      Fz2VQl1aIvH22yjTM9h29KDH4wR+9GPU1VzA0PYfwX7rHkSrlez8Alo0hnVbF56nniRx4gTK
      2DUej56OY7b2gl7kd1EVpKptSP5mMDtAFFe5/avfqmTGeu9/Qa7fg6ntIcSKDuTGfeiZuOHe
      oquQjpKZOMWvZrcQjN04V5QlAbfDyk/+8B4LK3GiyQwjsysc7ZtE13Vaav1899l3OTk4Ywwm
      6Ya/16XJZSRRJJooPGBzd08Dt3XWX7t2XeeVk7lUdL/bRoXPwXL4GkXCYpap9jsZmgoQTaSZ
      XAwXnwmWRZnWsi20lm3J+fsfB14gUWAq6HrcjB9Yo28zwqpI1EfaO3lki27Ij2sqJlHCbjYz
      F43wo3c3ZqdG0mn+fXDjEux6SKLAZ3pu4bcX+nJmfmvcHjb7/KSyClbZhMNsNkyti/iF9c5O
      E0mn1mYPZlfp1HdvbqGjvBJV0+ioqKSrooqVH/6oILc/eeoU4VI/iBLKVC6nPj04SPTlV4i/
      dZTsqnNm4thxsgsLuB7cT/zIW2sq0JbWZhAKmNCtx+oDSRAEzLu+iFTZiXLhebJjRxGdFeix
      BfR0DMHqwdT6IACZ/t/lvIWSDLMcCgKWjT8LGJsL8eMXThOKXUeRVzV++9YgqqYXVG0DCEQS
      3N3TyFt9EzkmGC21Pj5+X1fOsX6PnY/sa+XF40Oomo7dauJzH+pmJZpkdC6EklWxmGRUTeP/
      vXotJxWED6AL9MeB3zMbKc7BXo8Su59UEZHVtvIOumvv5fT0FCcmxzk7O81oMICiqZQ5nDgt
      FkRB4OTUBCPBG1Nnk4py01WlhhIfd6y6yLT4y9Zygkg6zdnZac5MT+G2WKh0utB0nSOjVwrK
      uiuqxlQ4d6HPRMLEMxmOjA0Ty6QZCwawxmI4nvtdwSQXQJmZRU/ECya7mdExtOv+rgaCuPY/
      gGVLM3p4GMtmP95PfQ5t8Rx6vEgvR5Aw7/06ot1QuxAEAcFaQubcr9DD04YR9eS7aCsTyM33
      rWmF6pGZHMUIwdvIMW0f0eTNVQsDkcK/v6brTC2Gi5YzVU3jy4/sZP+uzZS4bFSXulgOJQjH
      0xw+O0YinaW9oZSB8UW+/cvj9I8u4rSb+cz+bTx591Z+/moffzo7jqrp1Ja5eXB3E30j+WqG
      77slm90g9LkeX9jz57xw/jeMBnJDE6+9EYv1Nn565mQeteDU9CQOs5l99Zu4Y9NmgoU6qAWg
      YwjQ3gzF+mpvwCLLJJQMQ0uLOYsnlknzm/5zuCxWmnx+Gkp8BWVdqlxuJq9bAFlNY3AdCU4H
      rgxepHED4p6eTEKRTrxos6EWMOZWRo4jBF7E5jcS8OTzRxG9DRjpemHJcvE6u9rs1Em063o/
      2dEjaMERxNI2YskMo6WPEnNPUxk/T2VdE/a7vknX0QAzgRsbbpR5HXkVnpuFLIm47RZqy920
      1vr54fOn1mYREimFZ968YHCzTlwmHDP+Hk8pHDs/ycRCOKeCNL0UWeP+5H3O+z2xWm8952aK
      NFfWwSSZ2VrRSdeHujk7dYqhRSMxTmleJiJWVlLFb4h4JsPrw0NMhFdwmm+81YIhoXhH42YO
      DQ9teFyF00VHuVF+1XW9IPENjCfU0bERmv2lfHhLBz87fSIncS61O/jE9h6e7jub4yrf4i/D
      IkuE1nWpfTcS95JlPE89wfIPfphT7RE9Hvxf/QpL3/luzuijaM+gj/wEhHUPIyWJtnQJ0d+M
      Fl+GtQKGgFjRgbnn05BNg2kdbytToBKmq6TiMX5zpo/XT4+QSCnADiRxJ13OCr6ULeXhvX6O
      908RK8K5AagpdXHwzi1855l3inZ7d7ZVMzS5XDDZ7dxUTqXfIOKlFbUgxeEPbw/lncPYXGj1
      nHNRzOvhfYdAbquHP105xI28W/Y03Ma+zXchiRK13nq2V/fgtDXw1sRiwSZTIQQScVJZ5aae
      6ptK/Bzs6CKSTheVSPRYrXy2Zzduq3ETqLrOq5cvFT0fVdPY17DJaLRpGivJBH6Hg7s3N/No
      excui5Vql5vxlSBWWWZHTS0f2drJZp+fpWgUIRSiGZH923vQLl1akzC5HtZtXXiefAJrRwda
      OGJQIMpKKf3a17BsbcdUX0d6eAQ9kcBUX4erW0fIFKnCCCKOT/8WuW6XocEfXUCPL6JcfJHs
      yJuI7ioEb70RAllcZIdeypEyVz2b+Kfhdg73zeQMrOi6UUN/u3+Se3dsoq3OT9/IPJkCQy0G
      9/82OhrK6B9dLFjOtFtNfO2xXexsq+bC6OJaqVQAWmv9/OWTe3A7jIefphlJ7vUcoOpSJ/Gk
      kpv8emzs7ajl4sS1sFkQ4MuP7GR8PpRTkjXJ4vtfAB6rl5SS5MpS8Set1+blG3f+JxzrxFQV
      TeUXvWfeNwcolc1ilqQNrZVkUeRgRxelDidbyirw2+2sJBMks8bFmiQJt9VKR0UViqoiiSIO
      szFQcWZmqujscInNzvhKkJeGLjKzOn8Qz2Tw2x10VFRyenpqzSlSR2dfw2Zq3B6kuQXq/vBH
      2o69Q8P5C2SOHkO0WNDi8bw8QLDZ8H70KeSyUuTyMgRJInnuHOpygNSFAcwN9cilpSROnUaL
      xZDLyrH4ZyFVhL2rZjB3f8JQbj77c2MKTNdAVw39n5HDSNXdhsqzbEW0+VADVxAkE1J1D4dd
      n+bl/uIU6bSiMrkY5rMPdrOzrZq0kiWWzJDJqnicFu6/ZTNff2wXDRUeZEmko7GMK9NBguty
      Aa/TylcevYVtTRWUee3saa9hcSXOSjSF12Xlts46Wmr92CyG4JUkiaQzWfpHr+U3kijwtcd2
      UVfu4eL4Epqu41hdVPfu2EQwkmAuECOraty1vYGP3tPBrR21JFIZ0opKmdfBVx+95YPpAnVU
      dqFpGqOBK3mSKH57KV+7/a+pK2nIYZgOLM7nuZ7fLFwWKx6rrSCN2iSKPNTWzvbKmjXplWq3
      hz11DdxSW4dJkpmLRNZcHi8tLXJmZorFWJRNPh+qrhcV0DKJYkFDvelwCJMk8dqVS2sd46ym
      MRYMsEs2E/j2P6CMjyOoqnHDKwpaNIpos2Hdvs0wfna5DI8vRSFx8hTJs72Y62oJ/utPjaRX
      19ETCTLjE2RGRslcvrzG+xGEGWR7kQeJbMPc82nSh/4OPVlgJlpT0KPzSNU9pF7+G5T+34KS
      RKruxvzAt/jJkbm8qs31CIST3NZZaySm4QTDs0ESKQVV08mqGj63nfpyD4Ig4LJbuGNbPSZZ
      YnY5isth4eAdW7hreyOyJBKIJPn+cyfoHZ5HUTUSKYWBsSWO90/SUOml0mf0C9rqSzHJIvGk
      wubqEj73UDe7tlSztbGMcq+Dwcll/G47m6q8NNf4qCl1c/LiDPGUwsRCmMtTQe7paaS9oYyz
      l+cYnwtxcWL5g+kCiYJIR2UXextvx+8ow2PzsBRbJKtlyWTTvDN+lHfHj6OoGRp9mxEFkSNj
      w8xHP9ggTFbT+OwOI3RJZAytT6tswmu10VFRSbnDCYKA3WRCXCemdXZ2mteuXMojr2m6zkIs
      ynhohYfb2gkmkzlujQKws6aWUCq1totcj7lIJC80U1WV1tfeRJgozMPXFQVrRwdlf/s3CBbL
      mqYPuo4WCpEeGkINruTsEno2C6KQI5MuV9QiWwvLkMhtH0Ku6jY8fIs5PWbiqLPvGdUdLQta
      Fj00QTIe4ZnhkoIiVDnXATRVl/DrN/t5+cQw8aShxaNqOsFIkncHpokk0uxoMcQLjvSO86tD
      /cSSGeIphd7heeaDcXpaKvnn508XLIUm01n6RubZ11lPNJnhu8++y9G+CZJpheYaHw/uacJs
      kpkNRPn2L98mlswQiqU4NTiD32Pn+aODOYmwQYHQOTEwzZmhOTRdJ55SPrhHmCAIOC0uar31
      HBp6lfno3OqXo6PpGtF0hP65c1xeusTuhr0cHRtbsxJ6v9B0na7KKnbV1LNrVVRrOhxiMR5j
      KhziwsI8p2emmFgJUu324LBYWEkm+VXf2YKcnqsIp1JYZBOPtndQ7/VhkWRK7Q72t2xhX8Nm
      Do9cKZofWGQZq2zKGZ8sR6Dr2Ls5A+zXQ41Gcd53L7E33kAZz10oejaL7PWirat8WZqbce1/
      gGTvOUM1TpKwbtsHmo6gzSKsy8Wk6h6sD35rrXNLsRFXUUKPLuYtkGwixGuxHSgFRKSux2wg
      xtBUcenJ4ekglT4nHoeFfyig5jy5GCab1ThybrxokpzKZLGaZZ47PMDg5DKqpqNkNcbmQgTC
      CW7dWsuhM2OcGcpNkJfDCWaWozldYDCeK8FoMmeH++BTMBhVlJ+f+ilDi8XFmy7O9/OL0/92
      U06PG+HqxcxEQjzd9x7TkXBOXqBqGlcCy/zszAnmImEGFudIFXl6r0fv7DSKpjETCa1SKxb4
      w+AFTk6N47XZiv5ftdvNJ7fvoNzhxCRKVDhdPNWyZUMjazBKnrqiIFeU570m+X34v/F1LO1b
      EL1eRKeT7Pw84ed+i7VjKyWf/xxyeTmxN94kcjxBKnYv5l1/huCpBcmEnlwh/cZ/Q12+jFha
      fJJLqtwOcn51zWq1sqny5gaNZpY2GqU08PvjlxieXcmRUrkKXYe3+iZuqA90tG+C0QKkuBMX
      Z4gmMljNUt5rbocFrzN/SrHC52B7cy4B8/8DzM1fdq0yYhoAAAAASUVORK5CYII=
    </thumbnail>
  </thumbnails>
</workbook>
